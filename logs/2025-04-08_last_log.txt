[08.04.2025 03:28] Read previous papers.
[08.04.2025 03:28] Generating top page (month).
[08.04.2025 03:28] Writing top page (month).
[08.04.2025 04:13] Read previous papers.
[08.04.2025 04:13] Get feed.
[08.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.05305
[08.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.05304
[08.04.2025 04:13] Extract page data from URL. URL: https://huggingface.co/papers/2504.05298
[08.04.2025 04:13] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[08.04.2025 04:13] No deleted papers detected.
[08.04.2025 04:13] Downloading and parsing papers (pdf, html). Total: 3.
[08.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.05305.
[08.04.2025 04:13] Extra JSON file exists (./assets/json/2504.05305.json), skip PDF parsing.
[08.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.05305.json), skip HTML parsing.
[08.04.2025 04:13] Success.
[08.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.05304.
[08.04.2025 04:13] Extra JSON file exists (./assets/json/2504.05304.json), skip PDF parsing.
[08.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.05304.json), skip HTML parsing.
[08.04.2025 04:13] Success.
[08.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.05298.
[08.04.2025 04:13] Downloading paper 2504.05298 from http://arxiv.org/pdf/2504.05298v1...
[08.04.2025 04:13] Extracting affiliations from text.
[08.04.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 7 ] . [ 1 8 9 2 5 0 . 4 0 5 2 : r One-Minute Video Generation with Test-Time Training Karan Dalal*4 Daniel Koceja2 Gashon Hussein2 Jiarui Xu1,3 Yue Zhao5 Youjin Song2 Shihao Han1 Ka Chun Cheung1 Jan Kautz1 Carlos Guestrin2 Tatsunori Hashimoto2 Sanmi Koyejo2 Yejin Choi1 Yu Sun1,2 Xiaolong Wang1,3 1NVIDIA 2Stanford University 3UCSD 4UC Berkeley 5UT Austin Figure 1. TTT layers enable pre-trained Diffusion Transformer to generate one-minute videos from text storyboards. We use Tom and Jerry cartoons as proof of concept. The videos tell complex stories with coherent scenes composed of dynamic motion. Every video is produced directly by the model in single shot, without editing, stitching, or post-processing. Every story is newly created. "
[08.04.2025 04:13] Response: ```python
["NVIDIA", "Stanford University", "UCSD", "UC Berkeley", "UT Austin"]
```
[08.04.2025 04:13] Deleting PDF ./assets/pdf/2504.05298.pdf.
[08.04.2025 04:13] Success.
[08.04.2025 04:13] Enriching papers with extra data.
[08.04.2025 04:13] ********************************************************************************
[08.04.2025 04:13] Abstract 0. Region-level captioning aims to generate natural language descriptions for specific image regions while highlighting their distinguishing features. However, existing methods struggle to produce unique captions across multi-granularity, limiting their real-world applicability. To address the need for...
[08.04.2025 04:13] ********************************************************************************
[08.04.2025 04:13] Abstract 1. Diffusion models approximate the denoising distribution as a Gaussian and predict its mean, whereas flow matching models reparameterize the Gaussian mean as flow velocity. However, they underperform in few-step sampling due to discretization error and tend to produce over-saturated colors under clas...
[08.04.2025 04:13] ********************************************************************************
[08.04.2025 04:13] Abstract 2. Transformers today still struggle to generate one-minute videos because self-attention layers are inefficient for long context. Alternatives such as Mamba layers struggle with complex multi-scene stories because their hidden states are less expressive. We experiment with Test-Time Training (TTT) lay...
[08.04.2025 04:13] Read previous papers.
[08.04.2025 04:13] Generating reviews via LLM API.
[08.04.2025 04:13] Using data from previous issue: {"categories": ["#data", "#games", "#cv", "#interpretability", "#dataset", "#benchmark", "#multimodal"], "emoji": "üñºÔ∏è", "ru": {"title": "–¢–æ—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞", "desc": "–°—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö URECA –¥–ª—è –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ
[08.04.2025 04:13] Using data from previous issue: {"categories": ["#training", "#cv", "#diffusion", "#inference"], "emoji": "üåä", "ru": {"title": "GMFlow: –º–æ—â–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –≥–∞—É—Å—Å–æ–≤—ã–º–∏ —Å–º–µ—Å—è–º–∏", "desc": "–°—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å Gaussian mixture flow matching (GMFlow) –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. GMFlow –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–∏–Ω–∞
[08.04.2025 04:13] Querying the API.
[08.04.2025 04:13] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Transformers today still struggle to generate one-minute videos because self-attention layers are inefficient for long context. Alternatives such as Mamba layers struggle with complex multi-scene stories because their hidden states are less expressive. We experiment with Test-Time Training (TTT) layers, whose hidden states themselves can be neural networks, therefore more expressive. Adding TTT layers into a pre-trained Transformer enables it to generate one-minute videos from text storyboards. For proof of concept, we curate a dataset based on Tom and Jerry cartoons. Compared to baselines such as Mamba~2, Gated DeltaNet, and sliding-window attention layers, TTT layers generate much more coherent videos that tell complex stories, leading by 34 Elo points in a human evaluation of 100 videos per method. Although promising, results still contain artifacts, likely due to the limited capability of the pre-trained 5B model. The efficiency of our implementation can also be improved. We have only experimented with one-minute videos due to resource constraints, but the approach can be extended to longer videos and more complex stories. Sample videos, code and annotations are available at: https://test-time-training.github.io/video-dit
[08.04.2025 04:13] Response: {
  "desc": "–≠—Ç–∞ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª–∏–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ª–æ–µ–≤ Test-Time Training (TTT) –≤ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–∞—Ö. TTT —Å–ª–æ–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª–µ–µ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä—ã—Ç—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è, —á—Ç–æ —É–ª—É—á—à–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–ª–æ–∂–Ω—ã—Ö –º–Ω–æ–≥–æ—Å—Ü–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞–º–∏ –≤—Ä–æ–¥–µ Mamba. –ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–≤–µ–ª–∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –Ω–∞ –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤ '–¢–æ–º –∏ –î–∂–µ—Ä—Ä–∏', –ø–æ–∫–∞–∑–∞–≤ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ TTT —Å–ª–æ–µ–≤ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–≤—è–∑–Ω—ã—Ö –º–∏–Ω—É—Ç–Ω—ã—Ö –≤–∏–¥–µ–æ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ä–∞—Å–∫–∞–¥—Ä–æ–≤–∫–∞–º. –•–æ—Ç—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–Ω–æ–≥–æ–æ–±–µ—â–∞—é—â–∏–µ, –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã, –≤–µ—Ä–æ—è—Ç–Ω–æ –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏.",
  "emoji": "üé¨",
  "title": "TTT —Å–ª–æ–∏: –ø—Ä–æ—Ä—ã–≤ –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª–∏–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–∞–º–∏"
}
[08.04.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Transformers today still struggle to generate one-minute videos because self-attention layers are inefficient for long context. Alternatives such as Mamba layers struggle with complex multi-scene stories because their hidden states are less expressive. We experiment with Test-Time Training (TTT) layers, whose hidden states themselves can be neural networks, therefore more expressive. Adding TTT layers into a pre-trained Transformer enables it to generate one-minute videos from text storyboards. For proof of concept, we curate a dataset based on Tom and Jerry cartoons. Compared to baselines such as Mamba~2, Gated DeltaNet, and sliding-window attention layers, TTT layers generate much more coherent videos that tell complex stories, leading by 34 Elo points in a human evaluation of 100 videos per method. Although promising, results still contain artifacts, likely due to the limited capability of the pre-trained 5B model. The efficiency of our implementation can also be improved. We have only experimented with one-minute videos due to resource constraints, but the approach can be extended to longer videos and more complex stories. Sample videos, code and annotations are available at: https://test-time-training.github.io/video-dit"

[08.04.2025 04:13] Response: ```python
['VIDEO', 'DATASET', 'TRAINING']
```
[08.04.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Transformers today still struggle to generate one-minute videos because self-attention layers are inefficient for long context. Alternatives such as Mamba layers struggle with complex multi-scene stories because their hidden states are less expressive. We experiment with Test-Time Training (TTT) layers, whose hidden states themselves can be neural networks, therefore more expressive. Adding TTT layers into a pre-trained Transformer enables it to generate one-minute videos from text storyboards. For proof of concept, we curate a dataset based on Tom and Jerry cartoons. Compared to baselines such as Mamba~2, Gated DeltaNet, and sliding-window attention layers, TTT layers generate much more coherent videos that tell complex stories, leading by 34 Elo points in a human evaluation of 100 videos per method. Although promising, results still contain artifacts, likely due to the limited capability of the pre-trained 5B model. The efficiency of our implementation can also be improved. We have only experimented with one-minute videos due to resource constraints, but the approach can be extended to longer videos and more complex stories. Sample videos, code and annotations are available at: https://test-time-training.github.io/video-dit"

[08.04.2025 04:13] Response: ```python
["LONG_CONTEXT", "STORY_GENERATION"]
```
[08.04.2025 04:13] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper addresses the challenge of generating one-minute videos from text using Transformers, which struggle with long contexts due to inefficient self-attention layers. The authors introduce Test-Time Training (TTT) layers, which enhance the expressiveness of hidden states by allowing them to be neural networks. By integrating TTT layers into a pre-trained Transformer, the model significantly improves video coherence and storytelling ability compared to existing methods like Mamba and Gated DeltaNet. The results show a notable increase in human evaluation scores, although the authors acknowledge the presence of artifacts and the need for further efficiency improvements.","title":"Enhancing Video Generation with Test-Time Training Layers"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='This paper addresses the challenge of generating one-minute videos from text using Transformers, which struggle with long contexts due to inefficient self-attention layers. The authors introduce Test-Time Training (TTT) layers, which enhance the expressiveness of hidden states by allowing them to be neural networks. By integrating TTT layers into a pre-trained Transformer, the model significantly improves video coherence and storytelling ability compared to existing methods like Mamba and Gated DeltaNet. The results show a notable increase in human evaluation scores, although the authors acknowledge the presence of artifacts and the need for further efficiency improvements.', title='Enhancing Video Generation with Test-Time Training Layers'))
[08.04.2025 04:13] Response: ParsedChatCompletionMessage[Article](content='{"desc":"Êú¨ÊñáÊé¢ËÆ®‰∫ÜÂú®ÁîüÊàê‰∏ÄÂàÜÈíüËßÜÈ¢ëÊó∂ÔºåÂèòÊç¢Âô®Ê®°ÂûãÈù¢‰∏¥ÁöÑÊåëÊàòÔºåÂ∞§ÂÖ∂ÊòØËá™Ê≥®ÊÑèÂäõÂ±ÇÂú®Â§ÑÁêÜÈïø‰∏ä‰∏ãÊñáÊó∂ÁöÑ‰ΩéÊïà„ÄÇÊàë‰ª¨ÊèêÂá∫‰∫ÜÊµãËØïÊó∂ËÆ≠ÁªÉÔºàTTTÔºâÂ±ÇÔºåËøô‰∫õÂ±ÇÁöÑÈöêËóèÁä∂ÊÄÅÂèØ‰ª•ÊòØÁ•ûÁªèÁΩëÁªúÔºå‰ªéËÄåÊèêÈ´ò‰∫ÜË°®ËææËÉΩÂäõ„ÄÇÈÄöËøáÂ∞ÜTTTÂ±ÇÊ∑ªÂä†Âà∞È¢ÑËÆ≠ÁªÉÁöÑÂèòÊç¢Âô®‰∏≠ÔºåÊàë‰ª¨ËÉΩÂ§ü‰ªéÊñáÊú¨ÊïÖ‰∫ãÊùøÁîüÊàêÊõ¥ËøûË¥ØÁöÑ‰∏ÄÂàÜÈíüËßÜÈ¢ë„ÄÇÂ∞ΩÁÆ°ÁªìÊûúÊòæÁ§∫Âá∫ËâØÂ•ΩÁöÑÊΩúÂäõÔºå‰ΩÜ‰ªçÂ≠òÂú®‰∏Ä‰∫õ‰º™ÂΩ±ÔºåË°®ÊòéÈ¢ÑËÆ≠ÁªÉÁöÑ5BÊ®°ÂûãËÉΩÂäõÊúâÈôê„ÄÇ","title":"ÊèêÂçáËßÜÈ¢ëÁîüÊàêÁöÑË°®ËææËÉΩÂäõ"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='Êú¨ÊñáÊé¢ËÆ®‰∫ÜÂú®ÁîüÊàê‰∏ÄÂàÜÈíüËßÜÈ¢ëÊó∂ÔºåÂèòÊç¢Âô®Ê®°ÂûãÈù¢‰∏¥ÁöÑÊåëÊàòÔºåÂ∞§ÂÖ∂ÊòØËá™Ê≥®ÊÑèÂäõÂ±ÇÂú®Â§ÑÁêÜÈïø‰∏ä‰∏ãÊñáÊó∂ÁöÑ‰ΩéÊïà„ÄÇÊàë‰ª¨ÊèêÂá∫‰∫ÜÊµãËØïÊó∂ËÆ≠ÁªÉÔºàTTTÔºâÂ±ÇÔºåËøô‰∫õÂ±ÇÁöÑÈöêËóèÁä∂ÊÄÅÂèØ‰ª•ÊòØÁ•ûÁªèÁΩëÁªúÔºå‰ªéËÄåÊèêÈ´ò‰∫ÜË°®ËææËÉΩÂäõ„ÄÇÈÄöËøáÂ∞ÜTTTÂ±ÇÊ∑ªÂä†Âà∞È¢ÑËÆ≠ÁªÉÁöÑÂèòÊç¢Âô®‰∏≠ÔºåÊàë‰ª¨ËÉΩÂ§ü‰ªéÊñáÊú¨ÊïÖ‰∫ãÊùøÁîüÊàêÊõ¥ËøûË¥ØÁöÑ‰∏ÄÂàÜÈíüËßÜÈ¢ë„ÄÇÂ∞ΩÁÆ°ÁªìÊûúÊòæÁ§∫Âá∫ËâØÂ•ΩÁöÑÊΩúÂäõÔºå‰ΩÜ‰ªçÂ≠òÂú®‰∏Ä‰∫õ‰º™ÂΩ±ÔºåË°®ÊòéÈ¢ÑËÆ≠ÁªÉÁöÑ5BÊ®°ÂûãËÉΩÂäõÊúâÈôê„ÄÇ', title='ÊèêÂçáËßÜÈ¢ëÁîüÊàêÁöÑË°®ËææËÉΩÂäõ'))
[08.04.2025 04:13] Loading Chinese text from previous data.
[08.04.2025 04:13] Renaming data file.
[08.04.2025 04:13] Renaming previous data. hf_papers.json to ./d/2025-04-08.json
[08.04.2025 04:13] Saving new data file.
[08.04.2025 04:13] Generating page.
[08.04.2025 04:13] Renaming previous page.
[08.04.2025 04:13] Renaming previous data. index.html to ./d/2025-04-08.html
[08.04.2025 04:13] [Experimental] Generating Chinese page for reading.
[08.04.2025 04:13] Chinese vocab [{'word': 'Ê∂µÁõñ', 'pinyin': 'h√°ng√†i', 'trans': 'cover'}, {'word': 'Âü∫ÂáÜ', 'pinyin': 'jƒ´zh«în', 'trans': 'benchmark'}, {'word': 'Ê≥®Èáä', 'pinyin': 'zh√πsh√¨', 'trans': 'annotate'}, {'word': 'ËØÑ‰º∞', 'pinyin': 'p√≠ngg≈´', 'trans': 'evaluate'}, {'word': 'ÂÖàËøõ', 'pinyin': 'xiƒÅnj√¨n', 'trans': 'advanced'}, {'word': 'ËØ¶ÁªÜ', 'pinyin': 'xi√°ngx√¨', 'trans': 'detailed'}, {'word': 'ÂàÜÊûê', 'pinyin': 'fƒìnxƒ´', 'trans': 'analysis'}, {'word': 'ÂÆ£Â∏É', 'pinyin': 'xuƒÅnb√π', 'trans': 'announce'}, {'word': 'ÊàêÁ´ã', 'pinyin': 'ch√©ngl√¨', 'trans': 'establish'}, {'word': 'ÂºÄÊ∫ê', 'pinyin': 'kƒÅiyu√°n', 'trans': 'open-source'}, {'word': 'Á§æÂå∫', 'pinyin': 'sh√®q≈´', 'trans': 'community'}, {'word': 'Êó®Âú®', 'pinyin': 'zh«êz√†i', 'trans': 'aim to'}, {'word': 'ÊûÑÂª∫', 'pinyin': 'g√≤uji√†n', 'trans': 'build'}, {'word': '‰ªªÂä°', 'pinyin': 'r√®nw√π', 'trans': 'task'}, {'word': 'Âº∫ÂåñÂ≠¶‰π†', 'pinyin': 'qi√°ng hu√† xu√©x√≠', 'trans': 'reinforcement learning'}, {'word': 'ËÆ≠ÁªÉ', 'pinyin': 'x√πnli√†n', 'trans': 'training'}, {'word': 'Êï∞ÊçÆÈõÜ', 'pinyin': 'sh√πj√πj√≠', 'trans': 'dataset'}]
[08.04.2025 04:13] Renaming previous Chinese page.
[08.04.2025 04:13] Renaming previous data. zh.html to ./d/2025-04-07_zh_reading_task.html
[08.04.2025 04:13] Writing Chinese reading task.
[08.04.2025 04:13] Writing result.
[08.04.2025 04:13] Renaming log file.
[08.04.2025 04:13] Renaming previous data. log.txt to ./logs/2025-04-08_last_log.txt
