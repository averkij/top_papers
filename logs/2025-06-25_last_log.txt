[25.06.2025 02:46] Read previous papers.
[25.06.2025 02:46] Generating top page (month).
[25.06.2025 02:46] Writing top page (month).
[25.06.2025 03:46] Read previous papers.
[25.06.2025 03:46] Get feed.
[25.06.2025 03:46] Get page data from previous paper. URL: https://huggingface.co/papers/2506.19851
[25.06.2025 03:46] Extract page data from URL. URL: https://huggingface.co/papers/2506.16141
[25.06.2025 03:46] Extract page data from URL. URL: https://huggingface.co/papers/2506.19767
[25.06.2025 03:46] Extract page data from URL. URL: https://huggingface.co/papers/2506.19290
[25.06.2025 03:46] Get page data from previous paper. URL: https://huggingface.co/papers/2506.19838
[25.06.2025 03:46] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[25.06.2025 03:46] No deleted papers detected.
[25.06.2025 03:46] Downloading and parsing papers (pdf, html). Total: 5.
[25.06.2025 03:46] Downloading and parsing paper https://huggingface.co/papers/2506.19851.
[25.06.2025 03:46] Extra JSON file exists (./assets/json/2506.19851.json), skip PDF parsing.
[25.06.2025 03:46] Paper image links file exists (./assets/img_data/2506.19851.json), skip HTML parsing.
[25.06.2025 03:46] Success.
[25.06.2025 03:46] Downloading and parsing paper https://huggingface.co/papers/2506.16141.
[25.06.2025 03:46] Downloading paper 2506.16141 from http://arxiv.org/pdf/2506.16141v1...
[25.06.2025 03:46] Extracting affiliations from text.
[25.06.2025 03:46] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 9 1 ] . [ 1 1 4 1 6 1 . 6 0 5 2 : r GRPO-CARE: Consistency-Aware Reinforcement Learning for Multimodal Reasoning Yi Chen1,2, Yuying Ge2, Rui Wang3, Yixiao Ge2, Junhao Cheng2, Ying Shan2, Xihui Liu1 1The University of Hong Kong, 2ARC Lab, Tencent PCG, 3The Chinese University of Hong Kong https://github.com/TencentARC/GRPO-CARE Figure 1: (a) SEED-Bench-R1 (SB-R1) provides systematic, three-level evaluation of post-training methods for MLLMs in video understanding, encompassing tasks that require both perception and reasoning to tackle complex real-world scenarios. (b) Our analysis identifies key limitation of standard outcome-supervised GRPO: while it improves answer accuracy, it often compromises logical consistency between reasoning and answers. By introducing an adaptive, group-relative consistency bonus via reference-likelihood calibration, our GRPO-CARE achieves higher answer accuracy across all difficulty levels and improves interpretability, as reflected by increased consistency rates. "
[25.06.2025 03:46] Response: ```python
["The University of Hong Kong", "ARC Lab, Tencent PCG", "The Chinese University of Hong Kong"]
```
[25.06.2025 03:46] Deleting PDF ./assets/pdf/2506.16141.pdf.
[25.06.2025 03:46] Success.
[25.06.2025 03:46] Downloading and parsing paper https://huggingface.co/papers/2506.19767.
[25.06.2025 03:46] Downloading paper 2506.19767 from http://arxiv.org/pdf/2506.19767v1...
[25.06.2025 03:46] Extracting affiliations from text.
[25.06.2025 03:46] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 4 2 ] . [ 1 7 6 7 9 1 . 6 0 5 2 : r Supervised and Reinforcement Fine-Tuning SRFT: SINGLE-STAGE METHOD WITH SUPERVISED AND REINFORCEMENT FINE-TUNING FOR REASONING Yuqian Fu, Tinghong Chen, Jiajun Chai, Xihuai Wang, Songjun Tu, Guojun Yin, Wei Lin, Qichao Zhang, Yuanheng Zhu, Dongbin Zhao Institute of Automation, Chinese Academy of Sciences School of Artificial Intelligence, University of Chinese Academy of Sciences Meituan Shanghai Jiao Tong University {fuyuqian2022,yuanheng.zhu}@ia.ac.cn "
[25.06.2025 03:46] Response: ```python
[
    "Institute of Automation, Chinese Academy of Sciences",
    "School of Artificial Intelligence, University of Chinese Academy of Sciences",
    "Meituan",
    "Shanghai Jiao Tong University"
]
```
[25.06.2025 03:46] Deleting PDF ./assets/pdf/2506.19767.pdf.
[25.06.2025 03:46] Success.
[25.06.2025 03:46] Downloading and parsing paper https://huggingface.co/papers/2506.19290.
[25.06.2025 03:46] Downloading paper 2506.19290 from http://arxiv.org/pdf/2506.19290v1...
[25.06.2025 03:46] Extracting affiliations from text.
[25.06.2025 03:46] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"Skywork-SWE: Unveiling Data Scaling Laws for Software Engineering in LLMs Liang Zeng, Yongcong Li, Yuzhen Xiao, Changshi Li, Chris Yuhao Liu, Rui Yan, Tianwen Wei, Jujie He, Xuchen Song, Yang Liu, and Yahui Zhou Skywork AI, Kunlun Inc Software engineering (SWE) has recently emerged as crucial testbed for next-generation LLM agents, demanding inherent capabilities in two critical dimensions: sustained iterative problem-solving (e.g., >50 interaction rounds) and long-context dependency resolution (e.g., >32k tokens). However, the data curation process in SWE remains notoriously time-consuming, as it heavily relies on manual annotation for code file filtering and the setup of dedicated runtime environments to execute and validate unit tests. Consequently, most existing datasets are limited to only few thousand GitHub-sourced instances. To this end, we propose an incremental, automated data-curation pipeline that systematically scales both the volume and diversity of SWE datasets. Our dataset comprises 10,169 real-world Python task instances from 2,531 distinct GitHub repositories, each accompanied by task specified in natural language and dedicated runtime-environment image for automated unit-test validation. We have carefully curated over 8,000 successfully runtime-validated training trajectories from our proposed SWE dataset. When fine-tuning the Skywork-SWE model on these trajectories, we uncover striking data scaling phenomenon: the trained models performance for software engineering capabilities in LLMs continues to improve as the data size increases, showing no signs of saturation. Notably, our Skywork-SWE model achieves 38.0% pass@1 accuracy on the SWE-bench Verified benchmark without using verifiers or multiple rollouts, establishing new state-of-the-art (SOTA) among the Qwen2.5Coder-32B-based LLMs built on the OpenHands agent framework. Furthermore, with the incorporation of test-time scaling techniques, the performance further improves to 47.0% accuracy, surp"
[25.06.2025 03:46] Response: ```python
["Skywork AI, Kunlun Inc"]
```
[25.06.2025 03:46] Deleting PDF ./assets/pdf/2506.19290.pdf.
[25.06.2025 03:46] Success.
[25.06.2025 03:46] Downloading and parsing paper https://huggingface.co/papers/2506.19838.
[25.06.2025 03:46] Extra JSON file exists (./assets/json/2506.19838.json), skip PDF parsing.
[25.06.2025 03:46] Paper image links file exists (./assets/img_data/2506.19838.json), skip HTML parsing.
[25.06.2025 03:46] Success.
[25.06.2025 03:46] Enriching papers with extra data.
[25.06.2025 03:46] ********************************************************************************
[25.06.2025 03:46] Abstract 0. AnimaX creates multi-skeleton 3D animations by blending video diffusion model priors with skeleton-based control, using joint video-pose diffusion and shared positional encodings.  					AI-generated summary 				 We present AnimaX, a feed-forward 3D animation framework that bridges the motion priors ...
[25.06.2025 03:46] ********************************************************************************
[25.06.2025 03:46] Abstract 1. GRPO-CARE, a reinforcement learning framework optimizing for consistency and correctness, outperforms standard GRPO on a new video understanding benchmark, SEED-Bench-R1, improving both performance and logical coherence in multimodal large language models.  					AI-generated summary 				 Recent rein...
[25.06.2025 03:46] ********************************************************************************
[25.06.2025 03:46] Abstract 2. Supervised Reinforcement Fine-Tuning (SRFT) integrates Supervised Fine-Tuning and Reinforcement Learning through entropy-aware weighting to achieve high accuracy in language model optimization.  					AI-generated summary 				 Large language models (LLMs) have achieved remarkable progress in reasonin...
[25.06.2025 03:46] ********************************************************************************
[25.06.2025 03:46] Abstract 3. An automated data-curation pipeline for software engineering improves large language model performance on SWE tasks, achieving state-of-the-art results with and without test-time scaling techniques.  					AI-generated summary 				 Software engineering (SWE) has recently emerged as a crucial testbed ...
[25.06.2025 03:46] ********************************************************************************
[25.06.2025 03:46] Abstract 4. Researchers propose design principles for cascaded video super-resolution models to improve high-resolution video generation by introduces degradation strategies, timestep sampling, noise augmentation, and interleaving temporal units with sparse local attention.  					AI-generated summary 				 Laten...
[25.06.2025 03:46] Read previous papers.
[25.06.2025 03:46] Generating reviews via LLM API.
[25.06.2025 03:46] Using data from previous issue: {"categories": ["#optimization", "#3d", "#transfer_learning", "#diffusion", "#dataset"], "emoji": "🦾", "ru": {"title": "AnimaX: универсальная 3D-анимация с помощью диффузионных моделей видео", "desc": "AnimaX - это фреймворк для создания 3D-анимации, объединяющий преимущества диффузионных моделей ви
[25.06.2025 03:46] Querying the API.
[25.06.2025 03:46] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

GRPO-CARE, a reinforcement learning framework optimizing for consistency and correctness, outperforms standard GRPO on a new video understanding benchmark, SEED-Bench-R1, improving both performance and logical coherence in multimodal large language models.  					AI-generated summary 				 Recent reinforcement learning approaches, such as outcome-supervised GRPO, have advanced Chain-of-Thought reasoning in large language models (LLMs), yet their adaptation to multimodal LLMs (MLLMs) is unexplored. To address the lack of rigorous evaluation for MLLM post-training methods, we introduce SEED-Bench-R1, a benchmark with complex real-world videos requiring balanced perception and reasoning. It offers a large training set and evaluates generalization across three escalating challenges: in-distribution, cross-environment, and cross-environment-task scenarios. Using SEED-Bench-R1, we find that standard GRPO, while improving answer accuracy, often reduces logical coherence between reasoning steps and answers, with only a 57.9% consistency rate. This stems from reward signals focusing solely on final answers, encouraging shortcuts, and strict KL penalties limiting exploration.To address this, we propose GRPO-CARE, a consistency-aware RL framework optimizing both answer correctness and reasoning coherence without explicit supervision. GRPO-CARE introduces a two-tiered reward: (1) a base reward for answer correctness, and (2) an adaptive consistency bonus, computed by comparing the model's reasoning-to-answer likelihood (via a slowly-evolving reference model) against group peers.This dual mechanism amplifies rewards for reasoning paths that are both correct and logically consistent. Replacing KL penalties with this adaptive bonus, GRPO-CARE outperforms standard GRPO on SEED-Bench-R1, achieving a 6.7% performance gain on the hardest evaluation level and a 24.5% improvement in consistency. It also shows strong transferability, improving model performance across diverse video understanding benchmarks. Our work contributes a systematically designed benchmark and a generalizable post-training framework, advancing the development of more interpretable and robust MLLMs.
[25.06.2025 03:46] Response: {
  "desc": "GRPO-CARE - это новый фреймворк обучения с подкреплением для мультимодальных больших языковых моделей. Он оптимизирует как точность ответов, так и логическую согласованность рассуждений без явного контроля. GRPO-CARE вводит двухуровневую систему вознаграждений: базовую за правильность ответа и адаптивный бонус за согласованность. Фреймворк превосходит стандартный GRPO на новом бенчмарке SEED-Bench-R1 для понимания видео, улучшая производительность и логическую связность.",
  "emoji": "🤖",
  "title": "GRPO-CARE: Согласованное обучение с подкреплением для мультимодальных ИИ"
}
[25.06.2025 03:46] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"GRPO-CARE, a reinforcement learning framework optimizing for consistency and correctness, outperforms standard GRPO on a new video understanding benchmark, SEED-Bench-R1, improving both performance and logical coherence in multimodal large language models.  					AI-generated summary 				 Recent reinforcement learning approaches, such as outcome-supervised GRPO, have advanced Chain-of-Thought reasoning in large language models (LLMs), yet their adaptation to multimodal LLMs (MLLMs) is unexplored. To address the lack of rigorous evaluation for MLLM post-training methods, we introduce SEED-Bench-R1, a benchmark with complex real-world videos requiring balanced perception and reasoning. It offers a large training set and evaluates generalization across three escalating challenges: in-distribution, cross-environment, and cross-environment-task scenarios. Using SEED-Bench-R1, we find that standard GRPO, while improving answer accuracy, often reduces logical coherence between reasoning steps and answers, with only a 57.9% consistency rate. This stems from reward signals focusing solely on final answers, encouraging shortcuts, and strict KL penalties limiting exploration.To address this, we propose GRPO-CARE, a consistency-aware RL framework optimizing both answer correctness and reasoning coherence without explicit supervision. GRPO-CARE introduces a two-tiered reward: (1) a base reward for answer correctness, and (2) an adaptive consistency bonus, computed by comparing the model's reasoning-to-answer likelihood (via a slowly-evolving reference model) against group peers.This dual mechanism amplifies rewards for reasoning paths that are both correct and logically consistent. Replacing KL penalties with this adaptive bonus, GRPO-CARE outperforms standard GRPO on SEED-Bench-R1, achieving a 6.7% performance gain on the hardest evaluation level and a 24.5% improvement in consistency. It also shows strong transferability, improving model performance across diverse video understanding benchmarks. Our work contributes a systematically designed benchmark and a generalizable post-training framework, advancing the development of more interpretable and robust MLLMs."

[25.06.2025 03:46] Response: ```python
["RL", "BENCHMARK", "MULTIMODAL", "TRAINING", "VIDEO"]
```
[25.06.2025 03:46] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"GRPO-CARE, a reinforcement learning framework optimizing for consistency and correctness, outperforms standard GRPO on a new video understanding benchmark, SEED-Bench-R1, improving both performance and logical coherence in multimodal large language models.  					AI-generated summary 				 Recent reinforcement learning approaches, such as outcome-supervised GRPO, have advanced Chain-of-Thought reasoning in large language models (LLMs), yet their adaptation to multimodal LLMs (MLLMs) is unexplored. To address the lack of rigorous evaluation for MLLM post-training methods, we introduce SEED-Bench-R1, a benchmark with complex real-world videos requiring balanced perception and reasoning. It offers a large training set and evaluates generalization across three escalating challenges: in-distribution, cross-environment, and cross-environment-task scenarios. Using SEED-Bench-R1, we find that standard GRPO, while improving answer accuracy, often reduces logical coherence between reasoning steps and answers, with only a 57.9% consistency rate. This stems from reward signals focusing solely on final answers, encouraging shortcuts, and strict KL penalties limiting exploration.To address this, we propose GRPO-CARE, a consistency-aware RL framework optimizing both answer correctness and reasoning coherence without explicit supervision. GRPO-CARE introduces a two-tiered reward: (1) a base reward for answer correctness, and (2) an adaptive consistency bonus, computed by comparing the model's reasoning-to-answer likelihood (via a slowly-evolving reference model) against group peers.This dual mechanism amplifies rewards for reasoning paths that are both correct and logically consistent. Replacing KL penalties with this adaptive bonus, GRPO-CARE outperforms standard GRPO on SEED-Bench-R1, achieving a 6.7% performance gain on the hardest evaluation level and a 24.5% improvement in consistency. It also shows strong transferability, improving model performance across diverse video understanding benchmarks. Our work contributes a systematically designed benchmark and a generalizable post-training framework, advancing the development of more interpretable and robust MLLMs."

[25.06.2025 03:46] Response: ```python
['REASONING', 'OPTIMIZATION', 'TRANSFER_LEARNING', 'INTERPRETABILITY']
```
[25.06.2025 03:46] Response: ParsedChatCompletionMessage[Article](content='{"desc":"The paper introduces GRPO-CARE, a new reinforcement learning framework that enhances the performance and logical coherence of multimodal large language models (MLLMs) in video understanding tasks. It addresses the limitations of standard GRPO, which often sacrifices reasoning consistency for accuracy, by implementing a two-tiered reward system that promotes both correct answers and coherent reasoning. The authors present SEED-Bench-R1, a benchmark designed to rigorously evaluate MLLMs on complex video tasks, revealing that GRPO-CARE significantly outperforms GRPO with a notable increase in consistency and performance. This work not only proposes a novel framework but also contributes a valuable benchmark for future research in MLLM development.","title":"Enhancing Consistency and Correctness in Multimodal Learning"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='The paper introduces GRPO-CARE, a new reinforcement learning framework that enhances the performance and logical coherence of multimodal large language models (MLLMs) in video understanding tasks. It addresses the limitations of standard GRPO, which often sacrifices reasoning consistency for accuracy, by implementing a two-tiered reward system that promotes both correct answers and coherent reasoning. The authors present SEED-Bench-R1, a benchmark designed to rigorously evaluate MLLMs on complex video tasks, revealing that GRPO-CARE significantly outperforms GRPO with a notable increase in consistency and performance. This work not only proposes a novel framework but also contributes a valuable benchmark for future research in MLLM development.', title='Enhancing Consistency and Correctness in Multimodal Learning'))
[25.06.2025 03:46] Response: ParsedChatCompletionMessage[Article](content='{"desc":"GRPO-CARE是一种强化学习框架，旨在优化一致性和正确性，超越了标准的GRPO方法。它在新的视频理解基准SEED-Bench-R1上表现出色，提升了多模态大语言模型的性能和逻辑连贯性。通过引入双重奖励机制，GRPO-CARE不仅关注答案的正确性，还鼓励推理过程的逻辑一致性。该框架在复杂的真实世界视频任务中展现了强大的迁移能力，推动了更具可解释性和鲁棒性的多模态大语言模型的发展。","title":"提升一致性与正确性的强化学习框架"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='GRPO-CARE是一种强化学习框架，旨在优化一致性和正确性，超越了标准的GRPO方法。它在新的视频理解基准SEED-Bench-R1上表现出色，提升了多模态大语言模型的性能和逻辑连贯性。通过引入双重奖励机制，GRPO-CARE不仅关注答案的正确性，还鼓励推理过程的逻辑一致性。该框架在复杂的真实世界视频任务中展现了强大的迁移能力，推动了更具可解释性和鲁棒性的多模态大语言模型的发展。', title='提升一致性与正确性的强化学习框架'))
[25.06.2025 03:46] Querying the API.
[25.06.2025 03:46] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Supervised Reinforcement Fine-Tuning (SRFT) integrates Supervised Fine-Tuning and Reinforcement Learning through entropy-aware weighting to achieve high accuracy in language model optimization.  					AI-generated summary 				 Large language models (LLMs) have achieved remarkable progress in reasoning tasks, yet the optimal integration of Supervised Fine-Tuning (SFT) and Reinforcement Learning (RL) remains a fundamental challenge. Through comprehensive analysis of token distributions, learning dynamics, and integration mechanisms from entropy-based perspectives, we reveal key differences between these paradigms: SFT induces coarse-grained global changes to LLM policy distributions, while RL performs fine-grained selective optimizations, with entropy serving as a critical indicator of training effectiveness. Building on these observations, we propose Supervised Reinforcement Fine-Tuning (SRFT), a single-stage method that unifies both fine-tuning paradigms through entropy-aware weighting mechanisms. Our approach simultaneously applies SFT and RL to directly optimize the LLM using demonstrations and self-exploration rollouts rather than through two-stage sequential methods. Extensive experiments show that SRFT achieves 59.1% average accuracy, outperforming zero-RL methods by 9.0% on five mathematical reasoning benchmarks and 10.9% on three out-of-distribution benchmarks.
[25.06.2025 03:46] Response: {
  "desc": "Статья представляет новый метод обучения языковых моделей - Supervised Reinforcement Fine-Tuning (SRFT). Этот подход объединяет Supervised Fine-Tuning и Reinforcement Learning, используя механизм взвешивания на основе энтропии. SRFT применяет оба метода одновременно, оптимизируя языковую модель напрямую с помощью демонстраций и самоисследования. Эксперименты показывают, что SRFT превосходит другие методы на задачах математических рассуждений и вне распределения обучающих данных.",
  "emoji": "🧠",
  "title": "Объединение supervised и reinforcement learning для улучшения языковых моделей"
}
[25.06.2025 03:46] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Supervised Reinforcement Fine-Tuning (SRFT) integrates Supervised Fine-Tuning and Reinforcement Learning through entropy-aware weighting to achieve high accuracy in language model optimization.  					AI-generated summary 				 Large language models (LLMs) have achieved remarkable progress in reasoning tasks, yet the optimal integration of Supervised Fine-Tuning (SFT) and Reinforcement Learning (RL) remains a fundamental challenge. Through comprehensive analysis of token distributions, learning dynamics, and integration mechanisms from entropy-based perspectives, we reveal key differences between these paradigms: SFT induces coarse-grained global changes to LLM policy distributions, while RL performs fine-grained selective optimizations, with entropy serving as a critical indicator of training effectiveness. Building on these observations, we propose Supervised Reinforcement Fine-Tuning (SRFT), a single-stage method that unifies both fine-tuning paradigms through entropy-aware weighting mechanisms. Our approach simultaneously applies SFT and RL to directly optimize the LLM using demonstrations and self-exploration rollouts rather than through two-stage sequential methods. Extensive experiments show that SRFT achieves 59.1% average accuracy, outperforming zero-RL methods by 9.0% on five mathematical reasoning benchmarks and 10.9% on three out-of-distribution benchmarks."

[25.06.2025 03:46] Response: ```python
['RL', 'RLHF', 'TRAINING']
```
[25.06.2025 03:46] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Supervised Reinforcement Fine-Tuning (SRFT) integrates Supervised Fine-Tuning and Reinforcement Learning through entropy-aware weighting to achieve high accuracy in language model optimization.  					AI-generated summary 				 Large language models (LLMs) have achieved remarkable progress in reasoning tasks, yet the optimal integration of Supervised Fine-Tuning (SFT) and Reinforcement Learning (RL) remains a fundamental challenge. Through comprehensive analysis of token distributions, learning dynamics, and integration mechanisms from entropy-based perspectives, we reveal key differences between these paradigms: SFT induces coarse-grained global changes to LLM policy distributions, while RL performs fine-grained selective optimizations, with entropy serving as a critical indicator of training effectiveness. Building on these observations, we propose Supervised Reinforcement Fine-Tuning (SRFT), a single-stage method that unifies both fine-tuning paradigms through entropy-aware weighting mechanisms. Our approach simultaneously applies SFT and RL to directly optimize the LLM using demonstrations and self-exploration rollouts rather than through two-stage sequential methods. Extensive experiments show that SRFT achieves 59.1% average accuracy, outperforming zero-RL methods by 9.0% on five mathematical reasoning benchmarks and 10.9% on three out-of-distribution benchmarks."

[25.06.2025 03:46] Response: ```python
["OPTIMIZATION", "REASONING"]
```
[25.06.2025 03:46] Response: ParsedChatCompletionMessage[Article](content='{"desc":"Supervised Reinforcement Fine-Tuning (SRFT) combines Supervised Fine-Tuning (SFT) and Reinforcement Learning (RL) to enhance the performance of language models. It uses entropy-aware weighting to balance the strengths of both methods, allowing for better optimization of model policies. The paper highlights how SFT makes broad changes to model behavior, while RL focuses on specific improvements, with entropy being a key measure of success. SRFT has been shown to significantly improve accuracy on various reasoning tasks compared to traditional methods.","title":"Unifying Fine-Tuning for Superior Language Model Performance"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='Supervised Reinforcement Fine-Tuning (SRFT) combines Supervised Fine-Tuning (SFT) and Reinforcement Learning (RL) to enhance the performance of language models. It uses entropy-aware weighting to balance the strengths of both methods, allowing for better optimization of model policies. The paper highlights how SFT makes broad changes to model behavior, while RL focuses on specific improvements, with entropy being a key measure of success. SRFT has been shown to significantly improve accuracy on various reasoning tasks compared to traditional methods.', title='Unifying Fine-Tuning for Superior Language Model Performance'))
[25.06.2025 03:46] Response: ParsedChatCompletionMessage[Article](content='{"desc":"监督强化微调（SRFT）结合了监督微调和强化学习，通过熵感知加权实现语言模型优化的高准确性。研究表明，监督微调会对语言模型的策略分布产生粗粒度的全局变化，而强化学习则进行细粒度的选择性优化，熵是训练效果的重要指标。SRFT方法通过熵感知加权机制，将这两种微调范式统一为单阶段方法，直接优化语言模型。实验结果显示，SRFT在五个数学推理基准上平均准确率达到59.1%，比零强化学习方法提高了9.0%。","title":"监督强化微调：优化语言模型的新方法"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='监督强化微调（SRFT）结合了监督微调和强化学习，通过熵感知加权实现语言模型优化的高准确性。研究表明，监督微调会对语言模型的策略分布产生粗粒度的全局变化，而强化学习则进行细粒度的选择性优化，熵是训练效果的重要指标。SRFT方法通过熵感知加权机制，将这两种微调范式统一为单阶段方法，直接优化语言模型。实验结果显示，SRFT在五个数学推理基准上平均准确率达到59.1%，比零强化学习方法提高了9.0%。', title='监督强化微调：优化语言模型的新方法'))
[25.06.2025 03:46] Querying the API.
[25.06.2025 03:46] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

An automated data-curation pipeline for software engineering improves large language model performance on SWE tasks, achieving state-of-the-art results with and without test-time scaling techniques.  					AI-generated summary 				 Software engineering (SWE) has recently emerged as a crucial testbed for next-generation LLM agents, demanding inherent capabilities in two critical dimensions: sustained iterative problem-solving (e.g., >50 interaction rounds) and long-context dependency resolution (e.g., >32k tokens). However, the data curation process in SWE remains notoriously time-consuming, as it heavily relies on manual annotation for code file filtering and the setup of dedicated runtime environments to execute and validate unit tests. Consequently, most existing datasets are limited to only a few thousand GitHub-sourced instances. To this end, we propose an incremental, automated data-curation pipeline that systematically scales both the volume and diversity of SWE datasets. Our dataset comprises 10,169 real-world Python task instances from 2,531 distinct GitHub repositories, each accompanied by a task specified in natural language and a dedicated runtime-environment image for automated unit-test validation. We have carefully curated over 8,000 successfully runtime-validated training trajectories from our proposed SWE dataset. When fine-tuning the Skywork-SWE model on these trajectories, we uncover a striking data scaling phenomenon: the trained model's performance for software engineering capabilities in LLMs continues to improve as the data size increases, showing no signs of saturation. Notably, our Skywork-SWE model achieves 38.0% pass@1 accuracy on the SWE-bench Verified benchmark without using verifiers or multiple rollouts, establishing a new state-of-the-art (SOTA) among the Qwen2.5-Coder-32B-based LLMs built on the OpenHands agent framework. Furthermore, with the incorporation of test-time scaling techniques, the performance further improves to 47.0% accuracy, surpassing the previous SOTA results for sub-32B parameter models. We release the Skywork-SWE-32B model checkpoint to accelerate future research.
[25.06.2025 03:47] Response: {
  "desc": "Исследователи разработали автоматизированный конвейер для курирования данных в области программной инженерии, что позволило значительно улучшить производительность больших языковых моделей (LLM) на задачах разработки программного обеспечения. Новый подход позволил создать набор данных из более чем 10 000 реальных задач Python с автоматизированной валидацией через модульные тесты. Обучение модели Skywork-SWE на этих данных показало непрерывное улучшение производительности с увеличением объема данных. Модель достигла наилучших результатов среди LLM на базе Qwen2.5-Coder-32B, как с применением техник масштабирования во время тестирования, так и без них.",
  "emoji": "🚀",
  "title": "Автоматизация курирования данных поднимает LLM на новый уровень в программной инженерии"
}
[25.06.2025 03:47] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"An automated data-curation pipeline for software engineering improves large language model performance on SWE tasks, achieving state-of-the-art results with and without test-time scaling techniques.  					AI-generated summary 				 Software engineering (SWE) has recently emerged as a crucial testbed for next-generation LLM agents, demanding inherent capabilities in two critical dimensions: sustained iterative problem-solving (e.g., >50 interaction rounds) and long-context dependency resolution (e.g., >32k tokens). However, the data curation process in SWE remains notoriously time-consuming, as it heavily relies on manual annotation for code file filtering and the setup of dedicated runtime environments to execute and validate unit tests. Consequently, most existing datasets are limited to only a few thousand GitHub-sourced instances. To this end, we propose an incremental, automated data-curation pipeline that systematically scales both the volume and diversity of SWE datasets. Our dataset comprises 10,169 real-world Python task instances from 2,531 distinct GitHub repositories, each accompanied by a task specified in natural language and a dedicated runtime-environment image for automated unit-test validation. We have carefully curated over 8,000 successfully runtime-validated training trajectories from our proposed SWE dataset. When fine-tuning the Skywork-SWE model on these trajectories, we uncover a striking data scaling phenomenon: the trained model's performance for software engineering capabilities in LLMs continues to improve as the data size increases, showing no signs of saturation. Notably, our Skywork-SWE model achieves 38.0% pass@1 accuracy on the SWE-bench Verified benchmark without using verifiers or multiple rollouts, establishing a new state-of-the-art (SOTA) among the Qwen2.5-Coder-32B-based LLMs built on the OpenHands agent framework. Furthermore, with the incorporation of test-time scaling techniques, the performance further improves to 47.0% accuracy, surpassing the previous SOTA results for sub-32B parameter models. We release the Skywork-SWE-32B model checkpoint to accelerate future research."

[25.06.2025 03:47] Response: ```python
['DATASET', 'DATA', 'BENCHMARK', 'TRAINING']
```
[25.06.2025 03:47] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"An automated data-curation pipeline for software engineering improves large language model performance on SWE tasks, achieving state-of-the-art results with and without test-time scaling techniques.  					AI-generated summary 				 Software engineering (SWE) has recently emerged as a crucial testbed for next-generation LLM agents, demanding inherent capabilities in two critical dimensions: sustained iterative problem-solving (e.g., >50 interaction rounds) and long-context dependency resolution (e.g., >32k tokens). However, the data curation process in SWE remains notoriously time-consuming, as it heavily relies on manual annotation for code file filtering and the setup of dedicated runtime environments to execute and validate unit tests. Consequently, most existing datasets are limited to only a few thousand GitHub-sourced instances. To this end, we propose an incremental, automated data-curation pipeline that systematically scales both the volume and diversity of SWE datasets. Our dataset comprises 10,169 real-world Python task instances from 2,531 distinct GitHub repositories, each accompanied by a task specified in natural language and a dedicated runtime-environment image for automated unit-test validation. We have carefully curated over 8,000 successfully runtime-validated training trajectories from our proposed SWE dataset. When fine-tuning the Skywork-SWE model on these trajectories, we uncover a striking data scaling phenomenon: the trained model's performance for software engineering capabilities in LLMs continues to improve as the data size increases, showing no signs of saturation. Notably, our Skywork-SWE model achieves 38.0% pass@1 accuracy on the SWE-bench Verified benchmark without using verifiers or multiple rollouts, establishing a new state-of-the-art (SOTA) among the Qwen2.5-Coder-32B-based LLMs built on the OpenHands agent framework. Furthermore, with the incorporation of test-time scaling techniques, the performance further improves to 47.0% accuracy, surpassing the previous SOTA results for sub-32B parameter models. We release the Skywork-SWE-32B model checkpoint to accelerate future research."

[25.06.2025 03:47] Response: ```python
["LONG_CONTEXT", "OPEN_SOURCE"]
```
[25.06.2025 03:47] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper presents an automated data-curation pipeline designed to enhance the performance of large language models (LLMs) in software engineering (SWE) tasks. The pipeline addresses the challenges of manual data annotation and environment setup by providing a diverse dataset of over 10,000 real-world Python task instances from GitHub. The authors demonstrate that increasing the dataset size leads to improved model performance, with their Skywork-SWE model achieving state-of-the-art accuracy on the SWE-bench Verified benchmark. Additionally, the incorporation of test-time scaling techniques further boosts the model\'s performance, establishing new benchmarks for LLMs in SWE.","title":"Automating Data Curation to Boost LLMs in Software Engineering"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc="This paper presents an automated data-curation pipeline designed to enhance the performance of large language models (LLMs) in software engineering (SWE) tasks. The pipeline addresses the challenges of manual data annotation and environment setup by providing a diverse dataset of over 10,000 real-world Python task instances from GitHub. The authors demonstrate that increasing the dataset size leads to improved model performance, with their Skywork-SWE model achieving state-of-the-art accuracy on the SWE-bench Verified benchmark. Additionally, the incorporation of test-time scaling techniques further boosts the model's performance, establishing new benchmarks for LLMs in SWE.", title='Automating Data Curation to Boost LLMs in Software Engineering'))
[25.06.2025 03:47] Response: ParsedChatCompletionMessage[Article](content='{"desc":"本文提出了一种自动化数据整理管道，旨在提升大型语言模型（LLM）在软件工程（SWE）任务上的表现。该管道通过系统性地扩展数据集的规模和多样性，解决了传统数据整理过程中的时间消耗问题。我们构建了一个包含10,169个真实Python任务实例的数据集，并成功验证了超过8,000个训练轨迹。实验结果表明，随着数据量的增加，模型在软件工程能力上的表现持续提升，最终在SWE-bench Verified基准测试中达到了38.0%的准确率，创造了新的最先进水平。","title":"自动化数据整理，提升软件工程模型表现"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='本文提出了一种自动化数据整理管道，旨在提升大型语言模型（LLM）在软件工程（SWE）任务上的表现。该管道通过系统性地扩展数据集的规模和多样性，解决了传统数据整理过程中的时间消耗问题。我们构建了一个包含10,169个真实Python任务实例的数据集，并成功验证了超过8,000个训练轨迹。实验结果表明，随着数据量的增加，模型在软件工程能力上的表现持续提升，最终在SWE-bench Verified基准测试中达到了38.0%的准确率，创造了新的最先进水平。', title='自动化数据整理，提升软件工程模型表现'))
[25.06.2025 03:47] Using data from previous issue: {"categories": ["#optimization", "#training", "#video", "#diffusion", "#architecture"], "emoji": "🎥", "ru": {"title": "Эффективное сверхразрешение видео с помощью каскадных моделей", "desc": "Исследователи предлагают принципы проектирования каскадных моделей сверхразрешения видео для улучшения генер
[25.06.2025 03:47] Renaming data file.
[25.06.2025 03:47] Renaming previous data. hf_papers.json to ./d/2025-06-25.json
[25.06.2025 03:47] Saving new data file.
[25.06.2025 03:47] Generating page.
[25.06.2025 03:47] Renaming previous page.
[25.06.2025 03:47] Renaming previous data. index.html to ./d/2025-06-25.html
[25.06.2025 03:47] Writing result.
[25.06.2025 03:47] Renaming log file.
[25.06.2025 03:47] Renaming previous data. log.txt to ./logs/2025-06-25_last_log.txt
