[09.01.2025 11:08] Read previous papers.
[09.01.2025 11:08] Generating top page (month).
[09.01.2025 11:08] Writing top page (month).
[09.01.2025 12:18] Read previous papers.
[09.01.2025 12:18] Get feed.
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.04519
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.04686
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.04682
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.04227
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.04306
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.04575
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.02772
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.04144
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.04689
[09.01.2025 12:19] Get page data from previous paper. URL: https://huggingface.co/papers/2501.03271
[09.01.2025 12:19] Extract page data from URL. URL: https://huggingface.co/papers/2501.04694
[09.01.2025 12:19] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[09.01.2025 12:19] No deleted papers detected.
[09.01.2025 12:19] Downloading and parsing papers (pdf, html). Total: 11.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04519.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.04519.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.04519.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04686.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.04686.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.04686.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04682.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.04682.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.04682.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04227.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.04227.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.04227.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04306.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.04306.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.04306.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04575.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.04575.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.04575.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.02772.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.02772.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.02772.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04144.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.04144.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.04144.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04689.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.04689.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.04689.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.03271.
[09.01.2025 12:19] Extra JSON file exists (./assets/json/2501.03271.json), skip PDF parsing.
[09.01.2025 12:19] Paper image links file exists (./assets/img_data/2501.03271.json), skip HTML parsing.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Downloading and parsing paper https://huggingface.co/papers/2501.04694.
[09.01.2025 12:19] Downloading paper 2501.04694 from http://arxiv.org/pdf/2501.04694v1...
[09.01.2025 12:19] Extracting affiliations from text.
[09.01.2025 12:19] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"EpiCoder: Encompassing Diversity and Complexity in Code Generation Yaoxiang Wang χϕ Haoling Liπϕ Xin Zhangϕ Jie Wuπϕ Xiao Liuϕ Wenxiang Huϕ Zhongxin Guoϕ Yangyu Huangϕ Ying Xinϕ Yujiu Yang π Jinsong Suχ Qi Chenϕ Scarlett Liϕ χXiamen University πTsinghua University ϕMicrosoft "
[09.01.2025 12:19] Response: ```python
["Xiamen University", "Tsinghua University", "Microsoft"]
```
[09.01.2025 12:19] Deleting PDF ./assets/pdf/2501.04694.pdf.
[09.01.2025 12:19] Success.
[09.01.2025 12:19] Enriching papers with extra data.
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 0. We present rStar-Math to demonstrate that small language models (SLMs) can rival or even surpass the math reasoning capability of OpenAI o1, without distillation from superior models. rStar-Math achieves this by exercising "deep thinking" through Monte Carlo Tree Search (MCTS), where a math policy S...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 1. Chain-of-thought (CoT) reasoning has been widely applied in the mathematical reasoning of Large Language Models (LLMs). Recently, the introduction of derivative process supervision on CoT trajectories has sparked discussions on enhancing scaling capabilities during test time, thereby boosting the po...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 2. We propose a novel framework, Meta Chain-of-Thought (Meta-CoT), which extends traditional Chain-of-Thought (CoT) by explicitly modeling the underlying reasoning required to arrive at a particular CoT. We present empirical evidence from state-of-the-art models exhibiting behaviors consistent with in-...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 3. Historically, scientific discovery has been a lengthy and costly process, demanding substantial time and resources from initial conception to final results. To accelerate scientific discovery, reduce research costs, and improve research quality, we introduce Agent Laboratory, an autonomous LLM-based...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 4. In recent years, the rapid advancement of Large Language Models (LLMs) has transformed the landscape of scientific research, offering unprecedented support across various stages of the research cycle. This paper presents the first systematic survey dedicated to exploring how LLMs are revolutionizing...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 5. Graphical User Interface (GUI) Agents, powered by multimodal large language models (MLLMs), have shown great potential for task automation on computing devices such as computers and mobile phones. However, existing agents face challenges in multi-step reasoning and reliance on textual annotations, l...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 6. Document retrieval techniques form the foundation for the development of large-scale information systems. The prevailing methodology is to construct a bi-encoder and compute the semantic similarity. However, such scalar similarity is difficult to reflect enough information and impedes our comprehens...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 7. In this paper, we push the boundaries of fine-grained 3D generation into truly creative territory. Current methods either lack intricate details or simply mimic existing objects -- we enable both. By lifting 2D fine-grained understanding into 3D through multi-view diffusion and modeling part latents...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 8. We study the problem of single-image 3D object reconstruction. Recent works have diverged into two directions: regression-based modeling and generative modeling. Regression methods efficiently infer visible surfaces, but struggle with occluded regions. Generative methods handle uncertain regions bet...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 9. The rapid rise of large language models (LLMs) has unlocked many applications but also underscores the challenge of aligning them with diverse values and preferences. Direct Preference Optimization (DPO) is central to alignment but constrained by fixed divergences and limited feature transformations...
[09.01.2025 12:19] ********************************************************************************
[09.01.2025 12:19] Abstract 10. Effective instruction tuning is indispensable for optimizing code LLMs, aligning model behavior with user expectations and enhancing model performance in real-world applications. However, most existing methods focus on code snippets, which are limited to specific functionalities and rigid structures...
[09.01.2025 12:19] Read previous papers.
[09.01.2025 12:19] Generating reviews via LLM API.
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#training", "#reasoning", "#optimization", "#benchmark", "#small_models", "#dataset"], "emoji": "🧮", "ru": {"title": "Малые модели решают большие задачи: rStar-Math превосходит гигантов в математике", "desc": "Статья представляет rStar-Math - подход, позволяющий малым языковым модел
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#dataset", "#training", "#multimodal", "#data", "#open_source", "#reasoning", "#math", "#architecture", "#benchmark"], "emoji": "🧠", "ru": {"title": "Усиление мультимодальных математических рассуждений через синтез данных и верификацию", "desc": "Статья представляет новый подход к у
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#synthetic", "#training", "#rlhf", "#rl", "#multimodal", "#optimization", "#reasoning"], "emoji": "🧠", "ru": {"title": "Meta-CoT: новый уровень рассуждений для ИИ", "desc": "Исследователи предлагают новую концепцию под названием Meta Chain-of-Thought (Meta-CoT), которая расширяет тр
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#science", "#training", "#agents", "#rlhf", "#survey"], "emoji": "🧪", "ru": {"title": "Автономная лаборатория ИИ: революция в научных исследованиях", "desc": "Статья представляет Agent Laboratory - автономную систему на основе моделей LLM, способную выполнять полный цикл научного ис
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#science", "#survey", "#multimodal", "#benchmark"], "emoji": "🧠", "ru": {"title": "LLM как революционный инструмент в научных исследованиях", "desc": "Эта статья представляет собой первый систематический обзор роли больших языковых моделей (LLM) в научных исследованиях. Авторы анали
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#benchmark", "#synthetic", "#training", "#agents", "#multimodal", "#reasoning"], "emoji": "🤖", "ru": {"title": "Умный агент GUI: новый уровень автоматизации интерфейсов", "desc": "InfiGUIAgent - это агент графического пользовательского интерфейса, основанный на мультимодальных больш
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#interpretability", "#data", "#rag", "#synthetic", "#dataset"], "emoji": "🔍", "ru": {"title": "GeAR: Новый взгляд на извлечение документов через генерацию", "desc": "Статья предлагает новый метод извлечения документов под названием Generation Augmented Retrieval (GeAR). В отличие от
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#diffusion", "#open_source", "#3d"], "emoji": "🐦", "ru": {"title": "Генерация креативных 3D-моделей с беспрецедентной детализацией", "desc": "Эта статья представляет новый метод генерации детализированных 3D-объектов, выходящий за рамки простого копирования существующих примеров. Ав
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#3d"], "emoji": "🧊", "ru": {"title": "SPAR3D: Эффективная реконструкция 3D-объектов с использованием облаков точек", "desc": "В статье представлен новый двухэтапный подход SPAR3D для реконструкции 3D-объектов по одному изображению. На первом этапе генерируется разреженное облако точ
[09.01.2025 12:19] Using data from previous issue: {"categories": ["#rlhf", "#alignment", "#reasoning", "#dataset", "#training"], "emoji": "🧠", "ru": {"title": "DPO-Kernels: Новый подход к выравниванию языковых моделей", "desc": "Статья представляет новый метод под названием DPO-Kernels для улучшения выравнивания больших языковых моделей (LLM) с раз
[09.01.2025 12:19] Querying the API.
[09.01.2025 12:19] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Effective instruction tuning is indispensable for optimizing code LLMs, aligning model behavior with user expectations and enhancing model performance in real-world applications. However, most existing methods focus on code snippets, which are limited to specific functionalities and rigid structures, restricting the complexity and diversity of the synthesized data. To address these limitations, we introduce a novel feature tree-based synthesis framework inspired by Abstract Syntax Trees (AST). Unlike AST, which captures syntactic structure of code, our framework models semantic relationships between code elements, enabling the generation of more nuanced and diverse data. The feature tree is constructed from raw data and refined iteratively to increase the quantity and diversity of the extracted features. This process enables the identification of more complex patterns and relationships within the code. By sampling subtrees with controlled depth and breadth, our framework allows precise adjustments to the complexity of the generated code, supporting a wide range of tasks from simple function-level operations to intricate multi-file scenarios. We fine-tuned widely-used base models to create the EpiCoder series, achieving state-of-the-art performance at both the function and file levels across multiple benchmarks. Notably, empirical evidence indicates that our approach shows significant potential in synthesizing highly complex repository-level code data. Further analysis elucidates the merits of this approach by rigorously assessing data complexity and diversity through software engineering principles and LLM-as-a-judge method.
[09.01.2025 12:19] Response: {
  "desc": "Статья представляет новый подход к улучшению языковых моделей для программирования с использованием дерева признаков, вдохновленного абстрактными синтаксическими деревьями. Этот метод позволяет генерировать более сложные и разнообразные обучающие данные, моделируя семантические связи между элементами кода. Авторы создали серию моделей EpiCoder, достигших высоких результатов в нескольких бенчмарках. Эмпирические данные показывают потенциал метода для синтеза сложных репозиториев кода.",
  "emoji": "🌳",
  "title": "Дерево признаков: новый путь к улучшению языковых моделей для кода"
}
[09.01.2025 12:19] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Effective instruction tuning is indispensable for optimizing code LLMs, aligning model behavior with user expectations and enhancing model performance in real-world applications. However, most existing methods focus on code snippets, which are limited to specific functionalities and rigid structures, restricting the complexity and diversity of the synthesized data. To address these limitations, we introduce a novel feature tree-based synthesis framework inspired by Abstract Syntax Trees (AST). Unlike AST, which captures syntactic structure of code, our framework models semantic relationships between code elements, enabling the generation of more nuanced and diverse data. The feature tree is constructed from raw data and refined iteratively to increase the quantity and diversity of the extracted features. This process enables the identification of more complex patterns and relationships within the code. By sampling subtrees with controlled depth and breadth, our framework allows precise adjustments to the complexity of the generated code, supporting a wide range of tasks from simple function-level operations to intricate multi-file scenarios. We fine-tuned widely-used base models to create the EpiCoder series, achieving state-of-the-art performance at both the function and file levels across multiple benchmarks. Notably, empirical evidence indicates that our approach shows significant potential in synthesizing highly complex repository-level code data. Further analysis elucidates the merits of this approach by rigorously assessing data complexity and diversity through software engineering principles and LLM-as-a-judge method."

[09.01.2025 12:19] Response: ```python
['DATASET', 'DATA', 'TRAINING', 'ARCHITECTURE']
```
[09.01.2025 12:19] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Effective instruction tuning is indispensable for optimizing code LLMs, aligning model behavior with user expectations and enhancing model performance in real-world applications. However, most existing methods focus on code snippets, which are limited to specific functionalities and rigid structures, restricting the complexity and diversity of the synthesized data. To address these limitations, we introduce a novel feature tree-based synthesis framework inspired by Abstract Syntax Trees (AST). Unlike AST, which captures syntactic structure of code, our framework models semantic relationships between code elements, enabling the generation of more nuanced and diverse data. The feature tree is constructed from raw data and refined iteratively to increase the quantity and diversity of the extracted features. This process enables the identification of more complex patterns and relationships within the code. By sampling subtrees with controlled depth and breadth, our framework allows precise adjustments to the complexity of the generated code, supporting a wide range of tasks from simple function-level operations to intricate multi-file scenarios. We fine-tuned widely-used base models to create the EpiCoder series, achieving state-of-the-art performance at both the function and file levels across multiple benchmarks. Notably, empirical evidence indicates that our approach shows significant potential in synthesizing highly complex repository-level code data. Further analysis elucidates the merits of this approach by rigorously assessing data complexity and diversity through software engineering principles and LLM-as-a-judge method."

[09.01.2025 12:19] Response: ```python
['OPTIMIZATION', 'ALIGNMENT', 'SYNTHETIC']
```
[09.01.2025 12:19] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper presents a new framework for instruction tuning in code language models (LLMs) that enhances their performance by generating more complex and diverse code data. The proposed feature tree-based synthesis framework goes beyond traditional code snippet methods by modeling semantic relationships between code elements, inspired by Abstract Syntax Trees (AST). By iteratively refining the feature tree, the framework captures intricate patterns and relationships, allowing for the generation of code that ranges from simple functions to complex multi-file scenarios. The authors demonstrate that their fine-tuned EpiCoder models achieve state-of-the-art results across various benchmarks, highlighting the effectiveness of their approach in synthesizing complex repository-level code data.","title":"Unlocking Code Complexity with Feature Trees"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='This paper presents a new framework for instruction tuning in code language models (LLMs) that enhances their performance by generating more complex and diverse code data. The proposed feature tree-based synthesis framework goes beyond traditional code snippet methods by modeling semantic relationships between code elements, inspired by Abstract Syntax Trees (AST). By iteratively refining the feature tree, the framework captures intricate patterns and relationships, allowing for the generation of code that ranges from simple functions to complex multi-file scenarios. The authors demonstrate that their fine-tuned EpiCoder models achieve state-of-the-art results across various benchmarks, highlighting the effectiveness of their approach in synthesizing complex repository-level code data.', title='Unlocking Code Complexity with Feature Trees'))
[09.01.2025 12:19] Response: ParsedChatCompletionMessage[Article](content='{"desc":"本论文提出了一种新的特征树合成框架，用于优化代码大语言模型（LLMs）的指令调优。该框架通过建模代码元素之间的语义关系，克服了现有方法在功能和结构上的局限性，从而生成更复杂和多样化的数据。特征树从原始数据构建，并通过迭代精炼，增加提取特征的数量和多样性。最终，我们通过微调广泛使用的基础模型，创建了EpiCoder系列，在多个基准测试中实现了函数和文件级别的最先进性能。","title":"特征树框架：提升代码生成的复杂性与多样性"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='本论文提出了一种新的特征树合成框架，用于优化代码大语言模型（LLMs）的指令调优。该框架通过建模代码元素之间的语义关系，克服了现有方法在功能和结构上的局限性，从而生成更复杂和多样化的数据。特征树从原始数据构建，并通过迭代精炼，增加提取特征的数量和多样性。最终，我们通过微调广泛使用的基础模型，创建了EpiCoder系列，在多个基准测试中实现了函数和文件级别的最先进性能。', title='特征树框架：提升代码生成的复杂性与多样性'))
[09.01.2025 12:19] Loading Chinese text from previous data.
[09.01.2025 12:19] Renaming data file.
[09.01.2025 12:19] Renaming previous data. hf_papers.json to ./d/2025-01-09.json
[09.01.2025 12:19] Saving new data file.
[09.01.2025 12:19] Generating page.
[09.01.2025 12:19] Renaming previous page.
[09.01.2025 12:19] Renaming previous data. index.html to ./d/2025-01-09.html
[09.01.2025 12:19] [Experimental] Generating Chinese page for reading.
[09.01.2025 12:19] Chinese vocab [{'word': '展示', 'pinyin': 'zhǎnshì', 'trans': 'display, show'}, {'word': '小型', 'pinyin': 'xiǎoxíng', 'trans': 'small, mini'}, {'word': '语言模型', 'pinyin': 'yǔyán móxíng', 'trans': 'language model'}, {'word': '蒙特卡罗树搜索', 'pinyin': 'Méngtèkǎluó shù sōusuǒ', 'trans': 'Monte Carlo Tree Search'}, {'word': '深度思考', 'pinyin': 'shēndù sīkǎo', 'trans': 'deep thinking'}, {'word': '媲美', 'pinyin': 'pìměi', 'trans': 'rival, match'}, {'word': '超越', 'pinyin': 'chāoyuè', 'trans': 'surpass, exceed'}, {'word': '推理', 'pinyin': 'tuīlǐ', 'trans': 'reasoning'}, {'word': '能力', 'pinyin': 'nénglì', 'trans': 'ability, capability'}, {'word': '创新', 'pinyin': 'chuàngxīn', 'trans': 'innovation'}, {'word': '训练', 'pinyin': 'xùnliàn', 'trans': 'train, training'}, {'word': '代码', 'pinyin': 'dàimǎ', 'trans': 'code'}, {'word': '增强', 'pinyin': 'zēngqiáng', 'trans': 'enhance, strengthen'}, {'word': '思维链', 'pinyin': 'sīwéi lián', 'trans': 'chain of thought'}, {'word': '数据合成', 'pinyin': 'shùjù héchéng', 'trans': 'data synthesis'}, {'word': '方法', 'pinyin': 'fāngfǎ', 'trans': 'method'}, {'word': '过程', 'pinyin': 'guòchéng', 'trans': 'process'}, {'word': '偏好', 'pinyin': 'piānhào', 'trans': 'preference'}, {'word': '模型', 'pinyin': 'móxíng', 'trans': 'model'}, {'word': '自我进化', 'pinyin': 'zìwǒ jìnhuà', 'trans': 'self-evolution'}, {'word': '配方', 'pinyin': 'pèifāng', 'trans': 'formula, recipe'}, {'word': '四轮', 'pinyin': 'sì lún', 'trans': 'four rounds'}, {'word': '最先进', 'pinyin': 'zuì xiānjìn', 'trans': 'most advanced'}]
[09.01.2025 12:19] Renaming previous Chinese page.
[09.01.2025 12:19] Renaming previous data. zh.html to ./d/2025-01-08_zh_reading_task.html
[09.01.2025 12:19] Writing Chinese reading task.
[09.01.2025 12:19] Writing result.
[09.01.2025 12:19] Renaming log file.
[09.01.2025 12:19] Renaming previous data. log.txt to ./logs/2025-01-09_last_log.txt
