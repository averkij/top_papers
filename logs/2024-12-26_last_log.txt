[26.12.2024 03:15] Read previous papers.
[26.12.2024 03:15] Generating top page (month).
[26.12.2024 03:15] Writing top page (month).
[26.12.2024 04:12] Read previous papers.
[26.12.2024 04:12] Get feed.
[26.12.2024 04:12] Extract page data from URL. URL: https://huggingface.co/papers/2412.18547
[26.12.2024 04:12] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[26.12.2024 04:12] Downloading and parsing papers (pdf, html). Total: 1.
[26.12.2024 04:12] Downloading and parsing paper https://huggingface.co/papers/2412.18547.
[26.12.2024 04:12] Downloading paper 2412.18547 from http://arxiv.org/pdf/2412.18547v1...
[26.12.2024 04:13] Extracting affiliations from text.
[26.12.2024 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"Token-Budget-Aware LLM Reasoning Tingxu Han1, Chunrong Fang*1, Shiyu Zhao2, Shiqing Ma3, Zhenyu Chen1, Zhenting Wang2 1Nanjing University 2Rutgers University 3UMass Amherst 4 2 0 2 4 2 ] . [ 1 7 4 5 8 1 . 2 1 4 2 : r a "
[26.12.2024 04:13] Response: ```python
["Nanjing University", "Rutgers University", "UMass Amherst"]
```
[26.12.2024 04:13] Deleting PDF ./assets/pdf/2412.18547.pdf.
[26.12.2024 04:13] Success.
[26.12.2024 04:13] Enriching papers with extra data.
[26.12.2024 04:13] ********************************************************************************
[26.12.2024 04:13] Abstract 0. Reasoning is critical for large language models (LLMs) to excel in a wide range of tasks. While methods like Chain-of-Thought (CoT) reasoning enhance LLM performance by decomposing problems into intermediate steps, they also incur significant overhead in token usage, leading to increased costs. We f...
[26.12.2024 04:13] Read previous papers.
[26.12.2024 04:13] Generating reviews via LLM API.
[26.12.2024 04:13] Querying the API.
[26.12.2024 04:13] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Reasoning is critical for large language models (LLMs) to excel in a wide range of tasks. While methods like Chain-of-Thought (CoT) reasoning enhance LLM performance by decomposing problems into intermediate steps, they also incur significant overhead in token usage, leading to increased costs. We find that the reasoning process of current LLMs is unnecessarily lengthy and it can be compressed by including a reasonable token budget in the prompt, but the choice of token budget plays a crucial role in the actual compression effectiveness. We then propose a token-budget-aware LLM reasoning framework, which dynamically estimates token budgets for different problems based on reasoning complexity and uses the estimated token budgets to guide the reasoning process. Experiments show that our method effectively reduces token costs in CoT reasoning with only a slight performance reduction, offering a practical solution to balance efficiency and accuracy in LLM reasoning. Code: https://github.com/GeniusHTX/TALE.
[26.12.2024 04:13] Response: {
  "desc": "–°—Ç–∞—Ç—å—è –æ–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è–º –≤ –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª—è—Ö (LLM), –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤. –ê–≤—Ç–æ—Ä—ã –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –±—é–¥–∂–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ç–æ–∫–µ–Ω—ã –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–µ—Ç–æ–¥–∞ —Ü–µ–ø–æ—á–∫–∏ –º—ã—Å–ª–µ–π (CoT), —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º –≤—ã—Å–æ–∫—É—é —Ç–æ—á–Ω–æ—Å—Ç—å. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –≤ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π LLM.",
  "emoji": "üí°",
  "title": "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –ò–ò: –±–æ–ª—å—à–µ –º—ã—Å–ª–µ–π, –º–µ–Ω—å—à–µ —Ç–æ–∫–µ–Ω–æ–≤"
}
[26.12.2024 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Reasoning is critical for large language models (LLMs) to excel in a wide range of tasks. While methods like Chain-of-Thought (CoT) reasoning enhance LLM performance by decomposing problems into intermediate steps, they also incur significant overhead in token usage, leading to increased costs. We find that the reasoning process of current LLMs is unnecessarily lengthy and it can be compressed by including a reasonable token budget in the prompt, but the choice of token budget plays a crucial role in the actual compression effectiveness. We then propose a token-budget-aware LLM reasoning framework, which dynamically estimates token budgets for different problems based on reasoning complexity and uses the estimated token budgets to guide the reasoning process. Experiments show that our method effectively reduces token costs in CoT reasoning with only a slight performance reduction, offering a practical solution to balance efficiency and accuracy in LLM reasoning. Code: https://github.com/GeniusHTX/TALE."

[26.12.2024 04:13] Response: ```python
["TRAINING", "INFERENCE"]
```
[26.12.2024 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Reasoning is critical for large language models (LLMs) to excel in a wide range of tasks. While methods like Chain-of-Thought (CoT) reasoning enhance LLM performance by decomposing problems into intermediate steps, they also incur significant overhead in token usage, leading to increased costs. We find that the reasoning process of current LLMs is unnecessarily lengthy and it can be compressed by including a reasonable token budget in the prompt, but the choice of token budget plays a crucial role in the actual compression effectiveness. We then propose a token-budget-aware LLM reasoning framework, which dynamically estimates token budgets for different problems based on reasoning complexity and uses the estimated token budgets to guide the reasoning process. Experiments show that our method effectively reduces token costs in CoT reasoning with only a slight performance reduction, offering a practical solution to balance efficiency and accuracy in LLM reasoning. Code: https://github.com/GeniusHTX/TALE."

[26.12.2024 04:13] Response: ```python
["REASONING", "OPTIMIZATION"]
```
[26.12.2024 04:13] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper addresses the reasoning efficiency of large language models (LLMs) by introducing a token-budget-aware framework. It highlights that while Chain-of-Thought (CoT) reasoning improves performance, it also increases token usage and costs. The authors propose a method to dynamically estimate token budgets based on the complexity of reasoning tasks, allowing for more efficient use of tokens. Experimental results demonstrate that this approach reduces token costs with minimal impact on performance, providing a balance between efficiency and accuracy in LLM reasoning.","title":"Optimizing Reasoning Efficiency in LLMs with Token Budgets"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='This paper addresses the reasoning efficiency of large language models (LLMs) by introducing a token-budget-aware framework. It highlights that while Chain-of-Thought (CoT) reasoning improves performance, it also increases token usage and costs. The authors propose a method to dynamically estimate token budgets based on the complexity of reasoning tasks, allowing for more efficient use of tokens. Experimental results demonstrate that this approach reduces token costs with minimal impact on performance, providing a balance between efficiency and accuracy in LLM reasoning.', title='Optimizing Reasoning Efficiency in LLMs with Token Budgets'))
[26.12.2024 04:13] Response: ParsedChatCompletionMessage[Article](content='{"desc":"Êé®ÁêÜÂØπ‰∫éÂ§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÔºàLLMsÔºâÂú®Â§öÁßç‰ªªÂä°‰∏≠Ë°®Áé∞Âá∫Ëâ≤Ëá≥ÂÖ≥ÈáçË¶Å„ÄÇËôΩÁÑ∂ÈìæÂºèÊé®ÁêÜÔºàCoTÔºâÊñπÊ≥ïÈÄöËøáÂ∞ÜÈóÆÈ¢òÂàÜËß£‰∏∫‰∏≠Èó¥Ê≠•È™§Êù•ÊèêÈ´òLLMÊÄßËÉΩÔºå‰ΩÜËøô‰πüÂØºËá¥‰∫ÜÊòæËëóÁöÑ‰ª§Áâå‰ΩøÁî®ÂºÄÈîÄÔºåÂ¢ûÂä†‰∫ÜÊàêÊú¨„ÄÇÊàë‰ª¨ÂèëÁé∞ÂΩìÂâçLLMÁöÑÊé®ÁêÜËøáÁ®ãËøá‰∫éÂÜóÈïøÔºåÂèØ‰ª•ÈÄöËøáÂú®ÊèêÁ§∫‰∏≠ÂåÖÂê´ÂêàÁêÜÁöÑ‰ª§ÁâåÈ¢ÑÁÆóÊù•ÂéãÁº©Ôºå‰ΩÜ‰ª§ÁâåÈ¢ÑÁÆóÁöÑÈÄâÊã©ÂØπÂéãÁº©ÊïàÊûúËá≥ÂÖ≥ÈáçË¶Å„ÄÇÊàë‰ª¨ÊèêÂá∫‰∫Ü‰∏ÄÁßçÂü∫‰∫é‰ª§ÁâåÈ¢ÑÁÆóÁöÑLLMÊé®ÁêÜÊ°ÜÊû∂ÔºåÂä®ÊÄÅ‰º∞ËÆ°‰∏çÂêåÈóÆÈ¢òÁöÑ‰ª§ÁâåÈ¢ÑÁÆóÔºå‰ªéËÄåÂú®‰øùÊåÅÊïàÁéáÂíåÂáÜÁ°ÆÊÄß‰πãÈó¥ÂèñÂæóÂπ≥Ë°°„ÄÇ","title":"‰ºòÂåñÊé®ÁêÜÔºåÈôç‰ΩéÊàêÊú¨ÔºÅ"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='Êé®ÁêÜÂØπ‰∫éÂ§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÔºàLLMsÔºâÂú®Â§öÁßç‰ªªÂä°‰∏≠Ë°®Áé∞Âá∫Ëâ≤Ëá≥ÂÖ≥ÈáçË¶Å„ÄÇËôΩÁÑ∂ÈìæÂºèÊé®ÁêÜÔºàCoTÔºâÊñπÊ≥ïÈÄöËøáÂ∞ÜÈóÆÈ¢òÂàÜËß£‰∏∫‰∏≠Èó¥Ê≠•È™§Êù•ÊèêÈ´òLLMÊÄßËÉΩÔºå‰ΩÜËøô‰πüÂØºËá¥‰∫ÜÊòæËëóÁöÑ‰ª§Áâå‰ΩøÁî®ÂºÄÈîÄÔºåÂ¢ûÂä†‰∫ÜÊàêÊú¨„ÄÇÊàë‰ª¨ÂèëÁé∞ÂΩìÂâçLLMÁöÑÊé®ÁêÜËøáÁ®ãËøá‰∫éÂÜóÈïøÔºåÂèØ‰ª•ÈÄöËøáÂú®ÊèêÁ§∫‰∏≠ÂåÖÂê´ÂêàÁêÜÁöÑ‰ª§ÁâåÈ¢ÑÁÆóÊù•ÂéãÁº©Ôºå‰ΩÜ‰ª§ÁâåÈ¢ÑÁÆóÁöÑÈÄâÊã©ÂØπÂéãÁº©ÊïàÊûúËá≥ÂÖ≥ÈáçË¶Å„ÄÇÊàë‰ª¨ÊèêÂá∫‰∫Ü‰∏ÄÁßçÂü∫‰∫é‰ª§ÁâåÈ¢ÑÁÆóÁöÑLLMÊé®ÁêÜÊ°ÜÊû∂ÔºåÂä®ÊÄÅ‰º∞ËÆ°‰∏çÂêåÈóÆÈ¢òÁöÑ‰ª§ÁâåÈ¢ÑÁÆóÔºå‰ªéËÄåÂú®‰øùÊåÅÊïàÁéáÂíåÂáÜÁ°ÆÊÄß‰πãÈó¥ÂèñÂæóÂπ≥Ë°°„ÄÇ', title='‰ºòÂåñÊé®ÁêÜÔºåÈôç‰ΩéÊàêÊú¨ÔºÅ'))
[26.12.2024 04:13] Loading Chinese text from previous data.
[26.12.2024 04:13] Renaming data file.
[26.12.2024 04:13] Renaming previous data. hf_papers.json to ./d/2024-12-26.json
[26.12.2024 04:13] Saving new data file.
[26.12.2024 04:13] Generating page.
[26.12.2024 04:13] Renaming previous page.
[26.12.2024 04:13] Renaming previous data. index.html to ./d/2024-12-26.html
[26.12.2024 04:13] [Experimental] Generating Chinese page for reading.
[26.12.2024 04:13] Chinese vocab [{'word': 'ËÆ®ËÆ∫', 'pinyin': 't«éo l√πn', 'trans': 'discuss'}, {'word': 'Ê∑±Â∫¶', 'pinyin': 'shƒìn d√π', 'trans': 'depth'}, {'word': 'Áº∫Â§±ÂÄº', 'pinyin': 'quƒì shƒ´ zh√≠', 'trans': 'missing value'}, {'word': 'ÊåëÊàò', 'pinyin': 'ti«éo zh√†n', 'trans': 'challenge'}, {'word': 'Âü∫‰∫é', 'pinyin': 'jƒ´ y√∫', 'trans': 'based on'}, {'word': 'ÂõæÂÉè', 'pinyin': 't√∫ xi√†ng', 'trans': 'image'}, {'word': 'Êâ©Êï£', 'pinyin': 'ku√≤ s√†n', 'trans': 'diffusion'}, {'word': 'ÂÖàÈ™å', 'pinyin': 'xiƒÅn y√†n', 'trans': 'prior'}, {'word': '‰øÆÂ§ç', 'pinyin': 'xi≈´ f√π', 'trans': 'repair'}, {'word': 'Ê®°Âûã', 'pinyin': 'm√≥ x√≠ng', 'trans': 'model'}, {'word': 'Â§ÑÁêÜ', 'pinyin': 'ch«î l«ê', 'trans': 'handle'}, {'word': 'Âå∫Âüü', 'pinyin': 'q≈´ y√π', 'trans': 'region'}, {'word': 'ËøûÁª≠', 'pinyin': 'li√°n x√π', 'trans': 'continuous'}, {'word': 'Â≠§Á´ãÁÇπ', 'pinyin': 'g≈´ l√¨ di«én', 'trans': 'isolated point'}, {'word': 'ÂèØÈù†', 'pinyin': 'kƒõ k√†o', 'trans': 'reliable'}, {'word': 'Â°´Ë°•', 'pinyin': 'ti√°n b«î', 'trans': 'fill in'}, {'word': '‰øùÊåÅ', 'pinyin': 'b«éo ch√≠', 'trans': 'maintain'}, {'word': 'Â∞∫Â∫¶', 'pinyin': 'ch«ê d√π', 'trans': 'scale'}, {'word': '‰∏ÄËá¥ÊÄß', 'pinyin': 'yƒ´ zh√¨ x√¨ng', 'trans': 'consistency'}, {'word': '3D', 'pinyin': '3D', 'trans': '3D'}, {'word': 'Âú∫ÊôØ', 'pinyin': 'ch«éng j«êng', 'trans': 'scene'}, {'word': 'ÁîüÊàê', 'pinyin': 'shƒìng ch√©ng', 'trans': 'generate'}, {'word': '‰ªªÂä°', 'pinyin': 'r√®n w√π', 'trans': 'task'}, {'word': 'Ë°®Áé∞', 'pinyin': 'bi«éo xi√†n', 'trans': 'performance'}, {'word': 'Âá∫Ëâ≤', 'pinyin': 'ch≈´ s√®', 'trans': 'outstanding'}, {'word': 'ÊÄßËÉΩ', 'pinyin': 'x√¨ng n√©ng', 'trans': 'performance'}, {'word': 'ËßÜËßâ', 'pinyin': 'sh√¨ ju√©', 'trans': 'visual'}, {'word': 'Ë¥®Èáè', 'pinyin': 'zh√¨ li√†ng', 'trans': 'quality'}, {'word': 'Ëß£ÂÜ≥ÊñπÊ°à', 'pinyin': 'jiƒõ ju√© fƒÅng √†n', 'trans': 'solution'}, {'word': 'È°πÁõÆ', 'pinyin': 'xi√†ng m√π', 'trans': 'project'}, {'word': 'È°µÈù¢', 'pinyin': 'y√® mi√†n', 'trans': 'page'}, {'word': 'Ê∫ê‰ª£Á†Å', 'pinyin': 'yu√°n d√†i m«é', 'trans': 'source code'}, {'word': 'ÊâæÂà∞', 'pinyin': 'zh«éo d√†o', 'trans': 'find'}]
[26.12.2024 04:13] Renaming previous Chinese page.
[26.12.2024 04:13] Renaming previous data. zh.html to ./d/2024-12-25_zh_reading_task.html
[26.12.2024 04:13] Writing Chinese reading task.
[26.12.2024 04:13] Writing result.
[26.12.2024 04:13] Renaming log file.
[26.12.2024 04:13] Renaming previous data. log.txt to ./logs/2024-12-26_last_log.txt
