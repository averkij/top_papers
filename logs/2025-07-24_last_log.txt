[24.07.2025 06:19] Read previous papers.
[24.07.2025 06:19] Generating top page (month).
[24.07.2025 06:19] Writing top page (month).
[24.07.2025 07:16] Read previous papers.
[24.07.2025 07:16] Get feed.
[24.07.2025 07:16] Get page data from previous paper. URL: https://huggingface.co/papers/2507.17512
[24.07.2025 07:16] Get page data from previous paper. URL: https://huggingface.co/papers/2507.17744
[24.07.2025 07:16] Get page data from previous paper. URL: https://huggingface.co/papers/2507.17202
[24.07.2025 07:16] Get page data from previous paper. URL: https://huggingface.co/papers/2507.16863
[24.07.2025 07:16] Extract page data from URL. URL: https://huggingface.co/papers/2507.16331
[24.07.2025 07:16] Get page data from previous paper. URL: https://huggingface.co/papers/2507.11465
[24.07.2025 07:16] Get page data from previous paper. URL: https://huggingface.co/papers/2507.17745
[24.07.2025 07:16] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[24.07.2025 07:16] No deleted papers detected.
[24.07.2025 07:16] Downloading and parsing papers (pdf, html). Total: 7.
[24.07.2025 07:16] Downloading and parsing paper https://huggingface.co/papers/2507.17512.
[24.07.2025 07:16] Extra JSON file exists (./assets/json/2507.17512.json), skip PDF parsing.
[24.07.2025 07:16] Paper image links file exists (./assets/img_data/2507.17512.json), skip HTML parsing.
[24.07.2025 07:16] Success.
[24.07.2025 07:16] Downloading and parsing paper https://huggingface.co/papers/2507.17744.
[24.07.2025 07:16] Extra JSON file exists (./assets/json/2507.17744.json), skip PDF parsing.
[24.07.2025 07:16] Paper image links file exists (./assets/img_data/2507.17744.json), skip HTML parsing.
[24.07.2025 07:16] Success.
[24.07.2025 07:16] Downloading and parsing paper https://huggingface.co/papers/2507.17202.
[24.07.2025 07:16] Extra JSON file exists (./assets/json/2507.17202.json), skip PDF parsing.
[24.07.2025 07:16] Paper image links file exists (./assets/img_data/2507.17202.json), skip HTML parsing.
[24.07.2025 07:16] Success.
[24.07.2025 07:16] Downloading and parsing paper https://huggingface.co/papers/2507.16863.
[24.07.2025 07:16] Extra JSON file exists (./assets/json/2507.16863.json), skip PDF parsing.
[24.07.2025 07:16] Paper image links file exists (./assets/img_data/2507.16863.json), skip HTML parsing.
[24.07.2025 07:16] Success.
[24.07.2025 07:16] Downloading and parsing paper https://huggingface.co/papers/2507.16331.
[24.07.2025 07:16] Downloading paper 2507.16331 from http://arxiv.org/pdf/2507.16331v1...
[24.07.2025 07:16] Extracting affiliations from text.
[24.07.2025 07:16] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"Re:Form Reducing Human Priors in Scalable Formal Software Verification with RL in LLMs: Preliminary Study on Dafny Veri-Code Team*1 1Shanghai AI Laboratory Abstract Existing informal language-based (e.g., human language) Large Language Models (LLMs) trained with Reinforcement Learning (RL) face significant challenge: their verification processes, which provide crucial training signals, are neither reliable nor scalable. In fact, the prevalent large proprietary models could hardly generate verifiable programs. promising yet largely uncharted alternative is formal language-based reasoning. Grounding LLMs in rigorous formal systems where generative models operate in formal language spaces (e.g., Dafny) enables the automatic and mathematically provable verification of their reasoning processes and outcomes. This capability is pivotal for achieving large-scale, reliable formal software verification. It is common practice to employ human-annotated chain-of-thought and other human priors to induce the reasoning and coding capabilities of LLMs. Unfortunately, it becomes unacceptably all-consuming to provide such priors for supervising complex programming tasks. In this work, we systematically explore ways to reduce human priors with the formal language, Dafny, as the main environment for our pilot study. Our pipeline mainly relies on introducing an automatic and scalable data curation pipeline, and careful RL designs integrated with feedback from the formal language verifier. We introduce DafnyComp, benchmark of compositional formal programs with autoformalized specifications for specification reasoning. Our supervised fine-tuning (SFT) stage enables even small models (e.g., 0.5B) to generate syntactically valid and verifiable Dafny code, surpassing proprietary models. RL with regularization further improves performance, achieving stronger generalization to out-of-domain tasks and outperforming all strong baselines on the challenging DafnyComp benchmark. Code: Models & Data"
[24.07.2025 07:16] Response: ```python
["Shanghai AI Laboratory"]
```
[24.07.2025 07:16] Deleting PDF ./assets/pdf/2507.16331.pdf.
[24.07.2025 07:16] Success.
[24.07.2025 07:16] Downloading and parsing paper https://huggingface.co/papers/2507.11465.
[24.07.2025 07:16] Extra JSON file exists (./assets/json/2507.11465.json), skip PDF parsing.
[24.07.2025 07:16] Paper image links file exists (./assets/img_data/2507.11465.json), skip HTML parsing.
[24.07.2025 07:16] Success.
[24.07.2025 07:16] Downloading and parsing paper https://huggingface.co/papers/2507.17745.
[24.07.2025 07:16] Extra JSON file exists (./assets/json/2507.17745.json), skip PDF parsing.
[24.07.2025 07:16] Paper image links file exists (./assets/img_data/2507.17745.json), skip HTML parsing.
[24.07.2025 07:16] Success.
[24.07.2025 07:16] Enriching papers with extra data.
[24.07.2025 07:16] ********************************************************************************
[24.07.2025 07:16] Abstract 0. Reinforcement Learning with Verifiable Rewards (RLVR) has emerged as a powerful paradigm for enhancing the reasoning capabilities of LLMs. Existing research has predominantly concentrated on isolated reasoning domains such as mathematical problem-solving, coding tasks, or logical reasoning. However,...
[24.07.2025 07:16] ********************************************************************************
[24.07.2025 07:16] Abstract 1. A framework for generating and exploring interactive video worlds from images using Masked Video Diffusion Transformer, Anti-Artifact Mechanism, Time Travel Sampling, and model acceleration techniques.  					AI-generated summary 				 Yume aims to use images, text, or videos to create an interactive,...
[24.07.2025 07:16] ********************************************************************************
[24.07.2025 07:16] Abstract 2. DesignLab uses fine-tuned large language models to iteratively improve presentation slides through a design reviewer and contributor system, outperforming existing tools.  					AI-generated summary 				 Designing high-quality presentation slides can be challenging for non-experts due to the complexi...
[24.07.2025 07:16] ********************************************************************************
[24.07.2025 07:16] Abstract 3. The Turing Eye Test evaluates MLLMs' perceptual abilities through synthetic images, revealing that vision tower generalization is a significant gap compared to human perception.  					AI-generated summary 				 Achieving human-like perception and reasoning in Multimodal Large Language Models (MLLMs) ...
[24.07.2025 07:16] ********************************************************************************
[24.07.2025 07:16] Abstract 4. Formal language-based reasoning and automatic verification improve the reliability and scalability of Large Language Models for generating verifiable programs.  					AI-generated summary 				 Existing informal language-based (e.g., human language) Large Language Models (LLMs) trained with Reinforcem...
[24.07.2025 07:16] ********************************************************************************
[24.07.2025 07:16] Abstract 5. Elevate3D enhances both texture and geometry of low-quality 3D assets using HFS-SDEdit and monocular geometry predictors, achieving superior refinement quality.  					AI-generated summary 				 High-quality 3D assets are essential for various applications in computer graphics and 3D vision but remain...
[24.07.2025 07:16] ********************************************************************************
[24.07.2025 07:16] Abstract 6. Ultra3D uses VecSet and Part Attention to accelerate 3D voxel generation while maintaining high quality and resolution.  					AI-generated summary 				 Recent advances in sparse voxel representations have significantly improved the quality of 3D content generation, enabling high-resolution modeling ...
[24.07.2025 07:16] Read previous papers.
[24.07.2025 07:16] Generating reviews via LLM API.
[24.07.2025 07:16] Using data from previous issue: {"categories": ["#math", "#training", "#reasoning", "#rl", "#optimization"], "emoji": "üß†", "ru": {"title": "–ú–Ω–æ–≥–æ–¥–æ–º–µ–Ω–Ω–æ–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–µ: —Ä–∞—Å–∫—Ä—ã–≤–∞—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –ò–ò —á–µ—Ä–µ–∑ –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º", "desc": "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ—Å–≤—è—â–µ–Ω–æ –æ–±—É—á–µ–Ω–∏—é —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º —Å –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏ (RLVR) –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–ø–æ—Å–æ–±
[24.07.2025 07:16] Using data from previous issue: {"categories": ["#dataset", "#architecture", "#open_source", "#diffusion", "#cv", "#video"], "emoji": "üé•", "ru": {"title": "–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∏–¥–µ–æ–º–∏—Ä–æ–≤ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ò–ò", "desc": "–≠—Ç–∞ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ Yume –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∏–¥–µ–æ–º–∏—Ä–æ–≤ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –û–Ω –∏—Å–ø–æ–ª—å–∑
[24.07.2025 07:16] Using data from previous issue: {"categories": ["#optimization", "#training", "#multimodal"], "emoji": "üé®", "ru": {"title": "–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π", "desc": "DesignLab - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–∞—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –±–æ–ª—å—à–∏–µ —è–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–ª–∞–π–¥–æ–≤. –û–Ω–∞ —Ä–∞–∑–¥–µ–ª—è–µ—Ç –ø—Ä
[24.07.2025 07:16] Using data from previous issue: {"categories": ["#synthetic", "#benchmark", "#multimodal", "#reasoning", "#perception", "#cv"], "emoji": "üëÅÔ∏è", "ru": {"title": "–¢–µ—Å—Ç –¢—å—é—Ä–∏–Ω–≥–∞ –¥–ª—è –∑—Ä–µ–Ω–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä—Ü–µ–ø—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –ò–ò", "desc": "–°—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —Ç–µ—Å—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –ø–µ—Ä—Ü–µ–ø—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã—Ö –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ
[24.07.2025 07:16] Querying the API.
[24.07.2025 07:16] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Formal language-based reasoning and automatic verification improve the reliability and scalability of Large Language Models for generating verifiable programs.  					AI-generated summary 				 Existing informal language-based (e.g., human language) Large Language Models (LLMs) trained with Reinforcement Learning (RL) face a significant challenge: their verification processes, which provide crucial training signals, are neither reliable nor scalable. In fact, the prevalent large proprietary models could hardly generate verifiable programs. A promising yet largely uncharted alternative is formal language-based reasoning. Grounding LLMs in rigorous formal systems where generative models operate in formal language spaces (e.g., Dafny) enables the automatic and mathematically provable verification of their reasoning processes and outcomes. This capability is pivotal for achieving large-scale, reliable formal software verification. It is a common practice to employ human-annotated chain-of-thought and other human priors to induce the reasoning and coding capabilities of LLMs. Unfortunately, it becomes unacceptably all-consuming to provide such priors for supervising complex programming tasks. In this work, we systematically explore ways to reduce human priors with the formal language, Dafny, as the main environment for our pilot study. Our pipeline mainly relies on introducing an automatic and scalable data curation pipeline, and careful RL designs integrated with feedback from the formal language verifier. We introduce DafnyComp, a benchmark of compositional formal programs with auto-formalized specifications for specification reasoning. Our supervised fine-tuning (SFT) stage enables even small models (e.g., 0.5B) to generate syntactically valid and verifiable Dafny code, surpassing proprietary models. RL with regularization further improves performance, achieving stronger generalization to out-of-domain tasks and outperforming all strong baselines on the challenging DafnyComp benchmark.
[24.07.2025 07:16] Response: {
  "desc": "–°—Ç–∞—Ç—å—è –∏—Å—Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç–∏ –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π (LLM) –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º. –ê–≤—Ç–æ—Ä—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç DafnyComp - –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–º —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è–º. –û–Ω–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ –¥–∞–∂–µ –Ω–µ–±–æ–ª—å—à–∏–µ –º–æ–¥–µ–ª–∏ (0.5B –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤) –ø–æ—Å–ª–µ –¥–æ–æ–±—É—á–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–Ω—ã –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º—ã–π –∫–æ–¥ –Ω–∞ —è–∑—ã–∫–µ Dafny. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º (RL) —Å —Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏–µ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–µ–π –∏ –∏—Ö –æ–±–æ–±—â–∞—é—â—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å.",
  "emoji": "üß†",
  "title": "–§–æ—Ä–º–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏ –ø–æ–≤—ã—à–∞—é—Ç –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ò–ò –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏"
}
[24.07.2025 07:16] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Formal language-based reasoning and automatic verification improve the reliability and scalability of Large Language Models for generating verifiable programs.  					AI-generated summary 				 Existing informal language-based (e.g., human language) Large Language Models (LLMs) trained with Reinforcement Learning (RL) face a significant challenge: their verification processes, which provide crucial training signals, are neither reliable nor scalable. In fact, the prevalent large proprietary models could hardly generate verifiable programs. A promising yet largely uncharted alternative is formal language-based reasoning. Grounding LLMs in rigorous formal systems where generative models operate in formal language spaces (e.g., Dafny) enables the automatic and mathematically provable verification of their reasoning processes and outcomes. This capability is pivotal for achieving large-scale, reliable formal software verification. It is a common practice to employ human-annotated chain-of-thought and other human priors to induce the reasoning and coding capabilities of LLMs. Unfortunately, it becomes unacceptably all-consuming to provide such priors for supervising complex programming tasks. In this work, we systematically explore ways to reduce human priors with the formal language, Dafny, as the main environment for our pilot study. Our pipeline mainly relies on introducing an automatic and scalable data curation pipeline, and careful RL designs integrated with feedback from the formal language verifier. We introduce DafnyComp, a benchmark of compositional formal programs with auto-formalized specifications for specification reasoning. Our supervised fine-tuning (SFT) stage enables even small models (e.g., 0.5B) to generate syntactically valid and verifiable Dafny code, surpassing proprietary models. RL with regularization further improves performance, achieving stronger generalization to out-of-domain tasks and outperforming all strong baselines on the challenging DafnyComp benchmark."

[24.07.2025 07:16] Response: ```python
['DATASET', 'RL', 'RLHF', 'BENCHMARK', 'TRAINING', 'SMALL_MODELS']
```
[24.07.2025 07:16] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Formal language-based reasoning and automatic verification improve the reliability and scalability of Large Language Models for generating verifiable programs.  					AI-generated summary 				 Existing informal language-based (e.g., human language) Large Language Models (LLMs) trained with Reinforcement Learning (RL) face a significant challenge: their verification processes, which provide crucial training signals, are neither reliable nor scalable. In fact, the prevalent large proprietary models could hardly generate verifiable programs. A promising yet largely uncharted alternative is formal language-based reasoning. Grounding LLMs in rigorous formal systems where generative models operate in formal language spaces (e.g., Dafny) enables the automatic and mathematically provable verification of their reasoning processes and outcomes. This capability is pivotal for achieving large-scale, reliable formal software verification. It is a common practice to employ human-annotated chain-of-thought and other human priors to induce the reasoning and coding capabilities of LLMs. Unfortunately, it becomes unacceptably all-consuming to provide such priors for supervising complex programming tasks. In this work, we systematically explore ways to reduce human priors with the formal language, Dafny, as the main environment for our pilot study. Our pipeline mainly relies on introducing an automatic and scalable data curation pipeline, and careful RL designs integrated with feedback from the formal language verifier. We introduce DafnyComp, a benchmark of compositional formal programs with auto-formalized specifications for specification reasoning. Our supervised fine-tuning (SFT) stage enables even small models (e.g., 0.5B) to generate syntactically valid and verifiable Dafny code, surpassing proprietary models. RL with regularization further improves performance, achieving stronger generalization to out-of-domain tasks and outperforming all strong baselines on the challenging DafnyComp benchmark."

[24.07.2025 07:16] Response: ```python
["REASONING", "OPTIMIZATION"]
```
[24.07.2025 07:16] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper discusses how using formal language-based reasoning can enhance the reliability and scalability of Large Language Models (LLMs) in generating verifiable programs. Traditional LLMs, which rely on informal language and Reinforcement Learning, struggle with verification processes that are essential for training. The authors propose a method that utilizes the formal language Dafny, allowing for automatic and mathematically provable verification of the models\' outputs. Their approach includes a new benchmark called DafnyComp and demonstrates that even smaller models can produce valid and verifiable code, outperforming existing proprietary models.","title":"Enhancing LLMs with Formal Language for Reliable Program Verification"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc="This paper discusses how using formal language-based reasoning can enhance the reliability and scalability of Large Language Models (LLMs) in generating verifiable programs. Traditional LLMs, which rely on informal language and Reinforcement Learning, struggle with verification processes that are essential for training. The authors propose a method that utilizes the formal language Dafny, allowing for automatic and mathematically provable verification of the models' outputs. Their approach includes a new benchmark called DafnyComp and demonstrates that even smaller models can produce valid and verifiable code, outperforming existing proprietary models.", title='Enhancing LLMs with Formal Language for Reliable Program Verification'))
[24.07.2025 07:17] Response: ParsedChatCompletionMessage[Article](content='{"desc":"Êú¨ÊñáÊé¢ËÆ®‰∫ÜÂü∫‰∫éÂΩ¢ÂºèËØ≠Ë®ÄÁöÑÊé®ÁêÜÂíåËá™Âä®È™åËØÅÂ¶Ç‰ΩïÊèêÈ´òÂ§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÔºàLLMsÔºâÁîüÊàêÂèØÈ™åËØÅÁ®ãÂ∫èÁöÑÂèØÈù†ÊÄßÂíåÂèØÊâ©Â±ïÊÄß„ÄÇÁé∞ÊúâÁöÑÂü∫‰∫éÈùûÊ≠£ÂºèËØ≠Ë®ÄÁöÑLLMsÂú®È™åËØÅËøáÁ®ã‰∏≠Èù¢‰∏¥ÈáçÂ§ßÊåëÊàòÔºåÂØºËá¥ÂÖ∂ÁîüÊàêÁöÑÁ®ãÂ∫èÈöæ‰ª•È™åËØÅ„ÄÇÈÄöËøáÂ∞ÜLLMsÂµåÂÖ•‰∏•Ê†ºÁöÑÂΩ¢ÂºèÁ≥ªÁªüÔºàÂ¶ÇDafnyÔºâÔºåÂèØ‰ª•ÂÆûÁé∞ÂÖ∂Êé®ÁêÜËøáÁ®ãÂíåÁªìÊûúÁöÑËá™Âä®ÂåñÂíåÊï∞Â≠¶ÂèØËØÅÊòéÁöÑÈ™åËØÅ„ÄÇÊàë‰ª¨ÁöÑÁ†îÁ©∂Ë°®ÊòéÔºå‰ΩøÁî®Dafny‰Ωú‰∏∫‰∏ªË¶ÅÁéØÂ¢ÉÔºåÁªìÂêàËá™Âä®ÂåñÊï∞ÊçÆÊï¥ÁêÜÂíåÂº∫ÂåñÂ≠¶‰π†ËÆæËÆ°ÔºåÂèØ‰ª•ÊòæËëóÂáèÂ∞ëÂØπ‰∫∫Á±ªÂÖàÈ™åÁü•ËØÜÁöÑ‰æùËµñÔºåÊèêÂçáÊ®°ÂûãÂú®Â§çÊùÇÁºñÁ®ã‰ªªÂä°‰∏≠ÁöÑË°®Áé∞„ÄÇ","title":"ÂΩ¢ÂºèËØ≠Ë®ÄÂä©ÂäõÂ§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÁöÑÂèØÈù†ÊÄß‰∏éÂèØÊâ©Â±ïÊÄß"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='Êú¨ÊñáÊé¢ËÆ®‰∫ÜÂü∫‰∫éÂΩ¢ÂºèËØ≠Ë®ÄÁöÑÊé®ÁêÜÂíåËá™Âä®È™åËØÅÂ¶Ç‰ΩïÊèêÈ´òÂ§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÔºàLLMsÔºâÁîüÊàêÂèØÈ™åËØÅÁ®ãÂ∫èÁöÑÂèØÈù†ÊÄßÂíåÂèØÊâ©Â±ïÊÄß„ÄÇÁé∞ÊúâÁöÑÂü∫‰∫éÈùûÊ≠£ÂºèËØ≠Ë®ÄÁöÑLLMsÂú®È™åËØÅËøáÁ®ã‰∏≠Èù¢‰∏¥ÈáçÂ§ßÊåëÊàòÔºåÂØºËá¥ÂÖ∂ÁîüÊàêÁöÑÁ®ãÂ∫èÈöæ‰ª•È™åËØÅ„ÄÇÈÄöËøáÂ∞ÜLLMsÂµåÂÖ•‰∏•Ê†ºÁöÑÂΩ¢ÂºèÁ≥ªÁªüÔºàÂ¶ÇDafnyÔºâÔºåÂèØ‰ª•ÂÆûÁé∞ÂÖ∂Êé®ÁêÜËøáÁ®ãÂíåÁªìÊûúÁöÑËá™Âä®ÂåñÂíåÊï∞Â≠¶ÂèØËØÅÊòéÁöÑÈ™åËØÅ„ÄÇÊàë‰ª¨ÁöÑÁ†îÁ©∂Ë°®ÊòéÔºå‰ΩøÁî®Dafny‰Ωú‰∏∫‰∏ªË¶ÅÁéØÂ¢ÉÔºåÁªìÂêàËá™Âä®ÂåñÊï∞ÊçÆÊï¥ÁêÜÂíåÂº∫ÂåñÂ≠¶‰π†ËÆæËÆ°ÔºåÂèØ‰ª•ÊòæËëóÂáèÂ∞ëÂØπ‰∫∫Á±ªÂÖàÈ™åÁü•ËØÜÁöÑ‰æùËµñÔºåÊèêÂçáÊ®°ÂûãÂú®Â§çÊùÇÁºñÁ®ã‰ªªÂä°‰∏≠ÁöÑË°®Áé∞„ÄÇ', title='ÂΩ¢ÂºèËØ≠Ë®ÄÂä©ÂäõÂ§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÁöÑÂèØÈù†ÊÄß‰∏éÂèØÊâ©Â±ïÊÄß'))
[24.07.2025 07:17] Using data from previous issue: {"categories": ["#3d", "#open_source", "#synthetic"], "emoji": "üî¨", "ru": {"title": "–ü—Ä–µ–≤—Ä–∞—â–∞–µ–º –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ 3D-–º–æ–¥–µ–ª–∏ –≤ —à–µ–¥–µ–≤—Ä—ã", "desc": "Elevate3D - —ç—Ç–æ –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ 3D-–º–æ–¥–µ–ª–µ–π –Ω–∏–∑–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è. –û–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ HFS-SDEdit –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–µ–∫—Å—Ç—É—Ä –∏ –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä—ã –≥–µ–æ–º
[24.07.2025 07:17] Using data from previous issue: {"categories": ["#optimization", "#3d"], "emoji": "üßä", "ru": {"title": "–£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö 3D-–º–æ–¥–µ–ª–µ–π —Å –ø–æ–º–æ—â—å—é –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è", "desc": "Ultra3D - —ç—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ 3D-–∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ VecSet –∏ –º–µ—Ö–∞–Ω–∏–∑–º Part Attention. VecSet 
[24.07.2025 07:17] Renaming data file.
[24.07.2025 07:17] Renaming previous data. hf_papers.json to ./d/2025-07-24.json
[24.07.2025 07:17] Saving new data file.
[24.07.2025 07:17] Generating page.
[24.07.2025 07:17] Renaming previous page.
[24.07.2025 07:17] Renaming previous data. index.html to ./d/2025-07-24.html
[24.07.2025 07:17] Writing result.
[24.07.2025 07:17] Renaming log file.
[24.07.2025 07:17] Renaming previous data. log.txt to ./logs/2025-07-24_last_log.txt
