[04.03.2025 07:12] Read previous papers.
[04.03.2025 07:12] Generating top page (month).
[04.03.2025 07:12] Writing top page (month).
[04.03.2025 08:13] Read previous papers.
[04.03.2025 08:13] Get feed.
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.01785
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.01774
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.01743
[04.03.2025 08:13] Extract page data from URL. URL: https://huggingface.co/papers/2503.01496
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.01307
[04.03.2025 08:13] Extract page data from URL. URL: https://huggingface.co/papers/2503.00714
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.00784
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.00501
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.01370
[04.03.2025 08:13] Extract page data from URL. URL: https://huggingface.co/papers/2503.01295
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.01739
[04.03.2025 08:13] Get page data from previous paper. URL: https://huggingface.co/papers/2503.01807
[04.03.2025 08:13] Extract page data from URL. URL: https://huggingface.co/papers/2503.00729
[04.03.2025 08:13] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[04.03.2025 08:13] No deleted papers detected.
[04.03.2025 08:13] Downloading and parsing papers (pdf, html). Total: 13.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01785.
[04.03.2025 08:13] Extra JSON file exists (./assets/json/2503.01785.json), skip PDF parsing.
[04.03.2025 08:13] Paper image links file exists (./assets/img_data/2503.01785.json), skip HTML parsing.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01774.
[04.03.2025 08:13] Extra JSON file exists (./assets/json/2503.01774.json), skip PDF parsing.
[04.03.2025 08:13] Paper image links file exists (./assets/img_data/2503.01774.json), skip HTML parsing.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01743.
[04.03.2025 08:13] Extra JSON file exists (./assets/json/2503.01743.json), skip PDF parsing.
[04.03.2025 08:13] Paper image links file exists (./assets/img_data/2503.01743.json), skip HTML parsing.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01496.
[04.03.2025 08:13] Downloading paper 2503.01496 from http://arxiv.org/pdf/2503.01496v1...
[04.03.2025 08:13] Extracting affiliations from text.
[04.03.2025 08:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"Liger: Linearizing Large Language Models to Gated Recurrent Structures Disen Lan 1 2 * Weigao Sun 1 (cid:12) Jiaxi Hu 3 Jusen Du 1 4 * Yu Cheng 5 (cid:12) 5 2 0 2 3 ] . [ 1 6 9 4 1 0 . 3 0 5 2 : r a "
[04.03.2025 08:13] Response: ```python
[]
```
[04.03.2025 08:13] Extracting affiliations from text.
[04.03.2025 08:13] Mistral request. Model: mistral-large-latest. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"Liger: Linearizing Large Language Models to Gated Recurrent Structures Disen Lan 1 2 * Weigao Sun 1 (cid:12) Jiaxi Hu 3 Jusen Du 1 4 * Yu Cheng 5 (cid:12) 5 2 0 2 3 ] . [ 1 6 9 4 1 0 . 3 0 5 2 : r aTransformers with linear recurrent modeling offer linear-time training and constant-memory inference. Despite their demonstrated efficiency and performance, pretraining such non-standard architectures from scratch remains costly and risky. The linearization of large language models (LLMs) transforms pretrained standard models into linear recurrent structures, enabling more efficient deployment. However, current linearization methods typically introduce additional feature map modules that require extensive finetuning and overlook the gating mechanisms used in state-of-the-art linear recurrent models. To address these issues, this paper presents Liger, short for Linearizing LLMs to gated recurrent structures. Liger is novel approach for converting pretrained LLMs into gated linear recurrent models without adding extra parameters. It repurposes the pretrained key matrix weights to construct diverse gating mechanisms, facilitating the formation of various gated recurrent structures while avoiding the need to train additional components from scratch. Using lightweight finetuning with Low-Rank Adaptation (LoRA), Liger restores the performance of the linearized gated recurrent models to match that of the original LLMs. Additionally, we introduce Liger Attention, an intra-layer hybrid attention mechanism, which significantly recovers 93% of the Transformerbased LLM at 0.02% pre-training tokens during the linearization process, achieving competitive results across multiple benchmarks, as validated on models ranging from 1B to 8B parameters. Code is available at https://github.com/ OpenSparseLLMs/Linearization. 1Shanghai AI Laboratory 2South China University of Technology 3The Hong Kong University of Science and Technology (Guangzhou) 4Nanjing University 5The Chinese University of Hong Kong. * Interns at Shanghai AI Laboratory. (cid:12) Correspondence to: Weigao Sun <sunweigao@outlook.com>, Yu Cheng <chengyu@cse.cuhk.edu.hk>. Copyright 2025 by the author(s). 1 Figure 1. Liger Performance and Efficiency. Our proposed Liger recovers nearly 93% performance of Llama-3.2-1B and outperforms pretrained gated recurrent models at only 0.02% of the pre-training tokens cost. 1. Introduction Large language models (LLMs) have demonstrated exceptional performance across various natural language processing tasks (Chintala, 2023; Team, 2023; Zhu et al., 2024; Qu et al., 2024). However, the Transformer-based architecture (Vaswani et al., 2017) used in modern LLMs, with its reliance on softmax attention, suffers from quadratic computational complexity. This inefficiency results in significant speed and memory challenges, particularly during pretraining on long sequences. During inference, the Key-Value (KV) cache (Kwon et al., 2023) grows linearly with the input sequence length, leading to reduced inference speed and high memory usage, which severely limits the capability of these models for handling long-sequence tasks (Sun et al., 2024b). In contrast, models based on linear recurrent modeling (Katharopoulos et al., 2020; Yang et al., 2023; Qin et al., 2024b; Sun et al., 2024a; Du et al., 2025) provide linear-time training and constant-memory inference, offering substantial efficiency benefits and positioning themselves as promising candidates for the next generation of foundational architectures (MiniMax et al., 2025). While pretraining LLMs using architectures based on linear resurrent modeling reduces costs due to their linear training complexity, the high expenses of pretraining from scratch associated with large model sizes and datasets still remain major obstacle to their adoption and practical use. This Liger: Linearizing Large Language Models to Gated Recurrent Structures challenge has hindered the advancement of linear recurrent models. Linearizing pretrained LLMs like SUPRA (Mercat et al., 2024), MambaInLlama (Wang et al., 2024) and LoLCATs (Zhang et al., 2024a), as an emerging new direction, allows the transfer of weights from an existing pretrained model to one with linear recurrent modeling architectures at small fraction of the original pretraining cost. The linearization approach is promising post-training technique to enable efficient pretrained model deployment while preserving their performance. Gating mechanisms (Qin et al., 2024a; Sun et al., 2023) play crucial role in linear recurrent models by controlling memory retention and forgetting, with their effectiveness widely demonstrated in such architectures. However, incorporating gate modules as additional components requires both transferring weights from pre-trained LLMs and training these gating modules from scratch. This process not only increases the cost of linearization but also creates larger architectural divergence from Transformer-based LLMs. This divergence may hinder the effective approximation of softmax attention, limiting the performance of gated linear recurrent models (Zhang et al., 2024d). Moreover, existing linearization methods often overlook the detailed design considerations of gated linear models, and the newly added modules fail to leverage the pre-trained weights of LLMs, further reducing the efficiency of linearization. In this paper, we present Liger, which stands for Linearizing large language models into gated recurrent structures, novel approach for linearizing LLMs. Liger repurposes the weights from pre-trained Transformer-based LLMs and introduces novel method for constructing crucial gating mechanisms in gated recurrent structures using the key projection. This approach avoids the complex attention transfer process found in existing linearization methods. After transforming the weights and constructing the gating mechanisms, Liger requires only lightweight fine-tuning of the linearized gated recurrent model parameters through LoRA autoregressive training. This efficient process restores the models performance with minimal linearization cost, achieving competitive results across range of language modeling and understanding benchmarks while benefiting from the linear-time inference efficiency of the recurrent architecture. Our contributions can be summarized as follows: We propose Liger Attention, an intra-layer hybrid attention mechanism that combines sliding window softmax attention with linear recurrent mod"
[04.03.2025 08:13] Mistral response. {"id": "96ca33e704e94cc9a6bbd0744a3706e8", "object": "chat.completion", "created": 1741075989, "model": "mistral-large-latest", "choices": [{"index": 0, "message": {"role": "assistant", "tool_calls": null, "content": "```python\n[\n    \"Shanghai AI Laboratory\",\n    \"South China University of Technology\",\n    \"The Hong Kong University of Science and Technology (Guangzhou)\",\n    \"Nanjing University\",\n    \"The Chinese University of Hong Kong\"\n]\n```"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 1591, "total_tokens": 1654, "completion_tokens": 63}}
[04.03.2025 08:13] Response: ```python
[
    "Shanghai AI Laboratory",
    "South China University of Technology",
    "The Hong Kong University of Science and Technology (Guangzhou)",
    "Nanjing University",
    "The Chinese University of Hong Kong"
]
```
[04.03.2025 08:13] Deleting PDF ./assets/pdf/2503.01496.pdf.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01307.
[04.03.2025 08:13] Extra JSON file exists (./assets/json/2503.01307.json), skip PDF parsing.
[04.03.2025 08:13] Paper image links file exists (./assets/img_data/2503.01307.json), skip HTML parsing.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.00714.
[04.03.2025 08:13] Downloading paper 2503.00714 from http://arxiv.org/pdf/2503.00714v1...
[04.03.2025 08:13] Extracting affiliations from text.
[04.03.2025 08:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 2 ] . [ 1 4 1 7 0 0 . 3 0 5 2 : r Speculative Ad-hoc Querying Haoyu Li The University of Texas at Austin lhy@utexas.edu Srikanth Kandula Amazon Web Services kandula@gmail.com Maria Angels de Luis Balaguer Microsoft Research angelsd@microsoft.com Aditya Akella The University of Texas at Austin akella@cs.utexas.edu Venkat Arun The University of Texas at Austin venkat@utexas.edu "
[04.03.2025 08:13] Response: ```python
["The University of Texas at Austin", "Amazon Web Services", "Microsoft Research"]
```
[04.03.2025 08:13] Deleting PDF ./assets/pdf/2503.00714.pdf.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.00784.
[04.03.2025 08:13] Extra JSON file exists (./assets/json/2503.00784.json), skip PDF parsing.
[04.03.2025 08:13] Paper image links file exists (./assets/img_data/2503.00784.json), skip HTML parsing.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.00501.
[04.03.2025 08:13] Extra JSON file exists (./assets/json/2503.00501.json), skip PDF parsing.
[04.03.2025 08:13] Paper image links file exists (./assets/img_data/2503.00501.json), skip HTML parsing.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01370.
[04.03.2025 08:13] Downloading paper 2503.01370 from http://arxiv.org/pdf/2503.01370v1...
[04.03.2025 08:13] Failed to download and parse paper https://huggingface.co/papers/2503.01370: max() arg is an empty sequence
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01295.
[04.03.2025 08:13] Downloading paper 2503.01295 from http://arxiv.org/pdf/2503.01295v1...
[04.03.2025 08:13] Extracting affiliations from text.
[04.03.2025 08:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 3 ] . [ 1 5 9 2 1 0 . 3 0 5 2 : r CodeArena: Collective Evaluation Platform for LLM Code Generation Mingzhe Du1,2, Anh Tuan Luu1, Bin Ji2, Xiaobao Wu1, Dong Huang3, Terry Yue Zhuo4, Qian Liu5, See-Kiong Ng2 1Nanyang Technological University, 2National University of Singapore, 3The University of Hong Kong, 4Monash University, 5ByteDance. {mingzhe001,anhtuan.luu,xiaobao002}@ntu.edu.sg, {jibin,seekiong}@nus.edu.sg, dhuang@cs.hku.hk, terry.zhuo@monash.edu, liuqian@bytedance.com "
[04.03.2025 08:13] Response: ```python
[
    "Nanyang Technological University",
    "National University of Singapore",
    "The University of Hong Kong",
    "Monash University",
    "ByteDance"
]
```
[04.03.2025 08:13] Deleting PDF ./assets/pdf/2503.01295.pdf.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01739.
[04.03.2025 08:13] Extra JSON file exists (./assets/json/2503.01739.json), skip PDF parsing.
[04.03.2025 08:13] Paper image links file exists (./assets/img_data/2503.01739.json), skip HTML parsing.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.01807.
[04.03.2025 08:13] Extra JSON file exists (./assets/json/2503.01807.json), skip PDF parsing.
[04.03.2025 08:13] Paper image links file exists (./assets/img_data/2503.01807.json), skip HTML parsing.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Downloading and parsing paper https://huggingface.co/papers/2503.00729.
[04.03.2025 08:13] Downloading paper 2503.00729 from http://arxiv.org/pdf/2503.00729v1...
[04.03.2025 08:13] Extracting affiliations from text.
[04.03.2025 08:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"CLEA: Closed-Loop Embodied Agent for Enhancing Task Execution in Dynamic Environments Mingcong Lei, Ge Wang, Yiming Zhao, Zhixin Mai, Qing Zhao, Yao Guo, Zhen Li, Shuguang Cui, Yatong Han, and Jinke Ren 5 2 0 2 2 ] . [ 1 9 2 7 0 0 . 3 0 5 2 : r Fig. 1: Task execution processes of CLEA. (1) Search task: CLEA facilitates adaptive strategy adjustments in partially observable environments. By analyzing visual inputs from robot 2, which remains stationary on the table, CLEA directs robot 1, the mobile unit, to explore alternative locationssuch as the interior of the refrigeratorin search of water. (2) Manipulation task: CLEA evaluates the feasibility of each action and dynamically refines its strategy. Upon opening the oven, it determines that placing the apple directly inside is infeasible. Consequently, CLEA adjusts the next step to more appropriate action: pulling out the grill to create sufficient space, thereby successfully completing the manipulation task. Abstract Large Language Models (LLMs) exhibit remarkable capabilities in the hierarchical decomposition of complex tasks through semantic reasoning. However, their application in embodied systems faces challenges in ensuring reliable execution of subtask sequences and achieving one-shot success in long-term task completion. To address these limitations in dynamic environments, we propose Closed-Loop Embodied Agent (CLEA)a novel architecture incorporating four specialized open-source LLMs with functional decoupling for closed-loop task management. The framework features two core innovations: (1) Interactive task planner that dynamically generates executable subtasks based on the environmental memory, and (2) Multimodal execution critic employing an evaluation framework to conduct probabilistic assessment of action feasibility, triggering hierarchical re-planning mechanisms when environ- * These authors contributed equally to this work. Corresponding authors: Jinke Ren (jinkeren@cuhk.edu.cn); Yatong Han (hanyatong@"
[04.03.2025 08:13] Response: ```python
[]
```
[04.03.2025 08:13] Extracting affiliations from text.
[04.03.2025 08:13] Mistral request. Model: mistral-large-latest. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"CLEA: Closed-Loop Embodied Agent for Enhancing Task Execution in Dynamic Environments Mingcong Lei, Ge Wang, Yiming Zhao, Zhixin Mai, Qing Zhao, Yao Guo, Zhen Li, Shuguang Cui, Yatong Han, and Jinke Ren 5 2 0 2 2 ] . [ 1 9 2 7 0 0 . 3 0 5 2 : r Fig. 1: Task execution processes of CLEA. (1) Search task: CLEA facilitates adaptive strategy adjustments in partially observable environments. By analyzing visual inputs from robot 2, which remains stationary on the table, CLEA directs robot 1, the mobile unit, to explore alternative locationssuch as the interior of the refrigeratorin search of water. (2) Manipulation task: CLEA evaluates the feasibility of each action and dynamically refines its strategy. Upon opening the oven, it determines that placing the apple directly inside is infeasible. Consequently, CLEA adjusts the next step to more appropriate action: pulling out the grill to create sufficient space, thereby successfully completing the manipulation task. Abstract Large Language Models (LLMs) exhibit remarkable capabilities in the hierarchical decomposition of complex tasks through semantic reasoning. However, their application in embodied systems faces challenges in ensuring reliable execution of subtask sequences and achieving one-shot success in long-term task completion. To address these limitations in dynamic environments, we propose Closed-Loop Embodied Agent (CLEA)a novel architecture incorporating four specialized open-source LLMs with functional decoupling for closed-loop task management. The framework features two core innovations: (1) Interactive task planner that dynamically generates executable subtasks based on the environmental memory, and (2) Multimodal execution critic employing an evaluation framework to conduct probabilistic assessment of action feasibility, triggering hierarchical re-planning mechanisms when environ- * These authors contributed equally to this work. Corresponding authors: Jinke Ren (jinkeren@cuhk.edu.cn); Yatong Han (hanyatong@cuhk.edu.cn) M. Lei, G. Wang, Y. Zhao, Z. Mai, Q. Zhao, Y. Han are with the Shenzhen Future Network of Intelligence Institute (FNii-Shenzhen) and Guangdong Provincial Key Laboratory of Future Networks of Intelligence, The Chinese University of Hong Kong, Shenzhen 518172, China, and also with Infused Synapse AI, Shenzhen 518048, China. Y. Zhao is also with Harbin Engineering University, Harbin 15006, China. Yao Guo is with the Institute of Medical Robotics, School of Biomedical Engineering, Shanghai Jiao Tong University, Shanghai 200240, China. Z. Li, S. Cui and J. Ren are with the School of Science and Engineering (SSE), FNii-Shenzhen, and Guangdong Provincial Key Laboratory of Future Networks of Intelligence, The Chinese University of Hong Kong, Shenzhen 518172, China. mental perturbations exceed preset thresholds. To validate CLEAs effectiveness, we conduct experiments in real environment with manipulable objects, using two heterogeneous robots for object search, manipulation, and search-manipulation integration tasks. Across 12 task trials, CLEA outperforms the baseline model, achieving 67.3% improvement in success rate and 52.8% increase in task completion rate. These results demonstrate that CLEA significantly enhances the robustness of task planning and execution in dynamic environments. Our code is available at https://sp4595.github.io/CLEA/. I. INTRODUCTION In recent years, Large Language Models (LLMs) have language understanding advanced significantly in natural and hierarchical task decomposition, demonstrating strong capabilities in embodied task planning [1]. They can interpret complex instructions and generate executable action sequences for multi-step tasks such as object rearrangement and interactive cooking [2]. However, LLMs struggle with long-horizon tasks due to context window limitations, preventing continuous task state tracking. Additionally, their static action sequences lack adaptability to dynamic environments where object states and spatial relationships change unpredictably, hindering robustness in real-world applications [3], [4]. To overcome these challenges, recent work integrates LLMs with external planning frameworks. One approach translates LLM-generated plans into structured formats like Planning Domain Definition Language (PDDL) [5] or Behavior Trees (BTs) [6], enhancing precision but relying on static task definitions and manual tuning. Another direction combines LLMs with dynamic planning techniques, such as Monte Carlo Tree Search (MCTS) [7] for commonsensedriven reasoning, though its iterative search constraints limit scalability. Similarly, LLM-Task and Motion Planning (TAMP) [8] improves task feasibility but faces exponential planning complexity in multi-agent systems, complicating coordination in dynamic environments. To address these limitations, we propose Closed-Loop Embodied Agents (CLEA), novel framework designed to enable adaptive decision-making in dynamic, multi-robot environments. Its effectiveness across diverse tasks is demonstrated in Fig. 1. CLEA establishes closed-loop planning paradigm by integrating four decoupled LLM modules, allowing for continuous adaptation based on real-time environmental feedback. The key contributions of this work are as follows. Closed-loop planner-critic reasoning: We propose novel planner-critic architecture that establishes closed-loop perception-reasoning-execution framework. The planner generates temporally coherent action sequences by leveraging historical environmental states and summarized memory, ensuring consistency with the critic conducts real-world dynamics. Meanwhile, online feasibility assessments through event-triggered evaluations, enabling adaptive task execution based on robot capabilities and sub-task constraints. Open-source VLMs and LLMs powered agent framework: To enhance reproducibility and extensibility, we develop the agent system using open-source Visual Language Models (VLMs) and LLMs. The entire framework is successfully deployed on real robotic platforms, demonstrating its practicality in real-world applications. Experiment evaluation in real-world environment: We evaluate CLEA in real-world setting, where two robots execute three types of complex, long-horizon tasks: object search, multi-object manipulation, and integration tasks. Experimental results indicate that CLEA significantly outperforms the open-loop baseline, achieving substantial improvements in task planning accuracy and execution robustness. "
[04.03.2025 08:13] Mistral response. {"id": "a33572ea170c426a9cf2f5a8ac045a0d", "object": "chat.completion", "created": 1741076026, "model": "mistral-large-latest", "choices": [{"index": 0, "message": {"role": "assistant", "tool_calls": null, "content": "```python\n[\n    \"Shenzhen Future Network of Intelligence Institute (FNii-Shenzhen)\",\n    \"Guangdong Provincial Key Laboratory of Future Networks of Intelligence, The Chinese University of Hong Kong, Shenzhen\",\n    \"Infused Synapse AI, Shenzhen\",\n    \"Harbin Engineering University, Harbin\",\n    \"Institute of Medical Robotics, School of Biomedical Engineering, Shanghai Jiao Tong University, Shanghai\",\n    \"School of Science and Engineering (SSE), FNii-Shenzhen\"\n]\n```"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 1574, "total_tokens": 1709, "completion_tokens": 135}}
[04.03.2025 08:13] Response: ```python
[
    "Shenzhen Future Network of Intelligence Institute (FNii-Shenzhen)",
    "Guangdong Provincial Key Laboratory of Future Networks of Intelligence, The Chinese University of Hong Kong, Shenzhen",
    "Infused Synapse AI, Shenzhen",
    "Harbin Engineering University, Harbin",
    "Institute of Medical Robotics, School of Biomedical Engineering, Shanghai Jiao Tong University, Shanghai",
    "School of Science and Engineering (SSE), FNii-Shenzhen"
]
```
[04.03.2025 08:13] Deleting PDF ./assets/pdf/2503.00729.pdf.
[04.03.2025 08:13] Success.
[04.03.2025 08:13] Enriching papers with extra data.
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 0. Reinforcement Fine-Tuning (RFT) in Large Reasoning Models like OpenAI o1 learns from feedback on its answers, which is especially useful in applications when fine-tuning data is scarce. Recent open-source work like DeepSeek-R1 demonstrates that reinforcement learning with verifiable reward is one ke...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 1. Neural Radiance Fields and 3D Gaussian Splatting have revolutionized 3D reconstruction and novel-view synthesis task. However, achieving photorealistic rendering from extreme novel viewpoints remains challenging, as artifacts persist across representations. In this work, we introduce Difix3D+, a nov...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 2. We introduce Phi-4-Mini and Phi-4-Multimodal, compact yet highly capable language and multimodal models. Phi-4-Mini is a 3.8-billion-parameter language model trained on high-quality web and synthetic data, significantly outperforming recent open-source models of similar size and matching the perform...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 3. Transformers with linear recurrent modeling offer linear-time training and constant-memory inference. Despite their demonstrated efficiency and performance, pretraining such non-standard architectures from scratch remains costly and risky. The linearization of large language models (LLMs) transforms...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 4. Test-time inference has emerged as a powerful paradigm for enabling language models to ``think'' longer and more carefully about complex challenges, much like skilled human experts. While reinforcement learning (RL) can drive self-improvement in language models on verifiable tasks, some models exhib...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 5. Analyzing large datasets requires responsive query execution, but executing SQL queries on massive datasets can be slow. This paper explores whether query execution can begin even before the user has finished typing, allowing results to appear almost instantly. We propose SpeQL, a system that levera...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 6. Large language models (LLMs) exhibit exceptional performance across a wide range of tasks; however, their token-by-token autoregressive generation process significantly hinders inference speed. Speculative decoding presents a promising draft-then-verify framework that reduces generation latency whil...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 7. User-generated content (UGC) communities, especially those featuring multimodal content, improve user experiences by integrating visual and textual information into results (or items). The challenge of improving user experiences in complex systems with search and recommendation (S\&R) services has d...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 8. Diffusion models have achieved great success in generating 2D images. However, the quality and generalizability of 3D content generation remain limited. State-of-the-art methods often require large-scale 3D assets for training, which are challenging to collect. In this work, we introduce Kiss3DGen (...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 9. Large Language Models (LLMs) have reshaped code generation by synergizing their exceptional comprehension of natural language and programming syntax, thereby substantially boosting developer productivity. These advancements have prompted numerous efforts to quantitatively evaluate their coding capab...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 10. Text-to-video generative models convert textual prompts into dynamic visual content, offering wide-ranging applications in film production, gaming, and education. However, their real-world performance often falls short of user expectations. One key reason is that these models have not been trained o...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 11. Selecting high-quality training data from a larger pool is a crucial step when instruction-tuning language models, as carefully curated datasets often produce models that outperform those trained on much larger, noisier datasets. Automated data selection approaches for instruction-tuning are typical...
[04.03.2025 08:13] ********************************************************************************
[04.03.2025 08:13] Abstract 12. Large Language Models (LLMs) exhibit remarkable capabilities in the hierarchical decomposition of complex tasks through semantic reasoning. However, their application in embodied systems faces challenges in ensuring reliable execution of subtask sequences and achieving one-shot success in long-term ...
[04.03.2025 08:13] Read previous papers.
[04.03.2025 08:13] Generating reviews via LLM API.
[04.03.2025 08:13] Using data from previous issue: {"categories": ["#multimodal", "#open_source", "#cv", "#optimization", "#rlhf", "#reasoning", "#training", "#rl"], "emoji": "🔬", "ru": {"title": "Visual-RFT: Революция в тонкой настройке визуально-языковых моделей", "desc": "Статья представляет Visual Reinforcement Fine-Tuning (Visual-RFT) - метод, 
[04.03.2025 08:13] Using data from previous issue: {"categories": ["#3d", "#diffusion"], "emoji": "🖼️", "ru": {"title": "Одношаговая диффузия для фотореалистичной 3D-реконструкции", "desc": "Difix3D+ - это новый подход к улучшению 3D-реконструкции и синтеза изображений с новых ракурсов. В его основе лежит Difix - одношаговая модель диффузии изображе
[04.03.2025 08:13] Using data from previous issue: {"categories": ["#multimodal", "#small_models", "#data", "#agi", "#synthetic", "#long_context", "#optimization", "#dataset", "#training"], "emoji": "🧠", "ru": {"title": "Компактные модели с большими возможностями: прорыв в эффективности ИИ", "desc": "Представлены две новые модели: Phi-4-Mini и Phi-4
[04.03.2025 08:13] Querying the API.
[04.03.2025 08:13] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Transformers with linear recurrent modeling offer linear-time training and constant-memory inference. Despite their demonstrated efficiency and performance, pretraining such non-standard architectures from scratch remains costly and risky. The linearization of large language models (LLMs) transforms pretrained standard models into linear recurrent structures, enabling more efficient deployment. However, current linearization methods typically introduce additional feature map modules that require extensive fine-tuning and overlook the gating mechanisms used in state-of-the-art linear recurrent models. To address these issues, this paper presents Liger, short for Linearizing LLMs to gated recurrent structures. Liger is a novel approach for converting pretrained LLMs into gated linear recurrent models without adding extra parameters. It repurposes the pretrained key matrix weights to construct diverse gating mechanisms, facilitating the formation of various gated recurrent structures while avoiding the need to train additional components from scratch. Using lightweight fine-tuning with Low-Rank Adaptation (LoRA), Liger restores the performance of the linearized gated recurrent models to match that of the original LLMs. Additionally, we introduce Liger Attention, an intra-layer hybrid attention mechanism, which significantly recovers 93\% of the Transformer-based LLM at 0.02\% pre-training tokens during the linearization process, achieving competitive results across multiple benchmarks, as validated on models ranging from 1B to 8B parameters. Code is available at https://github.com/OpenSparseLLMs/Linearization.
[04.03.2025 08:13] Response: {
  "desc": "Данная статья представляет новый метод Liger для линеаризации больших языковых моделей (LLM) в гейтированные линейно-рекуррентные структуры. Liger преобразует предобученные LLM без добавления дополнительных параметров, используя существующие веса ключевой матрицы для создания различных механизмов гейтирования. Метод применяет легковесную донастройку с помощью Low-Rank Adaptation (LoRA) для восстановления производительности линеаризованных моделей. Авторы также представляют Liger Attention - гибридный механизм внимания, который значительно улучшает эффективность линеаризации.",
  "emoji": "🔢",
  "title": "Эффективная линеаризация больших языковых моделей"
}
[04.03.2025 08:13] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Transformers with linear recurrent modeling offer linear-time training and constant-memory inference. Despite their demonstrated efficiency and performance, pretraining such non-standard architectures from scratch remains costly and risky. The linearization of large language models (LLMs) transforms pretrained standard models into linear recurrent structures, enabling more efficient deployment. However, current linearization methods typically introduce additional feature map modules that require extensive fine-tuning and overlook the gating mechanisms used in state-of-the-art linear recurrent models. To address these issues, this paper presents Liger, short for Linearizing LLMs to gated recurrent structures. Liger is a novel approach for converting pretrained LLMs into gated linear recurrent models without adding extra parameters. It repurposes the pretrained key matrix weights to construct diverse gating mechanisms, facilitating the formation of various gated recurrent structures while avoiding the need to train additional components from scratch. Using lightweight fine-tuning with Low-Rank Adaptation (LoRA), Liger restores the performance of the linearized gated recurrent models to match that of the original LLMs. Additionally, we introduce Liger Attention, an intra-layer hybrid attention mechanism, which significantly recovers 93\% of the Transformer-based LLM at 0.02\% pre-training tokens during the linearization process, achieving competitive results across multiple benchmarks, as validated on models ranging from 1B to 8B parameters. Code is available at https://github.com/OpenSparseLLMs/Linearization."

[04.03.2025 08:13] Response: ```python
['ARCHITECTURE', 'TRAINING', 'BENCHMARK']
```
[04.03.2025 08:13] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Transformers with linear recurrent modeling offer linear-time training and constant-memory inference. Despite their demonstrated efficiency and performance, pretraining such non-standard architectures from scratch remains costly and risky. The linearization of large language models (LLMs) transforms pretrained standard models into linear recurrent structures, enabling more efficient deployment. However, current linearization methods typically introduce additional feature map modules that require extensive fine-tuning and overlook the gating mechanisms used in state-of-the-art linear recurrent models. To address these issues, this paper presents Liger, short for Linearizing LLMs to gated recurrent structures. Liger is a novel approach for converting pretrained LLMs into gated linear recurrent models without adding extra parameters. It repurposes the pretrained key matrix weights to construct diverse gating mechanisms, facilitating the formation of various gated recurrent structures while avoiding the need to train additional components from scratch. Using lightweight fine-tuning with Low-Rank Adaptation (LoRA), Liger restores the performance of the linearized gated recurrent models to match that of the original LLMs. Additionally, we introduce Liger Attention, an intra-layer hybrid attention mechanism, which significantly recovers 93\% of the Transformer-based LLM at 0.02\% pre-training tokens during the linearization process, achieving competitive results across multiple benchmarks, as validated on models ranging from 1B to 8B parameters. Code is available at https://github.com/OpenSparseLLMs/Linearization."

[04.03.2025 08:13] Response: ```python
["OPTIMIZATION"]
```
[04.03.2025 08:13] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper introduces Liger, a method for transforming pretrained large language models (LLMs) into gated linear recurrent models. Liger efficiently repurposes existing key matrix weights to create diverse gating mechanisms without adding extra parameters, thus avoiding the costly process of training new components from scratch. The approach employs lightweight fine-tuning techniques, specifically Low-Rank Adaptation (LoRA), to maintain the performance of the linearized models comparable to the original LLMs. Additionally, Liger incorporates a novel intra-layer hybrid attention mechanism, Liger Attention, which enhances the model\'s efficiency while achieving competitive results across various benchmarks.","title":"Liger: Efficiently Transforming LLMs into Gated Linear Recurrent Models"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc="This paper introduces Liger, a method for transforming pretrained large language models (LLMs) into gated linear recurrent models. Liger efficiently repurposes existing key matrix weights to create diverse gating mechanisms without adding extra parameters, thus avoiding the costly process of training new components from scratch. The approach employs lightweight fine-tuning techniques, specifically Low-Rank Adaptation (LoRA), to maintain the performance of the linearized models comparable to the original LLMs. Additionally, Liger incorporates a novel intra-layer hybrid attention mechanism, Liger Attention, which enhances the model's efficiency while achieving competitive results across various benchmarks.", title='Liger: Efficiently Transforming LLMs into Gated Linear Recurrent Models'))
[04.03.2025 08:13] Response: ParsedChatCompletionMessage[Article](content='{"desc":"本文提出了一种名为Liger的方法，用于将预训练的大型语言模型（LLMs）转换为带门控的线性递归模型，而无需增加额外的参数。Liger通过重新利用预训练的关键矩阵权重，构建多样的门控机制，从而形成不同的门控递归结构。该方法使用轻量级的微调技术（如低秩适应LoRA），使线性化的门控递归模型的性能恢复到与原始LLMs相当的水平。此外，Liger Attention作为一种层内混合注意力机制，在线性化过程中显著恢复了93%的Transformer基础LLM的性能。","title":"Liger：高效转换预训练模型的创新方法"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='本文提出了一种名为Liger的方法，用于将预训练的大型语言模型（LLMs）转换为带门控的线性递归模型，而无需增加额外的参数。Liger通过重新利用预训练的关键矩阵权重，构建多样的门控机制，从而形成不同的门控递归结构。该方法使用轻量级的微调技术（如低秩适应LoRA），使线性化的门控递归模型的性能恢复到与原始LLMs相当的水平。此外，Liger Attention作为一种层内混合注意力机制，在线性化过程中显著恢复了93%的Transformer基础LLM的性能。', title='Liger：高效转换预训练模型的创新方法'))
[04.03.2025 08:13] Using data from previous issue: {"categories": ["#training", "#optimization", "#rl", "#reasoning"], "emoji": "🧠", "ru": {"title": "Когнитивные навыки - ключ к самосовершенствованию языковых моделей", "desc": "Исследование показывает, что способность языковых моделей к самосовершенствованию зависит от наличия у них определенных ког
[04.03.2025 08:13] Querying the API.
[04.03.2025 08:13] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Analyzing large datasets requires responsive query execution, but executing SQL queries on massive datasets can be slow. This paper explores whether query execution can begin even before the user has finished typing, allowing results to appear almost instantly. We propose SpeQL, a system that leverages Large Language Models (LLMs) to predict likely queries based on the database schema, the user's past queries, and their incomplete query. Since exact query prediction is infeasible, SpeQL speculates on partial queries in two ways: 1) it predicts the query structure to compile and plan queries in advance, and 2) it precomputes smaller temporary tables that are much smaller than the original database, but are still predicted to contain all information necessary to answer the user's final query. Additionally, SpeQL continuously displays results for speculated queries and subqueries in real time, aiding exploratory analysis. A utility/user study showed that SpeQL improved task completion time, and participants reported that its speculative display of results helped them discover patterns in the data more quickly. In the study, SpeQL improves user's query latency by up to 289times and kept the overhead reasonable, at 4$ per hour.
[04.03.2025 08:14] Response: {
  "desc": "Статья представляет систему SpeQL, использующую большие языковые модели для предсказания SQL-запросов пользователя. SpeQL предугадывает структуру запроса и предварительно вычисляет временные таблицы, что позволяет начать выполнение запроса до его завершения пользователем. Система непрерывно отображает результаты предполагаемых запросов в реальном времени, помогая в исследовательском анализе данных. Исследование показало, что SpeQL значительно сокращает время выполнения задач и помогает пользователям быстрее обнаруживать закономерности в данных.",
  "emoji": "⚡",
  "title": "Молниеносные SQL-запросы с помощью предиктивной аналитики"
}
[04.03.2025 08:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Analyzing large datasets requires responsive query execution, but executing SQL queries on massive datasets can be slow. This paper explores whether query execution can begin even before the user has finished typing, allowing results to appear almost instantly. We propose SpeQL, a system that leverages Large Language Models (LLMs) to predict likely queries based on the database schema, the user's past queries, and their incomplete query. Since exact query prediction is infeasible, SpeQL speculates on partial queries in two ways: 1) it predicts the query structure to compile and plan queries in advance, and 2) it precomputes smaller temporary tables that are much smaller than the original database, but are still predicted to contain all information necessary to answer the user's final query. Additionally, SpeQL continuously displays results for speculated queries and subqueries in real time, aiding exploratory analysis. A utility/user study showed that SpeQL improved task completion time, and participants reported that its speculative display of results helped them discover patterns in the data more quickly. In the study, SpeQL improves user's query latency by up to 289times and kept the overhead reasonable, at 4$ per hour."

[04.03.2025 08:14] Response: ```python
["DATASET", "DATA", "BENCHMARK"]
```
[04.03.2025 08:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Analyzing large datasets requires responsive query execution, but executing SQL queries on massive datasets can be slow. This paper explores whether query execution can begin even before the user has finished typing, allowing results to appear almost instantly. We propose SpeQL, a system that leverages Large Language Models (LLMs) to predict likely queries based on the database schema, the user's past queries, and their incomplete query. Since exact query prediction is infeasible, SpeQL speculates on partial queries in two ways: 1) it predicts the query structure to compile and plan queries in advance, and 2) it precomputes smaller temporary tables that are much smaller than the original database, but are still predicted to contain all information necessary to answer the user's final query. Additionally, SpeQL continuously displays results for speculated queries and subqueries in real time, aiding exploratory analysis. A utility/user study showed that SpeQL improved task completion time, and participants reported that its speculative display of results helped them discover patterns in the data more quickly. In the study, SpeQL improves user's query latency by up to 289times and kept the overhead reasonable, at 4$ per hour."

[04.03.2025 08:14] Response: ```python
[]
```
[04.03.2025 08:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper introduces SpeQL, a novel system designed to enhance the speed of SQL query execution on large datasets. By utilizing Large Language Models (LLMs), SpeQL predicts user queries even before they are fully typed, allowing for near-instantaneous results. It employs two main strategies: predicting the structure of queries for pre-compilation and creating smaller temporary tables that contain essential data for answering the final query. A user study demonstrated that SpeQL significantly reduced query latency and helped users identify data patterns more efficiently during exploratory analysis.","title":"Instant Query Results with SpeQL!"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='This paper introduces SpeQL, a novel system designed to enhance the speed of SQL query execution on large datasets. By utilizing Large Language Models (LLMs), SpeQL predicts user queries even before they are fully typed, allowing for near-instantaneous results. It employs two main strategies: predicting the structure of queries for pre-compilation and creating smaller temporary tables that contain essential data for answering the final query. A user study demonstrated that SpeQL significantly reduced query latency and helped users identify data patterns more efficiently during exploratory analysis.', title='Instant Query Results with SpeQL!'))
[04.03.2025 08:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"本论文探讨了如何在用户输入SQL查询时，提前开始执行查询，以加快大数据集的查询响应速度。我们提出了SpeQL系统，利用大型语言模型（LLMs）根据数据库模式、用户的历史查询和不完整查询来预测可能的查询。SpeQL通过预测查询结构和预计算小型临时表来处理部分查询，从而在用户完成查询之前提供实时结果。研究表明，SpeQL显著提高了用户的查询速度，并帮助用户更快地发现数据中的模式。","title":"SpeQL：让查询更快的智能预测系统"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='本论文探讨了如何在用户输入SQL查询时，提前开始执行查询，以加快大数据集的查询响应速度。我们提出了SpeQL系统，利用大型语言模型（LLMs）根据数据库模式、用户的历史查询和不完整查询来预测可能的查询。SpeQL通过预测查询结构和预计算小型临时表来处理部分查询，从而在用户完成查询之前提供实时结果。研究表明，SpeQL显著提高了用户的查询速度，并帮助用户更快地发现数据中的模式。', title='SpeQL：让查询更快的智能预测系统'))
[04.03.2025 08:14] Using data from previous issue: {"categories": ["#inference", "#training", "#optimization"], "emoji": "🚀", "ru": {"title": "DuoDecoding: Параллельное ускорение языковых моделей", "desc": "Статья представляет новый метод ускорения генерации текста большими языковыми моделями (LLM) под названием DuoDecoding. Этот подход использует п
[04.03.2025 08:14] Using data from previous issue: {"categories": ["#multimodal", "#dataset", "#rag"], "emoji": "🔍", "ru": {"title": "Qilin: мультимодальный датасет для улучшения поиска и рекомендаций", "desc": "Представлен новый набор данных Qilin для мультимодального информационного поиска, собранный на платформе Xiaohongshu. Датасет включает поль
[04.03.2025 08:14] Using data from previous issue: {"categories": ["#cv", "#diffusion", "#3d"], "emoji": "🎨", "ru": {"title": "Простая и эффективная 3D-генерация на основе 2D-диффузии", "desc": "Статья представляет Kiss3DGen - эффективный фреймворк для генерации, редактирования и улучшения 3D-объектов с использованием предобученной модели диффузии д
[04.03.2025 08:14] Querying the API.
[04.03.2025 08:14] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Large Language Models (LLMs) have reshaped code generation by synergizing their exceptional comprehension of natural language and programming syntax, thereby substantially boosting developer productivity. These advancements have prompted numerous efforts to quantitatively evaluate their coding capabilities. However, persistent challenges, such as benchmark leakage, data dissipation, and limited system accessibility, continue to impede a timely and accurate assessment. To address these limitations, we introduce CodeArena, an online evaluation framework tailored for LLM code generation. The key innovation is a collective evaluation mechanism, which dynamically recalibrates individual model scores based on the holistic performance of all participating models, mitigating score biases caused by widespread benchmark leakage. In addition, CodeArena ensures open access to all submitted solutions and test cases and provides automation-friendly APIs to streamline the code evaluation workflow. Our main contributions are: (1) a collective evaluation system for unbiased assessment, (2) a public repository of solutions and test cases, and (3) automation-ready APIs for seamless integration.
[04.03.2025 08:14] Response: {
  "desc": "CodeArena - это новая онлайн-платформа для оценки генерации кода большими языковыми моделями (LLM). Она использует коллективный механизм оценки, который динамически пересчитывает индивидуальные оценки моделей на основе общей производительности всех участвующих моделей. Это помогает снизить искажения оценок, вызванные утечкой тестовых данных. CodeArena также предоставляет открытый доступ ко всем отправленным решениям и тестовым случаям, а также API для автоматизации процесса оценки.",
  "emoji": "🏟️",
  "title": "CodeArena: Справедливая арена для оценки LLM в генерации кода"
}
[04.03.2025 08:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Large Language Models (LLMs) have reshaped code generation by synergizing their exceptional comprehension of natural language and programming syntax, thereby substantially boosting developer productivity. These advancements have prompted numerous efforts to quantitatively evaluate their coding capabilities. However, persistent challenges, such as benchmark leakage, data dissipation, and limited system accessibility, continue to impede a timely and accurate assessment. To address these limitations, we introduce CodeArena, an online evaluation framework tailored for LLM code generation. The key innovation is a collective evaluation mechanism, which dynamically recalibrates individual model scores based on the holistic performance of all participating models, mitigating score biases caused by widespread benchmark leakage. In addition, CodeArena ensures open access to all submitted solutions and test cases and provides automation-friendly APIs to streamline the code evaluation workflow. Our main contributions are: (1) a collective evaluation system for unbiased assessment, (2) a public repository of solutions and test cases, and (3) automation-ready APIs for seamless integration."

[04.03.2025 08:14] Response: ```python
["BENCHMARK", "DATASET"]
```
[04.03.2025 08:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Large Language Models (LLMs) have reshaped code generation by synergizing their exceptional comprehension of natural language and programming syntax, thereby substantially boosting developer productivity. These advancements have prompted numerous efforts to quantitatively evaluate their coding capabilities. However, persistent challenges, such as benchmark leakage, data dissipation, and limited system accessibility, continue to impede a timely and accurate assessment. To address these limitations, we introduce CodeArena, an online evaluation framework tailored for LLM code generation. The key innovation is a collective evaluation mechanism, which dynamically recalibrates individual model scores based on the holistic performance of all participating models, mitigating score biases caused by widespread benchmark leakage. In addition, CodeArena ensures open access to all submitted solutions and test cases and provides automation-friendly APIs to streamline the code evaluation workflow. Our main contributions are: (1) a collective evaluation system for unbiased assessment, (2) a public repository of solutions and test cases, and (3) automation-ready APIs for seamless integration."

[04.03.2025 08:14] Response: ```python
['LEAKAGE', 'OPEN_SOURCE']
```
[04.03.2025 08:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper discusses the impact of Large Language Models (LLMs) on code generation, highlighting their ability to understand both natural language and programming syntax, which enhances developer productivity. It identifies ongoing issues in evaluating LLM coding capabilities, such as benchmark leakage and limited access to evaluation systems. To overcome these challenges, the authors present CodeArena, an online framework that offers a collective evaluation mechanism to provide unbiased assessments of LLMs. CodeArena also features a public repository for solutions and test cases, along with APIs for easy integration into existing workflows.","title":"Revolutionizing Code Evaluation with CodeArena"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='This paper discusses the impact of Large Language Models (LLMs) on code generation, highlighting their ability to understand both natural language and programming syntax, which enhances developer productivity. It identifies ongoing issues in evaluating LLM coding capabilities, such as benchmark leakage and limited access to evaluation systems. To overcome these challenges, the authors present CodeArena, an online framework that offers a collective evaluation mechanism to provide unbiased assessments of LLMs. CodeArena also features a public repository for solutions and test cases, along with APIs for easy integration into existing workflows.', title='Revolutionizing Code Evaluation with CodeArena'))
[04.03.2025 08:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"大型语言模型（LLMs）通过结合对自然语言和编程语法的深刻理解，极大地提升了代码生成的效率，进而提高了开发者的生产力。为了量化评估这些模型的编码能力，许多研究工作应运而生，但仍面临基准泄漏、数据消散和系统可访问性有限等挑战。为了解决这些问题，我们提出了CodeArena，这是一个专为LLM代码生成设计的在线评估框架。其核心创新在于集体评估机制，能够根据所有参与模型的整体表现动态调整个别模型的评分，从而减少因基准泄漏造成的评分偏差。","title":"CodeArena：公平评估LLM代码生成的创新平台"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='大型语言模型（LLMs）通过结合对自然语言和编程语法的深刻理解，极大地提升了代码生成的效率，进而提高了开发者的生产力。为了量化评估这些模型的编码能力，许多研究工作应运而生，但仍面临基准泄漏、数据消散和系统可访问性有限等挑战。为了解决这些问题，我们提出了CodeArena，这是一个专为LLM代码生成设计的在线评估框架。其核心创新在于集体评估机制，能够根据所有参与模型的整体表现动态调整个别模型的评分，从而减少因基准泄漏造成的评分偏差。', title='CodeArena：公平评估LLM代码生成的创新平台'))
[04.03.2025 08:14] Using data from previous issue: {"categories": ["#video", "#dataset", "#data", "#games", "#open_source"], "emoji": "🎬", "ru": {"title": "VideoUFO: Новый эталонный датасет для генерации видео по запросу", "desc": "Статья представляет VideoUFO - новый набор данных для обучения моделей генерации видео по текстовому описанию. Этот дат
[04.03.2025 08:14] Using data from previous issue: {"categories": ["#data", "#open_source", "#optimization", "#dataset", "#training"], "emoji": "🔍", "ru": {"title": "Эффективный отбор данных для обучения языковых моделей: меньше значит больше", "desc": "Эта статья исследует методы автоматического отбора данных для инструктивной настройки языковых мо
[04.03.2025 08:14] Querying the API.
[04.03.2025 08:14] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Large Language Models (LLMs) exhibit remarkable capabilities in the hierarchical decomposition of complex tasks through semantic reasoning. However, their application in embodied systems faces challenges in ensuring reliable execution of subtask sequences and achieving one-shot success in long-term task completion. To address these limitations in dynamic environments, we propose Closed-Loop Embodied Agent (CLEA) -- a novel architecture incorporating four specialized open-source LLMs with functional decoupling for closed-loop task management. The framework features two core innovations: (1) Interactive task planner that dynamically generates executable subtasks based on the environmental memory, and (2) Multimodal execution critic employing an evaluation framework to conduct a probabilistic assessment of action feasibility, triggering hierarchical re-planning mechanisms when environmental perturbations exceed preset thresholds. To validate CLEA's effectiveness, we conduct experiments in a real environment with manipulable objects, using two heterogeneous robots for object search, manipulation, and search-manipulation integration tasks. Across 12 task trials, CLEA outperforms the baseline model, achieving a 67.3% improvement in success rate and a 52.8% increase in task completion rate. These results demonstrate that CLEA significantly enhances the robustness of task planning and execution in dynamic environments.
[04.03.2025 08:14] Response: {
  "desc": "Статья представляет новую архитектуру под названием CLEA (Closed-Loop Embodied Agent) для улучшения выполнения сложных задач роботами в динамических средах. CLEA использует четыре специализированные языковые модели с открытым исходным кодом для управления задачами в замкнутом цикле. Ключевые инновации включают интерактивный планировщик задач и мультимодальный критик выполнения для оценки выполнимости действий. Эксперименты показали, что CLEA значительно превосходит базовую модель по показателям успешности и завершения задач в реальной среде с манипулируемыми объектами.",
  "emoji": "🤖",
  "title": "CLEA: Повышение надежности выполнения задач роботами с помощью языковых моделей"
}
[04.03.2025 08:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Large Language Models (LLMs) exhibit remarkable capabilities in the hierarchical decomposition of complex tasks through semantic reasoning. However, their application in embodied systems faces challenges in ensuring reliable execution of subtask sequences and achieving one-shot success in long-term task completion. To address these limitations in dynamic environments, we propose Closed-Loop Embodied Agent (CLEA) -- a novel architecture incorporating four specialized open-source LLMs with functional decoupling for closed-loop task management. The framework features two core innovations: (1) Interactive task planner that dynamically generates executable subtasks based on the environmental memory, and (2) Multimodal execution critic employing an evaluation framework to conduct a probabilistic assessment of action feasibility, triggering hierarchical re-planning mechanisms when environmental perturbations exceed preset thresholds. To validate CLEA's effectiveness, we conduct experiments in a real environment with manipulable objects, using two heterogeneous robots for object search, manipulation, and search-manipulation integration tasks. Across 12 task trials, CLEA outperforms the baseline model, achieving a 67.3% improvement in success rate and a 52.8% increase in task completion rate. These results demonstrate that CLEA significantly enhances the robustness of task planning and execution in dynamic environments."

[04.03.2025 08:14] Response: ```python
['AGENTS', 'ARCHITECTURE', 'ROBOTICS']
```
[04.03.2025 08:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Large Language Models (LLMs) exhibit remarkable capabilities in the hierarchical decomposition of complex tasks through semantic reasoning. However, their application in embodied systems faces challenges in ensuring reliable execution of subtask sequences and achieving one-shot success in long-term task completion. To address these limitations in dynamic environments, we propose Closed-Loop Embodied Agent (CLEA) -- a novel architecture incorporating four specialized open-source LLMs with functional decoupling for closed-loop task management. The framework features two core innovations: (1) Interactive task planner that dynamically generates executable subtasks based on the environmental memory, and (2) Multimodal execution critic employing an evaluation framework to conduct a probabilistic assessment of action feasibility, triggering hierarchical re-planning mechanisms when environmental perturbations exceed preset thresholds. To validate CLEA's effectiveness, we conduct experiments in a real environment with manipulable objects, using two heterogeneous robots for object search, manipulation, and search-manipulation integration tasks. Across 12 task trials, CLEA outperforms the baseline model, achieving a 67.3% improvement in success rate and a 52.8% increase in task completion rate. These results demonstrate that CLEA significantly enhances the robustness of task planning and execution in dynamic environments."

[04.03.2025 08:14] Response: ```python
["REASONING", "OPTIMIZATION", "OPEN_SOURCE"]
```
[04.03.2025 08:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper introduces the Closed-Loop Embodied Agent (CLEA), a new architecture designed to improve the performance of Large Language Models (LLMs) in dynamic environments. CLEA features an interactive task planner that creates subtasks based on real-time environmental data, allowing for better adaptability. Additionally, it includes a multimodal execution critic that evaluates the feasibility of actions and adjusts plans when unexpected changes occur. Experimental results show that CLEA significantly enhances task success and completion rates compared to traditional models, demonstrating its effectiveness in complex, real-world scenarios.","title":"Enhancing Task Execution in Dynamic Environments with CLEA"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='This paper introduces the Closed-Loop Embodied Agent (CLEA), a new architecture designed to improve the performance of Large Language Models (LLMs) in dynamic environments. CLEA features an interactive task planner that creates subtasks based on real-time environmental data, allowing for better adaptability. Additionally, it includes a multimodal execution critic that evaluates the feasibility of actions and adjusts plans when unexpected changes occur. Experimental results show that CLEA significantly enhances task success and completion rates compared to traditional models, demonstrating its effectiveness in complex, real-world scenarios.', title='Enhancing Task Execution in Dynamic Environments with CLEA'))
[04.03.2025 08:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"大型语言模型（LLMs）在复杂任务的层次分解和语义推理方面表现出色。然而，在具身系统中应用时，确保子任务序列的可靠执行和实现长期任务的一次性成功面临挑战。为了解决这些问题，我们提出了闭环具身代理（CLEA），这是一种新颖的架构，结合了四个专门的开源LLM，并实现功能解耦以进行闭环任务管理。通过动态生成可执行的子任务和使用多模态执行评估框架，CLEA显著提高了在动态环境中任务规划和执行的鲁棒性。","title":"闭环具身代理：提升动态环境中的任务执行能力"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='大型语言模型（LLMs）在复杂任务的层次分解和语义推理方面表现出色。然而，在具身系统中应用时，确保子任务序列的可靠执行和实现长期任务的一次性成功面临挑战。为了解决这些问题，我们提出了闭环具身代理（CLEA），这是一种新颖的架构，结合了四个专门的开源LLM，并实现功能解耦以进行闭环任务管理。通过动态生成可执行的子任务和使用多模态执行评估框架，CLEA显著提高了在动态环境中任务规划和执行的鲁棒性。', title='闭环具身代理：提升动态环境中的任务执行能力'))
[04.03.2025 08:14] Loading Chinese text from previous data.
[04.03.2025 08:14] Renaming data file.
[04.03.2025 08:14] Renaming previous data. hf_papers.json to ./d/2025-03-04.json
[04.03.2025 08:14] Saving new data file.
[04.03.2025 08:14] Generating page.
[04.03.2025 08:14] Renaming previous page.
[04.03.2025 08:14] Renaming previous data. index.html to ./d/2025-03-04.html
[04.03.2025 08:14] [Experimental] Generating Chinese page for reading.
[04.03.2025 08:14] Chinese vocab [{'word': '设计', 'pinyin': 'shèjì', 'trans': 'design'}, {'word': '复杂', 'pinyin': 'fùzá', 'trans': 'complex'}, {'word': '工程', 'pinyin': 'gōngchéng', 'trans': 'engineering'}, {'word': '挑战', 'pinyin': 'tiǎozhàn', 'trans': 'challenge'}, {'word': '解决方案', 'pinyin': 'jiějué fāngàn', 'trans': 'solution'}, {'word': '至关重要', 'pinyin': 'zhìguān zhòngyào', 'trans': 'crucial'}, {'word': '检索', 'pinyin': 'jiǎnsuǒ', 'trans': 'retrieval'}, {'word': '增强', 'pinyin': 'zēngqiáng', 'trans': 'enhanced'}, {'word': '生成', 'pinyin': 'shēngchéng', 'trans': 'generation'}, {'word': '研究', 'pinyin': 'yánjiū', 'trans': 'research'}, {'word': '未能', 'pinyin': 'wèinéng', 'trans': 'failed to'}, {'word': '充分', 'pinyin': 'chōngfèn', 'trans': 'adequately'}, {'word': '相关', 'pinyin': 'xiāngguān', 'trans': 'related'}, {'word': '任务', 'pinyin': 'rènwù', 'trans': 'task'}, {'word': '引入', 'pinyin': 'yǐnrù', 'trans': 'introduce'}, {'word': '基准', 'pinyin': 'jīzhǔn', 'trans': 'benchmark'}, {'word': '评估', 'pinyin': 'pínggū', 'trans': 'evaluate'}, {'word': '系统', 'pinyin': 'xìtǒng', 'trans': 'system'}, {'word': '完整', 'pinyin': 'wánzhěng', 'trans': 'complete'}, {'word': '可行', 'pinyin': 'kěxíng', 'trans': 'feasible'}, {'word': '工程问题', 'pinyin': 'gōngchéng wèntí', 'trans': 'engineering problem'}, {'word': '解决方案', 'pinyin': 'jiějué fāngàn', 'trans': 'solution'}, {'word': '能力', 'pinyin': 'nénglì', 'trans': 'capability'}, {'word': '提出', 'pinyin': 'tíchū', 'trans': 'propose'}, {'word': '新系统', 'pinyin': 'xīn xìtǒng', 'trans': 'new system'}, {'word': '利用', 'pinyin': 'lìyòng', 'trans': 'utilize'}, {'word': '基于', 'pinyin': 'jīyú', 'trans': 'based on'}, {'word': '树', 'pinyin': 'shù', 'trans': 'tree'}, {'word': '探索', 'pinyin': 'tànsuǒ', 'trans': 'exploration'}, {'word': '双点思维', 'pinyin': 'shuāngdiǎn sīwéi', 'trans': 'dual-point thinking'}, {'word': '机制', 'pinyin': 'jīzhì', 'trans': 'mechanism'}, {'word': '生成', 'pinyin': 'shēngchéng', 'trans': 'generate'}, {'word': '可靠', 'pinyin': 'kěkào', 'trans': 'reliable'}, {'word': '实验', 'pinyin': 'shíyàn', 'trans': 'experiment'}, {'word': '结果', 'pinyin': 'jiéguǒ', 'trans': 'result'}, {'word': '显示', 'pinyin': 'xiǎnshì', 'trans': 'show'}, {'word': '达到', 'pinyin': 'dádào', 'trans': 'achieve'}, {'word': '最先进', 'pinyin': 'zuì xiānjìn', 'trans': 'state-of-the-art'}, {'word': '性能', 'pinyin': 'xìngnéng', 'trans': 'performance'}, {'word': '突显', 'pinyin': 'tūxiǎn', 'trans': 'highlight'}, {'word': '潜力', 'pinyin': 'qiánlì', 'trans': 'potential'}, {'word': '实际', 'pinyin': 'shíjì', 'trans': 'practical'}, {'word': '应用', 'pinyin': 'yìngyòng', 'trans': 'application'}, {'word': '增强', 'pinyin': 'zēngqiáng', 'trans': 'enhance'}, {'word': '自动化', 'pinyin': 'zìdònghuà', 'trans': 'automation'}]
[04.03.2025 08:14] Renaming previous Chinese page.
[04.03.2025 08:14] Renaming previous data. zh.html to ./d/2025-03-03_zh_reading_task.html
[04.03.2025 08:14] Writing Chinese reading task.
[04.03.2025 08:14] Writing result.
[04.03.2025 08:14] Renaming log file.
[04.03.2025 08:14] Renaming previous data. log.txt to ./logs/2025-03-04_last_log.txt
