[04.03.2025 03:23] Read previous papers.
[04.03.2025 03:23] Generating top page (month).
[04.03.2025 03:23] Writing top page (month).
[04.03.2025 04:13] Read previous papers.
[04.03.2025 04:13] Get feed.
[04.03.2025 04:13] Extract page data from URL. URL: https://huggingface.co/papers/2503.00784
[04.03.2025 04:13] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[04.03.2025 04:13] Downloading and parsing papers (pdf, html). Total: 1.
[04.03.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2503.00784.
[04.03.2025 04:13] Downloading paper 2503.00784 from http://arxiv.org/pdf/2503.00784v1...
[04.03.2025 04:13] Extracting affiliations from text.
[04.03.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"DuoDecoding: Hardware-aware Heterogeneous Speculative Decoding with Dynamic Multi-Sequence Drafting Kai Lv1*, Honglin Guo1, Qipeng Guo2, Xipeng Qiu1 1Fudan University 2Shanghai AI Laboratory klv23@m.fudan.edu.cn 5 2 0 2 2 ] . [ 1 4 8 7 0 0 . 3 0 5 2 : r a "
[04.03.2025 04:13] Response: ```python
["Fudan University", "Shanghai AI Laboratory"]
```
[04.03.2025 04:13] Deleting PDF ./assets/pdf/2503.00784.pdf.
[04.03.2025 04:13] Success.
[04.03.2025 04:13] Enriching papers with extra data.
[04.03.2025 04:13] ********************************************************************************
[04.03.2025 04:13] Abstract 0. Large language models (LLMs) exhibit exceptional performance across a wide range of tasks; however, their token-by-token autoregressive generation process significantly hinders inference speed. Speculative decoding presents a promising draft-then-verify framework that reduces generation latency whil...
[04.03.2025 04:13] Read previous papers.
[04.03.2025 04:13] Generating reviews via LLM API.
[04.03.2025 04:13] Querying the API.
[04.03.2025 04:13] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Large language models (LLMs) exhibit exceptional performance across a wide range of tasks; however, their token-by-token autoregressive generation process significantly hinders inference speed. Speculative decoding presents a promising draft-then-verify framework that reduces generation latency while maintaining output distribution fidelity. Nevertheless, the draft model introduces additional computational overhead, becoming a performance bottleneck and increasing the time to first token (TTFT). Previous approaches to mitigate draft model overhead have primarily relied on heuristics and generally failed to match the quality of the draft language models. To address these challenges, we propose DuoDecoding, a novel approach that strategically deploys the draft and target models on the CPU and GPU respectively, enabling parallel decoding while preserving draft quality. Our method incorporates a hardware-aware optimal draft budget to minimize idle times and employs dynamic multi-sequence drafting to enhance draft quality. Extensive experiments across seven tasks show that DuoDecoding achieves up to 2.61x speedup in generation latency, while reducing TTFT to 83% of that in conventional speculative decoding. The Code is available at https://github.com/KaiLv69/DuoDecoding.
[04.03.2025 04:13] Response: {
  "desc": "–°—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ —É—Å–∫–æ—Ä–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –±–æ–ª—å—à–∏–º–∏ —è–∑—ã–∫–æ–≤—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ (LLM) –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º DuoDecoding. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ CPU –∏ GPU, –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—è –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –∏ –æ–±—â—É—é –ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å. DuoDecoding –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –º–Ω–æ–≥–æ–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —á–µ—Ä–Ω–æ–≤–æ–µ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –ø–æ–∫–∞–∑–∞–ª–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –æ–±—ã—á–Ω—ã–º —Å–ø–µ–∫—É–ª—è—Ç–∏–≤–Ω—ã–º –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º.",
  "emoji": "üöÄ",
  "title": "DuoDecoding: –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π"
}
[04.03.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Large language models (LLMs) exhibit exceptional performance across a wide range of tasks; however, their token-by-token autoregressive generation process significantly hinders inference speed. Speculative decoding presents a promising draft-then-verify framework that reduces generation latency while maintaining output distribution fidelity. Nevertheless, the draft model introduces additional computational overhead, becoming a performance bottleneck and increasing the time to first token (TTFT). Previous approaches to mitigate draft model overhead have primarily relied on heuristics and generally failed to match the quality of the draft language models. To address these challenges, we propose DuoDecoding, a novel approach that strategically deploys the draft and target models on the CPU and GPU respectively, enabling parallel decoding while preserving draft quality. Our method incorporates a hardware-aware optimal draft budget to minimize idle times and employs dynamic multi-sequence drafting to enhance draft quality. Extensive experiments across seven tasks show that DuoDecoding achieves up to 2.61x speedup in generation latency, while reducing TTFT to 83% of that in conventional speculative decoding. The Code is available at https://github.com/KaiLv69/DuoDecoding."

[04.03.2025 04:13] Response: ```python
["INFERENCE", "TRAINING"]
```
[04.03.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Large language models (LLMs) exhibit exceptional performance across a wide range of tasks; however, their token-by-token autoregressive generation process significantly hinders inference speed. Speculative decoding presents a promising draft-then-verify framework that reduces generation latency while maintaining output distribution fidelity. Nevertheless, the draft model introduces additional computational overhead, becoming a performance bottleneck and increasing the time to first token (TTFT). Previous approaches to mitigate draft model overhead have primarily relied on heuristics and generally failed to match the quality of the draft language models. To address these challenges, we propose DuoDecoding, a novel approach that strategically deploys the draft and target models on the CPU and GPU respectively, enabling parallel decoding while preserving draft quality. Our method incorporates a hardware-aware optimal draft budget to minimize idle times and employs dynamic multi-sequence drafting to enhance draft quality. Extensive experiments across seven tasks show that DuoDecoding achieves up to 2.61x speedup in generation latency, while reducing TTFT to 83% of that in conventional speculative decoding. The Code is available at https://github.com/KaiLv69/DuoDecoding."

[04.03.2025 04:13] Response: ```python
["OPTIMIZATION"]
```
[04.03.2025 04:13] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper introduces DuoDecoding, a new method to improve the speed of generating text with large language models (LLMs) while keeping the quality high. It uses a draft-then-verify approach, where a draft model quickly generates initial text, and a target model refines it, but does so in a way that reduces the time it takes to start generating text. By using both CPU and GPU for different parts of the process, DuoDecoding allows for faster and more efficient decoding. The results show that this method can significantly speed up text generation without sacrificing quality, achieving a notable improvement in performance across various tasks.","title":"DuoDecoding: Speeding Up Text Generation with Smart Model Deployment"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='This paper introduces DuoDecoding, a new method to improve the speed of generating text with large language models (LLMs) while keeping the quality high. It uses a draft-then-verify approach, where a draft model quickly generates initial text, and a target model refines it, but does so in a way that reduces the time it takes to start generating text. By using both CPU and GPU for different parts of the process, DuoDecoding allows for faster and more efficient decoding. The results show that this method can significantly speed up text generation without sacrificing quality, achieving a notable improvement in performance across various tasks.', title='DuoDecoding: Speeding Up Text Generation with Smart Model Deployment'))
[04.03.2025 04:13] Response: ParsedChatCompletionMessage[Article](content='{"desc":"Â§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÔºàLLMsÔºâÂú®Â§öÁßç‰ªªÂä°‰∏≠Ë°®Áé∞Âá∫Ëâ≤Ôºå‰ΩÜÂÖ∂ÈÄêÂ≠óËá™ÂõûÂΩíÁîüÊàêËøáÁ®ãÊòæËëóÂΩ±ÂìçÊé®ÁêÜÈÄüÂ∫¶„ÄÇÊé®ÊµãËß£Á†ÅÊèê‰æõ‰∫Ü‰∏ÄÁßçÊúâÂâçÊôØÁöÑËçâÁ®ø-È™åËØÅÊ°ÜÊû∂ÔºåËÉΩÂ§üÂáèÂ∞ëÁîüÊàêÂª∂ËøüÔºåÂêåÊó∂‰øùÊåÅËæìÂá∫ÂàÜÂ∏ÉÁöÑÂáÜÁ°ÆÊÄß„ÄÇÊàë‰ª¨ÊèêÂá∫ÁöÑDuoDecodingÊñπÊ≥ïÈÄöËøáÂú®CPUÂíåGPU‰∏äÂàÜÂà´ÈÉ®ÁΩ≤ËçâÁ®øÊ®°ÂûãÂíåÁõÆÊ†áÊ®°ÂûãÔºåÂÆûÁé∞‰∫ÜÂπ∂Ë°åËß£Á†ÅÔºåÊèêÂçá‰∫ÜÁîüÊàêÊïàÁéá„ÄÇÂÆûÈ™åÁªìÊûúË°®ÊòéÔºåDuoDecodingÂú®ÁîüÊàêÂª∂Ëøü‰∏äÂÆûÁé∞‰∫ÜÊúÄÈ´ò2.61ÂÄçÁöÑÂä†ÈÄüÔºåÂêåÊó∂Â∞ÜÈ¶ñÊ¨°ÁîüÊàêÊó∂Èó¥Áº©Áü≠Ëá≥‰º†ÁªüÊé®ÊµãËß£Á†ÅÁöÑ83%„ÄÇ","title":"DuoDecodingÔºöÂä†ÈÄüÁîüÊàêÁöÑÊñ∞ÊñπÊ≥ï"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=None, parsed=Article(desc='Â§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÔºàLLMsÔºâÂú®Â§öÁßç‰ªªÂä°‰∏≠Ë°®Áé∞Âá∫Ëâ≤Ôºå‰ΩÜÂÖ∂ÈÄêÂ≠óËá™ÂõûÂΩíÁîüÊàêËøáÁ®ãÊòæËëóÂΩ±ÂìçÊé®ÁêÜÈÄüÂ∫¶„ÄÇÊé®ÊµãËß£Á†ÅÊèê‰æõ‰∫Ü‰∏ÄÁßçÊúâÂâçÊôØÁöÑËçâÁ®ø-È™åËØÅÊ°ÜÊû∂ÔºåËÉΩÂ§üÂáèÂ∞ëÁîüÊàêÂª∂ËøüÔºåÂêåÊó∂‰øùÊåÅËæìÂá∫ÂàÜÂ∏ÉÁöÑÂáÜÁ°ÆÊÄß„ÄÇÊàë‰ª¨ÊèêÂá∫ÁöÑDuoDecodingÊñπÊ≥ïÈÄöËøáÂú®CPUÂíåGPU‰∏äÂàÜÂà´ÈÉ®ÁΩ≤ËçâÁ®øÊ®°ÂûãÂíåÁõÆÊ†áÊ®°ÂûãÔºåÂÆûÁé∞‰∫ÜÂπ∂Ë°åËß£Á†ÅÔºåÊèêÂçá‰∫ÜÁîüÊàêÊïàÁéá„ÄÇÂÆûÈ™åÁªìÊûúË°®ÊòéÔºåDuoDecodingÂú®ÁîüÊàêÂª∂Ëøü‰∏äÂÆûÁé∞‰∫ÜÊúÄÈ´ò2.61ÂÄçÁöÑÂä†ÈÄüÔºåÂêåÊó∂Â∞ÜÈ¶ñÊ¨°ÁîüÊàêÊó∂Èó¥Áº©Áü≠Ëá≥‰º†ÁªüÊé®ÊµãËß£Á†ÅÁöÑ83%„ÄÇ', title='DuoDecodingÔºöÂä†ÈÄüÁîüÊàêÁöÑÊñ∞ÊñπÊ≥ï'))
[04.03.2025 04:13] Loading Chinese text from previous data.
[04.03.2025 04:13] Renaming data file.
[04.03.2025 04:13] Renaming previous data. hf_papers.json to ./d/2025-03-04.json
[04.03.2025 04:13] Saving new data file.
[04.03.2025 04:13] Generating page.
[04.03.2025 04:13] Renaming previous page.
[04.03.2025 04:13] Renaming previous data. index.html to ./d/2025-03-04.html
[04.03.2025 04:13] [Experimental] Generating Chinese page for reading.
[04.03.2025 04:13] Chinese vocab [{'word': 'ËÆæËÆ°', 'pinyin': 'sh√®j√¨', 'trans': 'design'}, {'word': 'Â§çÊùÇ', 'pinyin': 'f√πz√°', 'trans': 'complex'}, {'word': 'Â∑•Á®ã', 'pinyin': 'g≈çngch√©ng', 'trans': 'engineering'}, {'word': 'ÊåëÊàò', 'pinyin': 'ti«éozh√†n', 'trans': 'challenge'}, {'word': 'Ëß£ÂÜ≥ÊñπÊ°à', 'pinyin': 'jiƒõju√© fƒÅng√†n', 'trans': 'solution'}, {'word': 'Ëá≥ÂÖ≥ÈáçË¶Å', 'pinyin': 'zh√¨guƒÅn zh√≤ngy√†o', 'trans': 'crucial'}, {'word': 'Ê£ÄÁ¥¢', 'pinyin': 'ji«énsu«í', 'trans': 'retrieval'}, {'word': 'Â¢ûÂº∫', 'pinyin': 'zƒìngqi√°ng', 'trans': 'enhanced'}, {'word': 'ÁîüÊàê', 'pinyin': 'shƒìngch√©ng', 'trans': 'generation'}, {'word': 'Á†îÁ©∂', 'pinyin': 'y√°nji≈´', 'trans': 'research'}, {'word': 'Êú™ËÉΩ', 'pinyin': 'w√®in√©ng', 'trans': 'failed to'}, {'word': 'ÂÖÖÂàÜ', 'pinyin': 'ch≈çngf√®n', 'trans': 'adequately'}, {'word': 'Áõ∏ÂÖ≥', 'pinyin': 'xiƒÅngguƒÅn', 'trans': 'related'}, {'word': '‰ªªÂä°', 'pinyin': 'r√®nw√π', 'trans': 'task'}, {'word': 'ÂºïÂÖ•', 'pinyin': 'y«ênr√π', 'trans': 'introduce'}, {'word': 'Âü∫ÂáÜ', 'pinyin': 'jƒ´zh«în', 'trans': 'benchmark'}, {'word': 'ËØÑ‰º∞', 'pinyin': 'p√≠ngg≈´', 'trans': 'evaluate'}, {'word': 'Á≥ªÁªü', 'pinyin': 'x√¨t«íng', 'trans': 'system'}, {'word': 'ÂÆåÊï¥', 'pinyin': 'w√°nzhƒõng', 'trans': 'complete'}, {'word': 'ÂèØË°å', 'pinyin': 'kƒõx√≠ng', 'trans': 'feasible'}, {'word': 'Â∑•Á®ãÈóÆÈ¢ò', 'pinyin': 'g≈çngch√©ng w√®nt√≠', 'trans': 'engineering problem'}, {'word': 'Ëß£ÂÜ≥ÊñπÊ°à', 'pinyin': 'jiƒõju√© fƒÅng√†n', 'trans': 'solution'}, {'word': 'ËÉΩÂäõ', 'pinyin': 'n√©ngl√¨', 'trans': 'capability'}, {'word': 'ÊèêÂá∫', 'pinyin': 't√≠ch≈´', 'trans': 'propose'}, {'word': 'Êñ∞Á≥ªÁªü', 'pinyin': 'xƒ´n x√¨t«íng', 'trans': 'new system'}, {'word': 'Âà©Áî®', 'pinyin': 'l√¨y√≤ng', 'trans': 'utilize'}, {'word': 'Âü∫‰∫é', 'pinyin': 'jƒ´y√∫', 'trans': 'based on'}, {'word': 'Ê†ë', 'pinyin': 'sh√π', 'trans': 'tree'}, {'word': 'Êé¢Á¥¢', 'pinyin': 't√†nsu«í', 'trans': 'exploration'}, {'word': 'ÂèåÁÇπÊÄùÁª¥', 'pinyin': 'shuƒÅngdi«én sƒ´w√©i', 'trans': 'dual-point thinking'}, {'word': 'Êú∫Âà∂', 'pinyin': 'jƒ´zh√¨', 'trans': 'mechanism'}, {'word': 'ÁîüÊàê', 'pinyin': 'shƒìngch√©ng', 'trans': 'generate'}, {'word': 'ÂèØÈù†', 'pinyin': 'kƒõk√†o', 'trans': 'reliable'}, {'word': 'ÂÆûÈ™å', 'pinyin': 'sh√≠y√†n', 'trans': 'experiment'}, {'word': 'ÁªìÊûú', 'pinyin': 'ji√©gu«í', 'trans': 'result'}, {'word': 'ÊòæÁ§∫', 'pinyin': 'xi«énsh√¨', 'trans': 'show'}, {'word': 'ËææÂà∞', 'pinyin': 'd√°d√†o', 'trans': 'achieve'}, {'word': 'ÊúÄÂÖàËøõ', 'pinyin': 'zu√¨ xiƒÅnj√¨n', 'trans': 'state-of-the-art'}, {'word': 'ÊÄßËÉΩ', 'pinyin': 'x√¨ngn√©ng', 'trans': 'performance'}, {'word': 'Á™ÅÊòæ', 'pinyin': 't≈´xi«én', 'trans': 'highlight'}, {'word': 'ÊΩúÂäõ', 'pinyin': 'qi√°nl√¨', 'trans': 'potential'}, {'word': 'ÂÆûÈôÖ', 'pinyin': 'sh√≠j√¨', 'trans': 'practical'}, {'word': 'Â∫îÁî®', 'pinyin': 'y√¨ngy√≤ng', 'trans': 'application'}, {'word': 'Â¢ûÂº∫', 'pinyin': 'zƒìngqi√°ng', 'trans': 'enhance'}, {'word': 'Ëá™Âä®Âåñ', 'pinyin': 'z√¨d√≤nghu√†', 'trans': 'automation'}]
[04.03.2025 04:13] Renaming previous Chinese page.
[04.03.2025 04:13] Renaming previous data. zh.html to ./d/2025-03-03_zh_reading_task.html
[04.03.2025 04:13] Writing Chinese reading task.
[04.03.2025 04:13] Writing result.
[04.03.2025 04:13] Renaming log file.
[04.03.2025 04:13] Renaming previous data. log.txt to ./logs/2025-03-04_last_log.txt
