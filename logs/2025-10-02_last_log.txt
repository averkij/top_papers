[02.10.2025 03:24] Read previous papers.
[02.10.2025 03:24] Generating top page (month).
[02.10.2025 03:24] Writing top page (month).
[02.10.2025 04:13] Read previous papers.
[02.10.2025 04:13] Get feed.
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.01051
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.01174
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.00184
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.00526
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.00232
[02.10.2025 04:13] Extract page data from URL. URL: https://huggingface.co/papers/2509.25301
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.00777
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.00553
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.00536
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.00510
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2510.00406
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2509.25411
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2509.23250
[02.10.2025 04:13] Extract page data from URL. URL: https://huggingface.co/papers/2509.22887
[02.10.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2509.19185
[02.10.2025 04:13] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[02.10.2025 04:13] No deleted papers detected.
[02.10.2025 04:13] Downloading and parsing papers (pdf, html). Total: 15.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.01051.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.01051.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.01051.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.01174.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.01174.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.01174.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.00184.
[02.10.2025 04:13] Downloading paper 2510.00184 from http://arxiv.org/pdf/2510.00184v1...
[02.10.2025 04:13] Failed to download and parse paper https://huggingface.co/papers/2510.00184: 'LTChar' object is not iterable
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.00526.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.00526.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.00526.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.00232.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.00232.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.00232.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2509.25301.
[02.10.2025 04:13] Downloading paper 2509.25301 from http://arxiv.org/pdf/2509.25301v1...
[02.10.2025 04:13] Extracting affiliations from text.
[02.10.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 9 2 ] . [ 1 1 0 3 5 2 . 9 0 5 2 : r Flash-Searcher: Fast and Effective Web Agents via DAG-Based Parallel Execution "
[02.10.2025 04:13] Response: []
[02.10.2025 04:13] Extracting affiliations from text.
[02.10.2025 04:13] Mistral request. Model: mistral-large-latest. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 9 2 ] . [ 1 1 0 3 5 2 . 9 0 5 2 : r Flash-Searcher: Fast and Effective Web Agents via DAG-Based Parallel ExecutionLarge language models (LLMs) have demonstrated remarkable capabilities in complex agent reasoning tasks when equipped with external tools. However, current frameworks predominantly rely on sequential processing, leading to inefficient execution particularly for tasks requiring extensive tool interaction. This paper introduces FLASH-SEARCHER, novel parallel agent reasoning framework that fundamentally reimagines the execution paradigm from sequential chains to directed acyclic graphs (DAGs). FLASH-SEARCHER decomposes complex tasks into subtasks with explicit dependencies, enabling concurrent execution of independent reasoning paths while maintaining logical constraints. Through dynamic workflow optimization, our framework continuously refines the execution graph based on intermediate results, effectively integrating summary module. Comprehensive evaluations across multiple benchmarks demonstrate that FLASH-SEARCHER consistently outperforms existing approaches. Specifically, it achieves 67.7% accuracy on BrowseComp and 83% on xbench-DeepSearch, while reducing agent execution steps by up to 35% compared to current frameworks. Furthermore, when distilling this parallel reasoning pipeline into single models, we observe substantial performance gains across diverse backbone architectures, underscoring the generalizability of our methodology. Our work thus represents significant advance in agent architecture design, offering more scalable and efficient paradigm for complex reasoning tasks. Date: October 1, 2025 Correspondence: Wangchunshu Zhou at zhouwangchunshu@oppo.com; Xitong Gao at xt.gao@siat.ac.cn Code: https://github.com/OPPO-PersonalAI/Flash-SearcherRecent advances in tool-augmented agents and multi-agent systems (MAS) [Dorri et al., 2018, Canese et al., 2021, Zhou et al., 2023c, 2024, Zhu et al., 2025a,b, Qiu et al., 2025, Roucher et al., 2025, Tang et al., 2025, Team, 2025] have demonstrated remarkable capabilities in complex problem-solving tasks, showcasing how collaborative agent frameworks can effectively address challenges requiring diverse reasoning abilities and tool manipulation. These systems leverage specialized agents with distinct roles, enabling sophisticated planning, reasoning, and tool utilization to solve tasks that would be challenging for single-agent approaches. Concurrently, research efforts have focused on Tool-Integrated Reasoning (TIR) [Jin et al., 2025a, Li et al., 2025c,d, Wu et al., 2025a, Sun et al., 2025, Zhang et al., 2025a, Zheng et al., 2025, Xue et al., 2025] approaches, which aim to incorporate the capabilities of tool execution or multi-agent systems into single model through specialized training methodologies. Despite their impressive performance, both MAS and TIR approaches face significant limitations when addressing general complex tasks. Multi-agent systems suffer from inefficient tool utilization, excessively long reasoning chains, and prolonged execution times due to sequential processing and redundant communication, while TIR methods encounter reasoning efficiency bottlenecks with chains frequently exceeding context window limitations. These challenges intensify in complex scenarios requiring deep research capabilities, where MAS and TIR methodologies incorporate additional 1 Figure 1 Overview of FLASH-SEARCHER: Framework and Key Components. verification mechanisms (reflection, self-critique, iterative refinement) to enhance reliabilityat the cost of substantially increased computational overhead. When solving complex tasks, current agent frameworks typically require more than 20 interaction steps [Wang et al., 2025, Roucher et al., 2025, Hu et al., 2025], with execution times stretching to hours. This creates sharp tension between solution quality and computational efficiency, severely limiting practical viability in user-responsive applications. When confronted with complex tasks inducing unavoidable latency, do users deem the better performance necessary enough to justify tolerating or paying for these delays? To address these critical challenges, we introduce FLASH-SEARCHER, novel parallel agent reasoning framework that fundamentally reimagines how agents collaborate to solve complex tasks. Building upon recent empirical advances in reasoning models, our approach leverages these models enhanced capabilities in simultaneously managing multiple cognitive threads. As illustrated in Figure 1, unlike traditional approaches that adhere to strict sequential processing, FLASH-SEARCHER decomposes the original task into multiple parallel execution paths, orchestrated via carefully designed agent workflows. This parallelization allows multiple reasoning paths to progress simultaneously while intelligently managing tool calls across different execution branches. The FLASH-SEARCHER framework redefines the efficiency-effectiveness frontier in complex task solving through key innovations: 1) adaptive decomposition and parallelization of tasks into concurrent subtasks with dynamic strategy adjustment, 2) dependency-aware reasoning graph management to model information dependencies and 3) optimize critical paths/information flow, and proactive information retrieval with knowledge sharing to anticipate downstream needs and reduce redundant interaction steps. Our extensive evaluations demonstrate that FLASH-SEARCHER achieves state-of-the-art performance across multiple challenging benchmarks. our FLASH-SEARCHER (with GPT-5mini) reduces the average agent execution steps by 35% (11.2 7.4 steps) and shortens the overall execution time by 65% compared to OAgents. Despite this dramatic efficiency improvement, FLASH-SEARCHER (with GPT-5) achieves an impressive average performance of 82.5% on GAIA benchmark. Furthermore, on more challenging benchmarks such as xbench, HLE and BrowseComp, FLASHSEARCHER achieves performance metrics of 83.0, 44.0 and 67.7 respectively, surpassing current state-of-the-art methods. Furthermore, to validate the generalizability of our approach, we constructed FLASH-SEARCHER execution trajectories based on collected web agent data and conducted post-training on the Qwen-2.5 family of open-source models. This lightweight adaptation achieves 68.0 performance on the xbench-DeepSearch benchmark, 29.3 improvement over WebDancer, verifying the effective transfer of the parallel agent paradigm to open-source models w"
[02.10.2025 04:13] Mistral response. {"id": "b579338697554847a9e6b245d4a3b2c2", "created": 1759378432, "model": "mistral-large-latest", "usage": {"prompt_tokens": 1420, "total_tokens": 1446, "completion_tokens": 26}, "object": "chat.completion", "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "tool_calls": null, "content": "```python\n[\n    \"OPPO\",\n    \"Shenzhen Institutes of Advanced Technology, Chinese Academy of Sciences\"\n]\n```"}}]}
[02.10.2025 04:13] Response: ```python
[
    "OPPO",
    "Shenzhen Institutes of Advanced Technology, Chinese Academy of Sciences"
]
```
[02.10.2025 04:13] Deleting PDF ./assets/pdf/2509.25301.pdf.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.00777.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.00777.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.00777.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.00553.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.00553.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.00553.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.00536.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.00536.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.00536.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.00510.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.00510.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.00510.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2510.00406.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2510.00406.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2510.00406.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2509.25411.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2509.25411.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2509.25411.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2509.23250.
[02.10.2025 04:13] Extra JSON file exists (./assets/json/2509.23250.json), skip PDF parsing.
[02.10.2025 04:13] Paper image links file exists (./assets/img_data/2509.23250.json), skip HTML parsing.
[02.10.2025 04:13] Success.
[02.10.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2509.22887.
[02.10.2025 04:13] Downloading paper 2509.22887 from http://arxiv.org/pdf/2509.22887v1...
[02.10.2025 04:14] Extracting affiliations from text.
[02.10.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 6 2 ] . [ 1 7 8 8 2 2 . 9 0 5 2 : r Infusing Theory of Mind into Socially Intelligent LLM Agents EunJeong Hwang1,2, Yuwei Yin1, Giuseppe Carenini1, Peter West1, Vered Shwartz1,2 1University of British Columbia, 2Vector Institute for AI {ejhwang,yuweiyin,carenini,pwest,vshwartz}@cs.ubc.ca "
[02.10.2025 04:14] Response: ```python
["University of British Columbia", "Vector Institute for AI"]
```
[02.10.2025 04:14] Deleting PDF ./assets/pdf/2509.22887.pdf.
[02.10.2025 04:14] Success.
[02.10.2025 04:14] Downloading and parsing paper https://huggingface.co/papers/2509.19185.
[02.10.2025 04:14] Extra JSON file exists (./assets/json/2509.19185.json), skip PDF parsing.
[02.10.2025 04:14] Paper image links file exists (./assets/img_data/2509.19185.json), skip HTML parsing.
[02.10.2025 04:14] Success.
[02.10.2025 04:14] Enriching papers with extra data.
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 0. GEM, an open-source environment simulator, facilitates experience-based learning for large language models by providing a standardized framework and diverse environments for training and benchmarking reinforcement learning algorithms.  					AI-generated summary 				 The training paradigm for large l...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 1. Code2Video generates educational videos using a code-centric agent framework, improving coherence and interpretability compared to direct code generation.  					AI-generated summary 				 While recent generative models advance pixel-space video synthesis, they remain limited in producing professional...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 2. Reverse-engineering a model that learns multi-digit multiplication via implicit chain-of-thought reveals that it uses attention to encode long-range dependencies and represents partial products efficiently, insights that help address limitations in standard fine-tuning.  					AI-generated summary 		...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 3. Research identifies probability-based objectives that outperform negative log likelihood for fine-tuning large language models, depending on model capability.  					AI-generated summary 				 Supervised fine-tuning (SFT) is the standard approach for post-training large language models (LLMs), yet it ...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 4. BiasFreeBench evaluates bias mitigation techniques in large language models using a unified benchmark and response-level metric to ensure fair and safe outputs in real-world scenarios.  					AI-generated summary 				 Existing studies on bias mitigation methods for large language models (LLMs) use di...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 5. Flash-Searcher, a parallel agent reasoning framework using directed acyclic graphs, enhances efficiency and performance in complex reasoning tasks by enabling concurrent execution and dynamic workflow optimization.  					AI-generated summary 				 Large language models (LLMs) have demonstrated remark...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 6. In-place feedback allows users to directly edit LLM responses, improving performance and reducing token usage in multi-turn reasoning tasks.  					AI-generated summary 				 Large language models (LLMs) are increasingly studied in the context of multi-turn reasoning, where models iteratively refine t...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 7. Two fundamental properties of reinforcement learning-induced parameter updates in large language models are identified, leading to a plug-in acceleration framework that significantly speeds up training without sacrificing performance.  					AI-generated summary 				 Recent advances in reasoning capa...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 8. GUI-KV, a KV cache compression method for GUI agents, improves efficiency by exploiting spatial and temporal redundancies, reducing computational cost while maintaining accuracy.  					AI-generated summary 				 Graphical user interface (GUI) agents built on vision-language models have emerged as a p...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 9. A generalist agent architecture combining multi-agent planning, hierarchical memory, and a refined tool suite outperforms existing systems in diverse tasks.  					AI-generated summary 				 Large Language Models are increasingly deployed as autonomous agents for complex real-world tasks, yet existing...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 10. VLA-RFT uses a data-driven world model to fine-tune VLA models efficiently, reducing sample requirements and improving robustness under perturbations.  					AI-generated summary 				 Vision-Language-Action (VLA) models enable embodied decision-making but rely heavily on imitation learning, leading t...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 11. ImitSAT, a branching policy for CDCL solvers using imitation learning from expert traces, reduces propagation counts and runtime by providing dense decision-level supervision.  					AI-generated summary 				 We propose ImitSAT, a branching policy for conflict-driven clause learning (CDCL) solvers ba...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 12. Hybrid data synthesis and perception-focused supervision improve the reliability of Vision-Language Process Reward Models (VL-PRMs) in guiding VLMs across diverse multimodal benchmarks.  					AI-generated summary 				 Process Reward Models (PRMs) provide step-level supervision that improves the reli...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 13. Integrating Theory of Mind into LLMs improves dialogue effectiveness and goal achievement by enabling strategic reasoning and better partner relationships.  					AI-generated summary 				 Theory of Mind (ToM)-an understanding of the mental states of others-is a key aspect of human social intelligenc...
[02.10.2025 04:14] ********************************************************************************
[02.10.2025 04:14] Abstract 14. The study identifies testing practices in AI agent frameworks and applications, highlighting a focus on deterministic components and a neglect of the Trigger component, suggesting improvements for robustness.  					AI-generated summary 				 Foundation model (FM)-based AI agents are rapidly gaining a...
[02.10.2025 04:14] Read previous papers.
[02.10.2025 04:14] Generating reviews via LLM API.
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#rl", "#open_source", "#benchmark", "#training", "#games", "#agents"], "emoji": "🎮", "ru": {"title": "GEM: спортзал для тренировки LLM-агентов через reinforcement learning", "desc": "В статье представлен GEM (General Experience Maker) — открытая среда-симулятор для обучения больших 
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#interpretability", "#benchmark", "#video", "#games", "#optimization", "#agents", "#dataset"], "emoji": "🎓", "ru": {"title": "Генерация обучающих видео через программный код", "desc": "Code2Video — это фреймворк на основе агентов для создания образовательных видео через исполняемый 
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#training", "#architecture", "#long_context", "#reasoning"], "emoji": "🔢", "ru": {"title": "Как нейросети учатся умножать: разгадка механизма длинных зависимостей", "desc": "Исследователи провели обратную инженерию модели, которая научилась многозначному умножению через неявную цепо
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#optimization", "#training"], "emoji": "🎯", "ru": {"title": "Выбор функции потерь зависит от силы модели", "desc": "Исследование показывает, что стандартная функция потерь negative log likelihood (NLL) не всегда оптимальна для файн-тюнинга больших языковых моделей. Авторы изучили се
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#ethics", "#dataset", "#benchmark"], "emoji": "⚖️", "ru": {"title": "Единый бенчмарк для честной оценки методов борьбы с предвзятостью в LLM", "desc": "Существующие исследования методов устранения предвзятости в больших языковых моделях используют разные базовые подходы и метрики, ч
[02.10.2025 04:14] Querying the API.
[02.10.2025 04:14] Claude request. Model: claude-sonnet-4-5-20250929. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Flash-Searcher, a parallel agent reasoning framework using directed acyclic graphs, enhances efficiency and performance in complex reasoning tasks by enabling concurrent execution and dynamic workflow optimization.  					AI-generated summary 				 Large language models (LLMs) have demonstrated remarkable capabilities in complex reasoning tasks when equipped with external tools. However, current frameworks predominantly rely on sequential processing, leading to inefficient execution particularly for tasks requiring extensive tool interaction. This paper introduces Flash-Searcher, a novel parallel agent reasoning framework that fundamentally reimagines the execution paradigm from sequential chains to directed acyclic graphs (DAGs). Flash-Searcher decomposes complex tasks into subtasks with explicit dependencies, enabling concurrent execution of independent reasoning paths while maintaining logical constraints. Through dynamic workflow optimization, our framework continuously refines the execution graph based on intermediate results, effectively integrating summary module. Comprehensive evaluations across multiple benchmarks demonstrate that Flash-Searcher consistently outperforms existing approaches. Specifically, it achieves 67.7% accuracy on BrowseComp and 83% on xbench-DeepSearch, while reducing agent execution steps by up to 35% compared to current frameworks. Furthermore, when distilling this parallel reasoning pipeline into single models, we observe substantial performance gains across diverse backbone architectures, underscoring the generalizability of our methodology. Our work thus represents a significant advance in agent architecture design, offering a more scalable and efficient paradigm for complex reasoning tasks.
[02.10.2025 04:14] Response: ```json
{
  "desc": "В статье представлен Flash-Searcher — новый фреймворк для параллельного рассуждения AI-агентов, основанный на направленных ациклических графах (DAG) вместо традиционной последовательной обработки. Система разбивает сложные задачи на подзадачи с явными зависимостями, что позволяет выполнять независимые цепочки рассуждений параллельно при сохранении логических связей. Flash-Searcher показывает точность 67.7% на BrowseComp и 83% на xbench-DeepSearch, сокращая количество шагов выполнения на 35% по сравнению с существующими подходами. Метод также успешно применяется для дистилляции параллельного рассуждения в отдельные модели, демонстрируя улучшение производительности на различных архитектурах.",
  "emoji": "⚡",
  "title": "Параллельное мышление агентов через графы зависимостей"
}
```
[02.10.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Flash-Searcher, a parallel agent reasoning framework using directed acyclic graphs, enhances efficiency and performance in complex reasoning tasks by enabling concurrent execution and dynamic workflow optimization.  					AI-generated summary 				 Large language models (LLMs) have demonstrated remarkable capabilities in complex reasoning tasks when equipped with external tools. However, current frameworks predominantly rely on sequential processing, leading to inefficient execution particularly for tasks requiring extensive tool interaction. This paper introduces Flash-Searcher, a novel parallel agent reasoning framework that fundamentally reimagines the execution paradigm from sequential chains to directed acyclic graphs (DAGs). Flash-Searcher decomposes complex tasks into subtasks with explicit dependencies, enabling concurrent execution of independent reasoning paths while maintaining logical constraints. Through dynamic workflow optimization, our framework continuously refines the execution graph based on intermediate results, effectively integrating summary module. Comprehensive evaluations across multiple benchmarks demonstrate that Flash-Searcher consistently outperforms existing approaches. Specifically, it achieves 67.7% accuracy on BrowseComp and 83% on xbench-DeepSearch, while reducing agent execution steps by up to 35% compared to current frameworks. Furthermore, when distilling this parallel reasoning pipeline into single models, we observe substantial performance gains across diverse backbone architectures, underscoring the generalizability of our methodology. Our work thus represents a significant advance in agent architecture design, offering a more scalable and efficient paradigm for complex reasoning tasks."

[02.10.2025 04:14] Response: ```python
['AGENTS', 'ARCHITECTURE', 'BENCHMARK']
```
[02.10.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Flash-Searcher, a parallel agent reasoning framework using directed acyclic graphs, enhances efficiency and performance in complex reasoning tasks by enabling concurrent execution and dynamic workflow optimization.  					AI-generated summary 				 Large language models (LLMs) have demonstrated remarkable capabilities in complex reasoning tasks when equipped with external tools. However, current frameworks predominantly rely on sequential processing, leading to inefficient execution particularly for tasks requiring extensive tool interaction. This paper introduces Flash-Searcher, a novel parallel agent reasoning framework that fundamentally reimagines the execution paradigm from sequential chains to directed acyclic graphs (DAGs). Flash-Searcher decomposes complex tasks into subtasks with explicit dependencies, enabling concurrent execution of independent reasoning paths while maintaining logical constraints. Through dynamic workflow optimization, our framework continuously refines the execution graph based on intermediate results, effectively integrating summary module. Comprehensive evaluations across multiple benchmarks demonstrate that Flash-Searcher consistently outperforms existing approaches. Specifically, it achieves 67.7% accuracy on BrowseComp and 83% on xbench-DeepSearch, while reducing agent execution steps by up to 35% compared to current frameworks. Furthermore, when distilling this parallel reasoning pipeline into single models, we observe substantial performance gains across diverse backbone architectures, underscoring the generalizability of our methodology. Our work thus represents a significant advance in agent architecture design, offering a more scalable and efficient paradigm for complex reasoning tasks."

[02.10.2025 04:14] Response: ```python
['REASONING', 'OPTIMIZATION']
```
[02.10.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"Flash-Searcher is a new framework designed to improve the efficiency of reasoning tasks in artificial intelligence. It uses directed acyclic graphs (DAGs) to allow multiple reasoning paths to be executed at the same time, rather than one after the other. This approach not only speeds up the process but also optimizes the workflow dynamically based on the results obtained during execution. The framework has shown significant performance improvements in various benchmarks, demonstrating its effectiveness over traditional sequential processing methods.","title":"Revolutionizing Reasoning with Parallel Execution"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='Flash-Searcher is a new framework designed to improve the efficiency of reasoning tasks in artificial intelligence. It uses directed acyclic graphs (DAGs) to allow multiple reasoning paths to be executed at the same time, rather than one after the other. This approach not only speeds up the process but also optimizes the workflow dynamically based on the results obtained during execution. The framework has shown significant performance improvements in various benchmarks, demonstrating its effectiveness over traditional sequential processing methods.', title='Revolutionizing Reasoning with Parallel Execution'))
[02.10.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"Flash-Searcher 是一种新的并行智能体推理框架，使用有向无环图（DAG）来提高复杂推理任务的效率和性能。它通过将复杂任务分解为具有明确依赖关系的子任务，允许独立推理路径的并发执行，同时保持逻辑约束。该框架通过动态工作流优化，基于中间结果不断改进执行图，有效整合了摘要模块。综合评估显示，Flash-Searcher 在多个基准测试中表现优异，显著提高了推理效率。","title":"Flash-Searcher：高效的并行推理框架"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='Flash-Searcher 是一种新的并行智能体推理框架，使用有向无环图（DAG）来提高复杂推理任务的效率和性能。它通过将复杂任务分解为具有明确依赖关系的子任务，允许独立推理路径的并发执行，同时保持逻辑约束。该框架通过动态工作流优化，基于中间结果不断改进执行图，有效整合了摘要模块。综合评估显示，Flash-Searcher 在多个基准测试中表现优异，显著提高了推理效率。', title='Flash-Searcher：高效的并行推理框架'))
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#training", "#rlhf", "#interpretability", "#reasoning"], "emoji": "✏️", "ru": {"title": "Редактируй прямо здесь: эффективная обратная связь для LLM", "desc": "Исследователи предложили новый подход взаимодействия с языковыми моделями под названием in-place feedback, при котором польз
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#training", "#rl", "#optimization", "#reasoning"], "emoji": "🚀", "ru": {"title": "Ускорение обучения LLM через ранговую экстраполяцию", "desc": "Исследование выявляет два фундаментальных свойства обновлений параметров в больших языковых моделях при reinforcement learning: доминирова
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#optimization", "#inference", "#agents", "#benchmark"], "emoji": "🖥️", "ru": {"title": "Сжатие памяти для AI-агентов в графических интерфейсах", "desc": "Исследователи представили GUI-KV — метод сжатия KV-кэша для AI-агентов, работающих с графическими интерфейсами. Метод использует 
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#open_source", "#benchmark", "#optimization", "#architecture", "#multimodal", "#agents", "#agi"], "emoji": "🤖", "ru": {"title": "Универсальный AI-агент через интеграцию памяти, планирования и инструментов", "desc": "В статье предлагается универсальная архитектура AI-агента, которая 
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#rl", "#reasoning", "#training", "#optimization", "#agents"], "emoji": "🤖", "ru": {"title": "Обучение робота через мир-симулятор: эффективно и надёжно", "desc": "Статья представляет VLA-RFT — метод дообучения Vision-Language-Action моделей с помощью reinforcement learning. Вместо до
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#rl", "#open_source", "#training", "#optimization", "#math"], "emoji": "🎯", "ru": {"title": "Обучение на экспертных трассах для ускорения SAT-солверов", "desc": "В статье представлен ImitSAT - новая стратегия ветвления для CDCL солверов SAT-задач, основанная на imitation learning. М
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#benchmark", "#reasoning", "#training", "#games", "#multimodal", "#data", "#dataset"], "emoji": "👁️", "ru": {"title": "Учим мультимодальные модели проверять свои рассуждения пошагово", "desc": "Статья представляет улучшенные Vision-Language Process Reward Models (VL-PRMs), которые о
[02.10.2025 04:14] Querying the API.
[02.10.2025 04:14] Claude request. Model: claude-sonnet-4-5-20250929. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Integrating Theory of Mind into LLMs improves dialogue effectiveness and goal achievement by enabling strategic reasoning and better partner relationships.  					AI-generated summary 				 Theory of Mind (ToM)-an understanding of the mental states of others-is a key aspect of human social intelligence, yet, chatbots and LLM-based social agents do not typically integrate it. In this work, we demonstrate that LLMs that explicitly use ToM get better at dialogue, achieving goals more effectively. After showing that simply prompting models to generate mental states between dialogue turns already provides significant benefit, we further introduce ToMAgent (ToMA), a ToM-focused dialogue agent. ToMA is trained by pairing ToM with dialogue lookahead to produce mental states that are maximally useful for achieving dialogue goals. Experiments on the Sotopia interactive social evaluation benchmark demonstrate the effectiveness of our method over a range of baselines. Comprehensive analysis shows that ToMA exhibits more strategic, goal-oriented reasoning behaviors, which enable long-horizon adaptation, while maintaining better relationships with their partners. Our results suggest a step forward in integrating ToM for building socially intelligent LLM agents.
[02.10.2025 04:14] Response: ```json
{
  "title": "Агенты с теорией разума для социального интеллекта",
  "desc": "Исследователи интегрировали теорию разума (ToM) — способность понимать ментальные состояния других людей — в большие языковые модели для улучшения диалогов. Они разработали ToMAgent (ToMA), который генерирует предположения о ментальных состояниях собеседника между репликами и использует их для стратегического планирования. Эксперименты показали, что такой подход позволяет агентам более эффективно достигать целей в диалоге, демонстрируя стратегическое мышление и долгосрочную адаптацию. Результаты указывают на перспективность использования ToM для создания социально интеллектуальных AI-агентов.",
  "emoji": "🧠"
}
```
[02.10.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Integrating Theory of Mind into LLMs improves dialogue effectiveness and goal achievement by enabling strategic reasoning and better partner relationships.  					AI-generated summary 				 Theory of Mind (ToM)-an understanding of the mental states of others-is a key aspect of human social intelligence, yet, chatbots and LLM-based social agents do not typically integrate it. In this work, we demonstrate that LLMs that explicitly use ToM get better at dialogue, achieving goals more effectively. After showing that simply prompting models to generate mental states between dialogue turns already provides significant benefit, we further introduce ToMAgent (ToMA), a ToM-focused dialogue agent. ToMA is trained by pairing ToM with dialogue lookahead to produce mental states that are maximally useful for achieving dialogue goals. Experiments on the Sotopia interactive social evaluation benchmark demonstrate the effectiveness of our method over a range of baselines. Comprehensive analysis shows that ToMA exhibits more strategic, goal-oriented reasoning behaviors, which enable long-horizon adaptation, while maintaining better relationships with their partners. Our results suggest a step forward in integrating ToM for building socially intelligent LLM agents."

[02.10.2025 04:14] Response: ```python
['AGENTS', 'RL', 'BENCHMARK']
```
[02.10.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Integrating Theory of Mind into LLMs improves dialogue effectiveness and goal achievement by enabling strategic reasoning and better partner relationships.  					AI-generated summary 				 Theory of Mind (ToM)-an understanding of the mental states of others-is a key aspect of human social intelligence, yet, chatbots and LLM-based social agents do not typically integrate it. In this work, we demonstrate that LLMs that explicitly use ToM get better at dialogue, achieving goals more effectively. After showing that simply prompting models to generate mental states between dialogue turns already provides significant benefit, we further introduce ToMAgent (ToMA), a ToM-focused dialogue agent. ToMA is trained by pairing ToM with dialogue lookahead to produce mental states that are maximally useful for achieving dialogue goals. Experiments on the Sotopia interactive social evaluation benchmark demonstrate the effectiveness of our method over a range of baselines. Comprehensive analysis shows that ToMA exhibits more strategic, goal-oriented reasoning behaviors, which enable long-horizon adaptation, while maintaining better relationships with their partners. Our results suggest a step forward in integrating ToM for building socially intelligent LLM agents."

[02.10.2025 04:14] Response: ```python
['REASONING', 'ALIGNMENT']
```
[02.10.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper explores how integrating Theory of Mind (ToM) into large language models (LLMs) enhances their ability to engage in dialogue and achieve specific goals. By understanding the mental states of conversation partners, LLMs can respond more strategically and maintain better relationships. The authors introduce ToMA, a dialogue agent that combines ToM with dialogue lookahead to optimize its responses for goal achievement. Experiments show that ToMA outperforms traditional models, demonstrating improved reasoning and adaptability in social interactions.","title":"Empowering LLMs with Theory of Mind for Smarter Conversations"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='This paper explores how integrating Theory of Mind (ToM) into large language models (LLMs) enhances their ability to engage in dialogue and achieve specific goals. By understanding the mental states of conversation partners, LLMs can respond more strategically and maintain better relationships. The authors introduce ToMA, a dialogue agent that combines ToM with dialogue lookahead to optimize its responses for goal achievement. Experiments show that ToMA outperforms traditional models, demonstrating improved reasoning and adaptability in social interactions.', title='Empowering LLMs with Theory of Mind for Smarter Conversations'))
[02.10.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"本研究探讨了将心智理论（ToM）整合到大型语言模型（LLM）中的方法，以提高对话的有效性和目标达成率。心智理论是理解他人心理状态的能力，是人类社会智能的重要组成部分。我们展示了通过明确使用心智理论的LLM在对话中表现更好，能够更有效地实现目标。我们还提出了ToMA（心智理论对话代理），通过将心智理论与对话前瞻结合，训练出能够产生有助于实现对话目标的心理状态的代理。","title":"心智理论提升对话智能"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='本研究探讨了将心智理论（ToM）整合到大型语言模型（LLM）中的方法，以提高对话的有效性和目标达成率。心智理论是理解他人心理状态的能力，是人类社会智能的重要组成部分。我们展示了通过明确使用心智理论的LLM在对话中表现更好，能够更有效地实现目标。我们还提出了ToMA（心智理论对话代理），通过将心智理论与对话前瞻结合，训练出能够产生有助于实现对话目标的心理状态的代理。', title='心智理论提升对话智能'))
[02.10.2025 04:14] Using data from previous issue: {"categories": ["#benchmark", "#agents", "#security", "#open_source", "#training"], "emoji": "🔍", "ru": {"title": "Тестирование AI-агентов: фокус не там, где нужно", "desc": "Исследование анализирует практики тестирования в 39 фреймворках AI-агентов и 439 приложениях, выявляя десять паттернов тестир
[02.10.2025 04:14] Renaming data file.
[02.10.2025 04:14] Renaming previous data. hf_papers.json to ./d/2025-10-02.json
[02.10.2025 04:14] Saving new data file.
[02.10.2025 04:14] Generating page.
[02.10.2025 04:14] Renaming previous page.
[02.10.2025 04:14] Renaming previous data. index.html to ./d/2025-10-02.html
[02.10.2025 04:14] Writing result.
[02.10.2025 04:14] Renaming log file.
[02.10.2025 04:14] Renaming previous data. log.txt to ./logs/2025-10-02_last_log.txt
