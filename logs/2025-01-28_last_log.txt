[28.01.2025 19:08] Read previous papers.
[28.01.2025 19:08] Generating top page (month).
[28.01.2025 19:08] Writing top page (month).
[28.01.2025 20:10] Read previous papers.
[28.01.2025 20:10] Get feed.
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.15368
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.15383
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.16142
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.15907
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.15570
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.15369
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.16295
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2403.09193
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.15427
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.12370
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.16273
[28.01.2025 20:10] Get page data from previous paper. URL: https://huggingface.co/papers/2501.14912
[28.01.2025 20:10] Extract page data from URL. URL: https://huggingface.co/papers/2501.14723
[28.01.2025 20:10] Extract page data from URL. URL: https://huggingface.co/papers/2501.15420
[28.01.2025 20:10] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[28.01.2025 20:10] No deleted papers detected.
[28.01.2025 20:10] Downloading and parsing papers (pdf, html). Total: 14.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.15368.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.15368.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.15368.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.15383.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.15383.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.15383.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.16142.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.16142.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.16142.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.15907.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.15907.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.15907.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.15570.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.15570.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.15570.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.15369.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.15369.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.15369.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.16295.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.16295.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.16295.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2403.09193.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2403.09193.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2403.09193.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.15427.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.15427.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.15427.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.12370.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.12370.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.12370.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.16273.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.16273.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.16273.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.14912.
[28.01.2025 20:10] Extra JSON file exists (./assets/json/2501.14912.json), skip PDF parsing.
[28.01.2025 20:10] Paper image links file exists (./assets/img_data/2501.14912.json), skip HTML parsing.
[28.01.2025 20:10] Success.
[28.01.2025 20:10] Downloading and parsing paper https://huggingface.co/papers/2501.14723.
[28.01.2025 20:11] Downloading paper 2501.14723 from http://arxiv.org/pdf/2501.14723v1...
[28.01.2025 20:11] Extracting affiliations from text.
[28.01.2025 20:11] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 4 2 ] . [ 1 3 2 7 4 1 . 1 0 5 2 : r CodeMonkeys: Scaling Test-Time Compute for Software Engineering Ryan Ehrlich, Bradley Brown, Jordan Juravsky, Ronald Clark, Christopher Re, and Azalia Mirhoseini Department of Computer Science, Stanford University University of Oxford rehrlich@stanford.edu, bradley.brown@cs.ox.ac.uk, jbj@stanford.edu, ronald.clark@cs.ox.ac.uk, chrismre@stanford.edu, azalia@stanford.edu January 24, 2025 Abstract Scaling test-time compute is promising axis for improving LLM capabilities. However, testtime compute can be scaled in variety of ways, and effectively combining different approaches remains an active area of research. Here, we explore this problem in the context of solving real-world GitHub issues from the SWE-bench dataset. Our system, named CodeMonkeys, allows models to iteratively edit codebase by jointly generating and running testing script alongside their draft edit. We sample many of these multi-turn trajectories for every issue to generate collection of candidate edits. This approach lets us scale serial test-time compute by increasing the number of iterations per trajectory and parallel test-time compute by increasing the number of trajectories per problem. With parallel scaling, we can amortize up-front costs across multiple downstream samples, allowing us to identify relevant codebase context using the simple method of letting an LLM read every file. In order to select between candidate edits, we combine voting using model-generated tests with final multi-turn trajectory dedicated to selection. Overall, CodeMonkeys resolves 57.4% of issues from SWE-bench Verified using budget of approximately 2300 USD. Our selection method can also be used to combine candidates from different sources. Selecting over an ensemble of edits from existing top SWE-bench Verified submissions obtains score of 66.2% and outperforms the best member of the ensemble on its own. We fully release our code and data at https://scalingintelligence.stanfo"
[28.01.2025 20:11] Response: ```python
["Department of Computer Science, Stanford University", "University of Oxford"]
```
[28.01.2025 20:11] Deleting PDF ./assets/pdf/2501.14723.pdf.
[28.01.2025 20:11] Success.
[28.01.2025 20:11] Downloading and parsing paper https://huggingface.co/papers/2501.15420.
[28.01.2025 20:11] Downloading paper 2501.15420 from http://arxiv.org/pdf/2501.15420v1...
[28.01.2025 20:11] Extracting affiliations from text.
[28.01.2025 20:11] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"Huayu Chen* 1 Kai Jiang* 1 2 Kaiwen Zheng 1 Jianfei Chen 1 Hang Su 1 Jun Zhu 1 2 5 2 0 2 6 2 ] . [ 1 0 2 4 5 1 . 1 0 5 2 : r Abstract Classifier-Free Guidance (CFG) has been default technique in various visual generative models, yet it requires inference from both conditional and unconditional models during sampling. We propose to build visual models that are free from guided sampling. The resulting algorithm, Guidance-Free Training (GFT), matches the performance of CFG while reducing sampling to single model, halving the computational cost. Unlike previous distillation-based approaches that rely on pretrained CFG networks, GFT enables training directly from scratch. GFT is simple to implement. It retains the same maximum likelihood objective as CFG and differs mainly in the parameterization of conditional models. Implementing GFT requires only minimal modifications to existing codebases, as most design choices and hyperparameters are directly inherited from CFG. Our extensive experiments across five distinct visual models demonstrate the effectiveness and versatility of GFT. Across domains of diffusion, autoregressive, and masked-prediction modeling, GFT consistently achieves comparable or even lower FID scores, with similar diversityfidelity trade-offs compared with CFG baselines, all while being guidance-free. Code will be available at https://github.com/thu-ml/GFT. 1. Introduction Low-temperature sampling is critical technique for enhancing generation quality by focusing only on the models high-likelihood areas. Visual models mainly achieved this through Classifier-Free Guidance (CFG) (Ho & Salimans, 2022). CFG jointly optimizes both conditional and unconditional models during training and combines them to define the sampling process. By altering the guidance scale, it can flexibly trade off image fidelity and diversity at inference time, while significantly improving sample quality. Due to *Equal contribution 1Department of Computer Science & Technology, Tsingh"
[28.01.2025 20:11] Response: ```python
["Department of Computer Science & Technology, Tsinghua University"]
```
[28.01.2025 20:11] Deleting PDF ./assets/pdf/2501.15420.pdf.
[28.01.2025 20:11] Success.
[28.01.2025 20:11] Enriching papers with extra data.
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 0. We introduce Baichuan-Omni-1.5, an omni-modal model that not only has omni-modal understanding capabilities but also provides end-to-end audio generation capabilities. To achieve fluent and high-quality interaction across modalities without compromising the capabilities of any modality, we prioritiz...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 1. We introduce Qwen2.5-1M, a series of models that extend the context length to 1 million tokens. Compared to the previous 128K version, the Qwen2.5-1M series have significantly enhanced long-context capabilities through long-context pre-training and post-training. Key techniques such as long data syn...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 2. Reinforcement learning (RL) promises a framework for near-universal problem-solving. In practice however, RL algorithms are often tailored to specific benchmarks, relying on carefully tuned hyperparameters and algorithmic choices. Recently, powerful model-based RL methods have shown impressive gener...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 3. Recent advancements in speech generation have been driven by the large-scale training datasets. However, current models fall short of capturing the spontaneity and variability inherent in real-world human speech, due to their reliance on audiobook datasets limited to formal read-aloud speech styles....
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 4. As is known, hybrid quadratic and subquadratic attention models in multi-head architectures have surpassed both Transformer and Linear RNN models , with these works primarily focusing on reducing KV complexity and improving efficiency. For further research on expressiveness, we introduce our series ...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 5. We present a new family of mobile hybrid vision networks, called iFormer, with a focus on optimizing latency and accuracy on mobile applications. iFormer effectively integrates the fast local representation capacity of convolution with the efficient global modeling ability of self-attention. The loc...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 6. State Space Models (SSMs) have emerged as efficient alternatives to Transformers for sequential modeling, but their inability to leverage modality-specific features limits their performance in multi-modal pretraining. Here, we propose Mixture-of-Mamba, a novel SSM architecture that introduces modali...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 7. Vision language models (VLMs) have drastically changed the computer vision model landscape in only a few years, opening an exciting array of new applications from zero-shot image classification, over to image captioning, and visual question answering. Unlike pure vision models, they offer an intuiti...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 8. Customizable role-playing in large language models (LLMs), also known as character generalization, is gaining increasing attention for its versatility and cost-efficiency in developing and deploying role-playing dialogue agents. This study explores a large-scale data synthesis approach to equip LLMs...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 9. Scaling the capacity of language models has consistently proven to be a reliable approach for improving performance and unlocking new capabilities. Capacity can be primarily defined by two dimensions: the number of model parameters and the compute per example. While scaling typically involves increa...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 10. The dominance of large decoder-only language models has overshadowed encoder-decoder architectures, despite their fundamental efficiency advantages in sequence processing. For small language models (SLMs) - those with 1 billion parameters or fewer - our systematic analysis across GPU, CPU, and NPU p...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 11. We introduce Feasible Learning (FL), a sample-centric learning paradigm where models are trained by solving a feasibility problem that bounds the loss for each training sample. In contrast to the ubiquitous Empirical Risk Minimization (ERM) framework, which optimizes for average performance, FL dema...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 12. Scaling test-time compute is a promising axis for improving LLM capabilities. However, test-time compute can be scaled in a variety of ways, and effectively combining different approaches remains an active area of research. Here, we explore this problem in the context of solving real-world GitHub is...
[28.01.2025 20:11] ********************************************************************************
[28.01.2025 20:11] Abstract 13. Classifier-Free Guidance (CFG) has been a default technique in various visual generative models, yet it requires inference from both conditional and unconditional models during sampling. We propose to build visual models that are free from guided sampling. The resulting algorithm, Guidance-Free Trai...
[28.01.2025 20:11] Read previous papers.
[28.01.2025 20:11] Generating reviews via LLM API.
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#data", "#optimization", "#dataset", "#training", "#audio", "#multimodal"], "emoji": "🎭", "ru": {"title": "Baichuan-Omni-1.5: Прорыв в омнимодальном ИИ", "desc": "Baichuan-Omni-1.5 - это омнимодальная модель, обладающая способностями понимания и генерации аудио. Для достижения качес
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#architecture", "#inference", "#long_context", "#training", "#open_source"], "emoji": "🚀", "ru": {"title": "Миллион токенов: новый рубеж для языковых моделей", "desc": "Статья представляет серию моделей Qwen2.5-1M с контекстным окном в 1 миллион токенов. Авторы применили техники син
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#optimization", "#rl", "#benchmark", "#training", "#games"], "emoji": "🤖", "ru": {"title": "MR.Q: На пути к универсальному обучению с подкреплением", "desc": "Статья представляет новый алгоритм обучения с подкреплением под названием MR.Q. Этот алгоритм объединяет преимущества модель
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#data", "#audio", "#multilingual", "#dataset", "#open_source", "#low_resource"], "emoji": "🗣️", "ru": {"title": "Emilia: новый этап в генерации естественной речи", "desc": "Исследователи представили Emilia-Pipe - открытый конвейер предобработки для извлечения высококачественных данн
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#transfer_learning", "#training", "#architecture", "#small_models", "#optimization", "#open_source"], "emoji": "🧠", "ru": {"title": "Повышение эффективности и выразительности RNN через дистилляцию знаний", "desc": "Статья представляет новые модели, основанные на чистом нативном вним
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#optimization", "#training", "#cv", "#architecture"], "emoji": "📱", "ru": {"title": "iFormer: Эффективные нейросети для мобильного компьютерного зрения", "desc": "iFormer - это новое семейство мобильных гибридных сетей компьютерного зрения, оптимизированных для мобильных приложений.
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#multimodal", "#architecture", "#benchmark"], "emoji": "🧠", "ru": {"title": "Mixture-of-Mamba: Эффективное мультимодальное обучение с модальность-специфической разреженностью", "desc": "В этой статье представлена новая архитектура модели состояний (SSM) под названием Mixture-of-Mamb
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#cv", "#ethics", "#alignment", "#multimodal"], "emoji": "👁️", "ru": {"title": "Текст направляет взгляд: как языковые подсказки влияют на визуальные предубеждения ИИ", "desc": "Статья исследует визуальные предубеждения в мультимодальных моделях, объединяющих зрение и язык (VLM). Авто
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#training", "#data", "#agents", "#dataset", "#open_source", "#synthetic"], "emoji": "🎭", "ru": {"title": "Обучение ИИ искусству перевоплощения", "desc": "Исследование посвящено обучению больших языковых моделей (LLM) способности к обобщению характеров персонажей. Авторы синтезируют 
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#architecture", "#training", "#optimization"], "emoji": "🧠", "ru": {"title": "Оптимальная разреженность - ключ к эффективному масштабированию языковых моделей", "desc": "Статья исследует взаимосвязь между количеством параметров и вычислительной мощностью в контексте разреженных моде
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#architecture", "#training", "#small_models", "#optimization", "#transfer_learning"], "emoji": "🤖", "ru": {"title": "Энкодер-декодер: эффективное решение для малых языковых моделей", "desc": "Исследование показывает преимущества архитектуры энкодер-декодер для малых языковых моделей
[28.01.2025 20:11] Using data from previous issue: {"categories": ["#training", "#optimization"], "emoji": "🎯", "ru": {"title": "Индивидуальный подход к каждому образцу данных", "desc": "В статье представлена новая парадигма обучения моделей машинного обучения - Feasible Learning (FL). В отличие от традиционного подхода минимизации эмпирического рис
[28.01.2025 20:11] Querying the API.
[28.01.2025 20:11] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Scaling test-time compute is a promising axis for improving LLM capabilities. However, test-time compute can be scaled in a variety of ways, and effectively combining different approaches remains an active area of research. Here, we explore this problem in the context of solving real-world GitHub issues from the SWE-bench dataset. Our system, named CodeMonkeys, allows models to iteratively edit a codebase by jointly generating and running a testing script alongside their draft edit. We sample many of these multi-turn trajectories for every issue to generate a collection of candidate edits. This approach lets us scale "serial" test-time compute by increasing the number of iterations per trajectory and "parallel" test-time compute by increasing the number of trajectories per problem. With parallel scaling, we can amortize up-front costs across multiple downstream samples, allowing us to identify relevant codebase context using the simple method of letting an LLM read every file. In order to select between candidate edits, we combine voting using model-generated tests with a final multi-turn trajectory dedicated to selection. Overall, CodeMonkeys resolves 57.4% of issues from SWE-bench Verified using a budget of approximately 2300 USD. Our selection method can also be used to combine candidates from different sources. Selecting over an ensemble of edits from existing top SWE-bench Verified submissions obtains a score of 66.2% and outperforms the best member of the ensemble on its own. We fully release our code and data at https://scalingintelligence.stanford.edu/pubs/codemonkeys.
[28.01.2025 20:11] Response: {
  "desc": "Статья представляет систему CodeMonkeys для решения реальных проблем GitHub с помощью больших языковых моделей (LLM). Система позволяет моделям итеративно редактировать кодовую базу, генерируя и запуская тестовые скрипты вместе с черновыми правками. CodeMonkeys использует как последовательное, так и параллельное масштабирование вычислений во время тестирования, что позволяет эффективно идентифицировать релевантный контекст кодовой базы. Метод выбора кандидатов на основе голосования и финальной многоходовой траектории позволил системе решить 57.4% проблем из набора данных SWE-bench Verified.",
  "emoji": "🐒",
  "title": "CodeMonkeys: Масштабирование вычислений LLM для решения реальных задач программирования"
}
[28.01.2025 20:11] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Scaling test-time compute is a promising axis for improving LLM capabilities. However, test-time compute can be scaled in a variety of ways, and effectively combining different approaches remains an active area of research. Here, we explore this problem in the context of solving real-world GitHub issues from the SWE-bench dataset. Our system, named CodeMonkeys, allows models to iteratively edit a codebase by jointly generating and running a testing script alongside their draft edit. We sample many of these multi-turn trajectories for every issue to generate a collection of candidate edits. This approach lets us scale "serial" test-time compute by increasing the number of iterations per trajectory and "parallel" test-time compute by increasing the number of trajectories per problem. With parallel scaling, we can amortize up-front costs across multiple downstream samples, allowing us to identify relevant codebase context using the simple method of letting an LLM read every file. In order to select between candidate edits, we combine voting using model-generated tests with a final multi-turn trajectory dedicated to selection. Overall, CodeMonkeys resolves 57.4% of issues from SWE-bench Verified using a budget of approximately 2300 USD. Our selection method can also be used to combine candidates from different sources. Selecting over an ensemble of edits from existing top SWE-bench Verified submissions obtains a score of 66.2% and outperforms the best member of the ensemble on its own. We fully release our code and data at https://scalingintelligence.stanford.edu/pubs/codemonkeys."

[28.01.2025 20:11] Response: ```python
['DATASET', 'DATA', 'TRAINING', 'PLP']
```
[28.01.2025 20:11] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Scaling test-time compute is a promising axis for improving LLM capabilities. However, test-time compute can be scaled in a variety of ways, and effectively combining different approaches remains an active area of research. Here, we explore this problem in the context of solving real-world GitHub issues from the SWE-bench dataset. Our system, named CodeMonkeys, allows models to iteratively edit a codebase by jointly generating and running a testing script alongside their draft edit. We sample many of these multi-turn trajectories for every issue to generate a collection of candidate edits. This approach lets us scale "serial" test-time compute by increasing the number of iterations per trajectory and "parallel" test-time compute by increasing the number of trajectories per problem. With parallel scaling, we can amortize up-front costs across multiple downstream samples, allowing us to identify relevant codebase context using the simple method of letting an LLM read every file. In order to select between candidate edits, we combine voting using model-generated tests with a final multi-turn trajectory dedicated to selection. Overall, CodeMonkeys resolves 57.4% of issues from SWE-bench Verified using a budget of approximately 2300 USD. Our selection method can also be used to combine candidates from different sources. Selecting over an ensemble of edits from existing top SWE-bench Verified submissions obtains a score of 66.2% and outperforms the best member of the ensemble on its own. We fully release our code and data at https://scalingintelligence.stanford.edu/pubs/codemonkeys."

[28.01.2025 20:11] Response: ```python
["OPTIMIZATION", "OPEN_SOURCE"]
```
[28.01.2025 20:11] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper presents CodeMonkeys, a system designed to enhance the capabilities of large language models (LLMs) by scaling test-time compute during code editing tasks. It combines iterative code generation with testing script execution, allowing models to refine their edits through multiple iterations and trajectories. By leveraging both serial and parallel scaling, CodeMonkeys efficiently identifies relevant code context and selects the best candidate edits through a voting mechanism. The system demonstrates effectiveness by resolving over 57% of real-world GitHub issues while optimizing resource usage, and it shows improved performance when combining edits from various sources.","title":"Enhancing LLMs with Scalable Test-Time Compute for Code Editing"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='This paper presents CodeMonkeys, a system designed to enhance the capabilities of large language models (LLMs) by scaling test-time compute during code editing tasks. It combines iterative code generation with testing script execution, allowing models to refine their edits through multiple iterations and trajectories. By leveraging both serial and parallel scaling, CodeMonkeys efficiently identifies relevant code context and selects the best candidate edits through a voting mechanism. The system demonstrates effectiveness by resolving over 57% of real-world GitHub issues while optimizing resource usage, and it shows improved performance when combining edits from various sources.', title='Enhancing LLMs with Scalable Test-Time Compute for Code Editing'))
[28.01.2025 20:11] Response: ParsedChatCompletionMessage[Article](content='{"desc":"本文探讨了如何通过扩展测试时计算来提升大型语言模型（LLM）的能力。我们提出了一个名为CodeMonkeys的系统，它可以通过生成和运行测试脚本来迭代编辑代码库，从而解决实际的GitHub问题。该方法通过增加每个问题的迭代次数和轨迹数量，实现了串行和并行的测试时计算扩展。最终，CodeMonkeys成功解决了57.4%的问题，并且我们的选择方法也能有效结合来自不同来源的候选编辑。","title":"通过CodeMonkeys提升代码编辑能力"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='本文探讨了如何通过扩展测试时计算来提升大型语言模型（LLM）的能力。我们提出了一个名为CodeMonkeys的系统，它可以通过生成和运行测试脚本来迭代编辑代码库，从而解决实际的GitHub问题。该方法通过增加每个问题的迭代次数和轨迹数量，实现了串行和并行的测试时计算扩展。最终，CodeMonkeys成功解决了57.4%的问题，并且我们的选择方法也能有效结合来自不同来源的候选编辑。', title='通过CodeMonkeys提升代码编辑能力'))
[28.01.2025 20:11] Querying the API.
[28.01.2025 20:11] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Classifier-Free Guidance (CFG) has been a default technique in various visual generative models, yet it requires inference from both conditional and unconditional models during sampling. We propose to build visual models that are free from guided sampling. The resulting algorithm, Guidance-Free Training (GFT), matches the performance of CFG while reducing sampling to a single model, halving the computational cost. Unlike previous distillation-based approaches that rely on pretrained CFG networks, GFT enables training directly from scratch. GFT is simple to implement. It retains the same maximum likelihood objective as CFG and differs mainly in the parameterization of conditional models. Implementing GFT requires only minimal modifications to existing codebases, as most design choices and hyperparameters are directly inherited from CFG. Our extensive experiments across five distinct visual models demonstrate the effectiveness and versatility of GFT. Across domains of diffusion, autoregressive, and masked-prediction modeling, GFT consistently achieves comparable or even lower FID scores, with similar diversity-fidelity trade-offs compared with CFG baselines, all while being guidance-free. Code will be available at https://github.com/thu-ml/GFT.
[28.01.2025 20:11] Response: {
  "desc": "Статья представляет новый метод обучения визуальных генеративных моделей - Guidance-Free Training (GFT). GFT позволяет достичь производительности Classifier-Free Guidance (CFG), но требует вдвое меньше вычислений при генерации изображений. Метод прост в реализации и может применяться для обучения моделей с нуля. Эксперименты показали эффективность GFT для различных типов моделей, включая диффузионные, авторегрессионные и модели с маскированием.",
  "emoji": "🖼️",
  "title": "GFT: Эффективная генерация изображений без направляющей выборки"
}
[28.01.2025 20:11] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Classifier-Free Guidance (CFG) has been a default technique in various visual generative models, yet it requires inference from both conditional and unconditional models during sampling. We propose to build visual models that are free from guided sampling. The resulting algorithm, Guidance-Free Training (GFT), matches the performance of CFG while reducing sampling to a single model, halving the computational cost. Unlike previous distillation-based approaches that rely on pretrained CFG networks, GFT enables training directly from scratch. GFT is simple to implement. It retains the same maximum likelihood objective as CFG and differs mainly in the parameterization of conditional models. Implementing GFT requires only minimal modifications to existing codebases, as most design choices and hyperparameters are directly inherited from CFG. Our extensive experiments across five distinct visual models demonstrate the effectiveness and versatility of GFT. Across domains of diffusion, autoregressive, and masked-prediction modeling, GFT consistently achieves comparable or even lower FID scores, with similar diversity-fidelity trade-offs compared with CFG baselines, all while being guidance-free. Code will be available at https://github.com/thu-ml/GFT."

[28.01.2025 20:11] Response: ```python
['CV', 'TRAINING']
```
[28.01.2025 20:11] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Classifier-Free Guidance (CFG) has been a default technique in various visual generative models, yet it requires inference from both conditional and unconditional models during sampling. We propose to build visual models that are free from guided sampling. The resulting algorithm, Guidance-Free Training (GFT), matches the performance of CFG while reducing sampling to a single model, halving the computational cost. Unlike previous distillation-based approaches that rely on pretrained CFG networks, GFT enables training directly from scratch. GFT is simple to implement. It retains the same maximum likelihood objective as CFG and differs mainly in the parameterization of conditional models. Implementing GFT requires only minimal modifications to existing codebases, as most design choices and hyperparameters are directly inherited from CFG. Our extensive experiments across five distinct visual models demonstrate the effectiveness and versatility of GFT. Across domains of diffusion, autoregressive, and masked-prediction modeling, GFT consistently achieves comparable or even lower FID scores, with similar diversity-fidelity trade-offs compared with CFG baselines, all while being guidance-free. Code will be available at https://github.com/thu-ml/GFT."

[28.01.2025 20:11] Response: ```python
["DIFFUSION", "OPTIMIZATION", "OPEN_SOURCE"]
```
[28.01.2025 20:11] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper introduces Guidance-Free Training (GFT), a new approach for visual generative models that eliminates the need for classifier-free guidance during sampling. GFT achieves similar performance to traditional Classifier-Free Guidance (CFG) while only requiring a single model for inference, thus reducing computational costs by half. The method allows for training from scratch, avoiding reliance on pre-trained CFG networks, and retains the same maximum likelihood objective as CFG with minimal changes to existing implementations. Extensive experiments show that GFT performs comparably or better than CFG across various visual modeling domains, maintaining a good balance between diversity and fidelity.","title":"Guidance-Free Training: Simplifying Visual Generative Models"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='This paper introduces Guidance-Free Training (GFT), a new approach for visual generative models that eliminates the need for classifier-free guidance during sampling. GFT achieves similar performance to traditional Classifier-Free Guidance (CFG) while only requiring a single model for inference, thus reducing computational costs by half. The method allows for training from scratch, avoiding reliance on pre-trained CFG networks, and retains the same maximum likelihood objective as CFG with minimal changes to existing implementations. Extensive experiments show that GFT performs comparably or better than CFG across various visual modeling domains, maintaining a good balance between diversity and fidelity.', title='Guidance-Free Training: Simplifying Visual Generative Models'))
[28.01.2025 20:11] Response: ParsedChatCompletionMessage[Article](content='{"desc":"无引导采样的视觉模型是本研究的核心。我们提出的无引导训练（GFT）算法在性能上与传统的分类器引导（CFG）相当，但只需使用单一模型进行采样，从而减少了计算成本。GFT可以直接从头开始训练，而不依赖于预训练的CFG网络，且实现简单。通过在五种不同的视觉模型上进行广泛实验，我们证明了GFT的有效性和多样性。","title":"无引导训练：降低计算成本的视觉生成新方法"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='无引导采样的视觉模型是本研究的核心。我们提出的无引导训练（GFT）算法在性能上与传统的分类器引导（CFG）相当，但只需使用单一模型进行采样，从而减少了计算成本。GFT可以直接从头开始训练，而不依赖于预训练的CFG网络，且实现简单。通过在五种不同的视觉模型上进行广泛实验，我们证明了GFT的有效性和多样性。', title='无引导训练：降低计算成本的视觉生成新方法'))
[28.01.2025 20:11] Loading Chinese text from previous data.
[28.01.2025 20:11] Renaming data file.
[28.01.2025 20:11] Renaming previous data. hf_papers.json to ./d/2025-01-28.json
[28.01.2025 20:11] Saving new data file.
[28.01.2025 20:11] Generating page.
[28.01.2025 20:11] Renaming previous page.
[28.01.2025 20:11] Renaming previous data. index.html to ./d/2025-01-28.html
[28.01.2025 20:11] [Experimental] Generating Chinese page for reading.
[28.01.2025 20:11] Chinese vocab [{'word': '介绍', 'pinyin': 'jiè shào', 'trans': 'introduce'}, {'word': 'Baichuan-Omni-1.5', 'pinyin': 'Bài chuān-Ōu mí-1.5', 'trans': 'Baichuan-Omni-1.5'}, {'word': '具有', 'pinyin': 'jù yǒu', 'trans': 'have'}, {'word': '全模态', 'pinyin': 'quán mó shì', 'trans': 'full modality'}, {'word': '理解', 'pinyin': 'lǐ jiě', 'trans': 'understanding'}, {'word': '端到端', 'pinyin': 'duān dào duān', 'trans': 'end-to-end'}, {'word': '音频', 'pinyin': 'yīn pín', 'trans': 'audio'}, {'word': '生成', 'pinyin': 'shēng chéng', 'trans': 'generate'}, {'word': '能力', 'pinyin': 'néng lì', 'trans': 'ability'}, {'word': '实现', 'pinyin': 'shí xiàn', 'trans': 'achieve'}, {'word': '流畅', 'pinyin': 'liú chàng', 'trans': 'smooth'}, {'word': '高质量', 'pinyin': 'gāo zhì liàng', 'trans': 'high quality'}, {'word': '跨模态', 'pinyin': 'kuà mó shì', 'trans': 'cross-modality'}, {'word': '交互', 'pinyin': 'jiāo hù', 'trans': 'interaction'}, {'word': '优化', 'pinyin': 'yōu huà', 'trans': 'optimize'}, {'word': '关键', 'pinyin': 'guǎn jiàn', 'trans': 'key'}, {'word': '方面', 'pinyin': 'fāng miàn', 'trans': 'aspect'}, {'word': '建立', 'pinyin': 'jiàn lì', 'trans': 'establish'}, {'word': '全面', 'pinyin': 'quán miàn', 'trans': 'comprehensive'}, {'word': '数据', 'pinyin': 'shù jù', 'trans': 'data'}, {'word': '清洗', 'pinyin': 'qīng xǐ', 'trans': 'clean'}, {'word': '合成', 'pinyin': 'hé chéng', 'trans': 'synthesize'}, {'word': '管道', 'pinyin': 'guǎn dào', 'trans': 'pipeline'}, {'word': '获得', 'pinyin': 'huò dé', 'trans': 'obtain'}, {'word': '大约', 'pinyin': 'dà yuē', 'trans': 'about'}, {'word': '文本', 'pinyin': 'wén běn', 'trans': 'text'}, {'word': '视觉', 'pinyin': 'shì jué', 'trans': 'visual'}, {'word': '设计', 'pinyin': 'shè jì', 'trans': 'design'}, {'word': '分词器', 'pinyin': 'fēn cí qì', 'trans': 'tokenizer'}, {'word': '捕捉', 'pinyin': 'bǔ zhuō', 'trans': 'capture'}, {'word': '语义', 'pinyin': 'yǔ yì', 'trans': 'semantics'}, {'word': '声学', 'pinyin': 'shēng xué', 'trans': 'acoustics'}, {'word': '信息', 'pinyin': 'xìn xī', 'trans': 'information'}, {'word': '多阶段', 'pinyin': 'duō jiē duàn', 'trans': 'multi-stage'}, {'word': '训练', 'pinyin': 'xùn liàn', 'trans': 'training'}, {'word': '策略', 'pinyin': 'cè lüè', 'trans': 'strategy'}, {'word': '确保', 'pinyin': 'què bǎo', 'trans': 'ensure'}, {'word': '有效', 'pinyin': 'yǒu xiào', 'trans': 'effective'}, {'word': '协同', 'pinyin': 'xié tóng', 'trans': 'coordination'}, {'word': '领先', 'pinyin': 'lǐng xiān', 'trans': 'lead'}, {'word': '当前', 'pinyin': 'dāng qián', 'trans': 'current'}, {'word': '基准', 'pinyin': 'jī zhǔn', 'trans': 'benchmark'}, {'word': '取得', 'pinyin': 'qǔ dé', 'trans': 'achieve'}, {'word': '可比', 'pinyin': 'kě bǐ', 'trans': 'comparable'}, {'word': '结果', 'pinyin': 'jié guǒ', 'trans': 'result'}]
[28.01.2025 20:11] Renaming previous Chinese page.
[28.01.2025 20:11] Renaming previous data. zh.html to ./d/2025-01-27_zh_reading_task.html
[28.01.2025 20:11] Writing Chinese reading task.
[28.01.2025 20:11] Writing result.
[28.01.2025 20:11] Renaming log file.
[28.01.2025 20:11] Renaming previous data. log.txt to ./logs/2025-01-28_last_log.txt
