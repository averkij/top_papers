[24.12.2024 05:10] Read previous papers.
[24.12.2024 05:10] Generating top page (month).
[24.12.2024 05:10] Writing top page (month).
[24.12.2024 06:14] Read previous papers.
[24.12.2024 06:14] Get feed.
[24.12.2024 06:14] Get page data from previous paper. URL: https://huggingface.co/papers/2412.17256
[24.12.2024 06:14] Get page data from previous paper. URL: https://huggingface.co/papers/2412.17451
[24.12.2024 06:14] Get page data from previous paper. URL: https://huggingface.co/papers/2412.14922
[24.12.2024 06:14] Get page data from previous paper. URL: https://huggingface.co/papers/2412.16926
[24.12.2024 06:14] Extract page data from URL. URL: https://huggingface.co/papers/2412.15118
[24.12.2024 06:14] Get page data from previous paper. URL: https://huggingface.co/papers/2412.17153
[24.12.2024 06:14] Get page data from previous paper. URL: https://huggingface.co/papers/2412.17747
[24.12.2024 06:14] Get page data from previous paper. URL: https://huggingface.co/papers/2412.16686
[24.12.2024 06:14] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[24.12.2024 06:14] No deleted papers detected.
[24.12.2024 06:14] Downloading and parsing papers (pdf, html). Total: 8.
[24.12.2024 06:14] Downloading and parsing paper https://huggingface.co/papers/2412.17256.
[24.12.2024 06:14] Extra JSON file exists (./assets/json/2412.17256.json), skip PDF parsing.
[24.12.2024 06:14] Paper image links file exists (./assets/img_data/2412.17256.json), skip HTML parsing.
[24.12.2024 06:14] Success.
[24.12.2024 06:14] Downloading and parsing paper https://huggingface.co/papers/2412.17451.
[24.12.2024 06:14] Extra JSON file exists (./assets/json/2412.17451.json), skip PDF parsing.
[24.12.2024 06:14] Paper image links file exists (./assets/img_data/2412.17451.json), skip HTML parsing.
[24.12.2024 06:14] Success.
[24.12.2024 06:14] Downloading and parsing paper https://huggingface.co/papers/2412.14922.
[24.12.2024 06:14] Extra JSON file exists (./assets/json/2412.14922.json), skip PDF parsing.
[24.12.2024 06:14] Paper image links file exists (./assets/img_data/2412.14922.json), skip HTML parsing.
[24.12.2024 06:14] Success.
[24.12.2024 06:14] Downloading and parsing paper https://huggingface.co/papers/2412.16926.
[24.12.2024 06:14] Extra JSON file exists (./assets/json/2412.16926.json), skip PDF parsing.
[24.12.2024 06:14] Paper image links file exists (./assets/img_data/2412.16926.json), skip HTML parsing.
[24.12.2024 06:14] Success.
[24.12.2024 06:14] Downloading and parsing paper https://huggingface.co/papers/2412.15118.
[24.12.2024 06:14] Downloading paper 2412.15118 from http://arxiv.org/pdf/2412.15118v1...
[24.12.2024 06:14] Extracting affiliations from text.
[24.12.2024 06:14] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"Outcome-Refining Process Supervision for Code Generation Zhuohao Yu1*, Weizheng Gu1*, Yidong Wang1, Zhengran Zeng1, Jindong Wang2, Wei Ye1, Shikun Zhang1 1Peking University 2Microsoft Research zyu@stu.pku.edu.cn, wye@pku.edu.cn 4 2 0 2 9 1 ] . [ 1 8 1 1 5 1 . 2 1 4 2 : r a "
[24.12.2024 06:14] Response: ```python
["Peking University", "Microsoft Research"]
```
[24.12.2024 06:14] Deleting PDF ./assets/pdf/2412.15118.pdf.
[24.12.2024 06:14] Success.
[24.12.2024 06:14] Downloading and parsing paper https://huggingface.co/papers/2412.17153.
[24.12.2024 06:14] Extra JSON file exists (./assets/json/2412.17153.json), skip PDF parsing.
[24.12.2024 06:14] Paper image links file exists (./assets/img_data/2412.17153.json), skip HTML parsing.
[24.12.2024 06:14] Success.
[24.12.2024 06:14] Downloading and parsing paper https://huggingface.co/papers/2412.17747.
[24.12.2024 06:14] Extra JSON file exists (./assets/json/2412.17747.json), skip PDF parsing.
[24.12.2024 06:14] Paper image links file exists (./assets/img_data/2412.17747.json), skip HTML parsing.
[24.12.2024 06:14] Success.
[24.12.2024 06:14] Downloading and parsing paper https://huggingface.co/papers/2412.16686.
[24.12.2024 06:14] Extra JSON file exists (./assets/json/2412.16686.json), skip PDF parsing.
[24.12.2024 06:14] Paper image links file exists (./assets/img_data/2412.16686.json), skip HTML parsing.
[24.12.2024 06:14] Success.
[24.12.2024 06:14] Enriching papers with extra data.
[24.12.2024 06:14] ********************************************************************************
[24.12.2024 06:14] Abstract 0. In the absence of extensive human-annotated data for complex reasoning tasks, self-improvement -- where models are trained on their own outputs -- has emerged as a primary method for enhancing performance. However, the critical factors underlying the mechanism of these iterative self-improving metho...
[24.12.2024 06:14] ********************************************************************************
[24.12.2024 06:14] Abstract 1. Reasoning ability is essential for Large Multimodal Models (LMMs). In the absence of multimodal chain-of-thought annotated data, self-evolving training, where the model learns from its own outputs, has emerged as an effective and scalable approach for enhancing reasoning abilities. Despite its growi...
[24.12.2024 06:14] ********************************************************************************
[24.12.2024 06:14] Abstract 2. Supervised fine-tuning (SFT) plays a crucial role in adapting large language models (LLMs) to specific domains or tasks. However, as demonstrated by empirical experiments, the collected data inevitably contains noise in practical applications, which poses significant challenges to model performance ...
[24.12.2024 06:14] ********************************************************************************
[24.12.2024 06:14] Abstract 3. In-Context Learning (ICL) is a technique by which language models make predictions based on examples provided in their input context. Previously, their context window size imposed a limit on the number of examples that can be shown, making example selection techniques crucial for identifying the max...
[24.12.2024 06:14] ********************************************************************************
[24.12.2024 06:14] Abstract 4. Large Language Models have demonstrated remarkable capabilities in code generation, yet they often struggle with complex programming tasks that require deep algorithmic reasoning. While process supervision through learned reward models shows promise in guiding reasoning steps, it requires expensive ...
[24.12.2024 06:14] ********************************************************************************
[24.12.2024 06:14] Abstract 5. Autoregressive (AR) models have achieved state-of-the-art performance in text and image generation but suffer from slow generation due to the token-by-token process. We ask an ambitious question: can a pre-trained AR model be adapted to generate outputs in just one or two steps? If successful, this ...
[24.12.2024 06:14] ********************************************************************************
[24.12.2024 06:14] Abstract 6. Techniques enabling large language models (LLMs) to "think more" by generating and attending to intermediate reasoning steps have shown promise in solving complex problems. However, the standard approaches generate sequences of discrete tokens immediately before responding, and so they can incur sig...
[24.12.2024 06:14] ********************************************************************************
[24.12.2024 06:14] Abstract 7. As a crucial step to enhance LLMs alignment with human intentions, Instruction Fine-Tuning (IFT) has a high demand on dataset quality. However, existing IFT datasets often contain knowledge that is inconsistent with LLMs' internal knowledge learned from the pre-training phase, which can greatly affe...
[24.12.2024 06:14] Read previous papers.
[24.12.2024 06:14] Generating reviews via LLM API.
[24.12.2024 06:14] Using data from previous issue: {"categories": ["#optimization", "#training", "#math", "#reasoning", "#rl"], "emoji": "üîÑ", "ru": {"title": "–ë–∞–ª–∞–Ω—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ò–ò", "desc": "–≠—Ç–∞ —Å—Ç–∞—Ç—å—è –ø–æ—Å–≤—è—â–µ–Ω–∞ —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—é –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞
[24.12.2024 06:14] Using data from previous issue: {"categories": ["#benchmark", "#optimization", "#training", "#multimodal", "#reasoning", "#dataset"], "emoji": "üß†", "ru": {"title": "–°–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è", "desc": "–°—Ç–∞—Ç—å—è –∏—Å—Å–ª–µ–¥—É–µ—Ç —Å–∞–º–æ—ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É—é—â–µ–µ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å
[24.12.2024 06:14] Using data from previous issue: {"categories": ["#data", "#training", "#optimization"], "emoji": "üßº", "ru": {"title": "–ß–∏—Å—Ç–∞—è –¥–æ–æ–±—É—á–∫–∞: RobustFT –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤—ã—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π", "desc": "–°—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ RobustFT –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ–π –¥–æ–æ–±—É—á–µ–Ω–∏—è –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π (LLM) –Ω–∞ –∑–∞—à—É–º–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. RobustFT –∏—Å–ø–æ–ª—å–∑—É–µ—Ç
[24.12.2024 06:14] Using data from previous issue: {"categories": ["#data", "#optimization", "#training", "#dataset", "#long_context"], "emoji": "üìè", "ru": {"title": "–ë–æ–ª—å—à–µ –ø—Ä–∏–º–µ—Ä–æ–≤ - –ª—É—á—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: –Ω–æ–≤—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π", "desc": "–°—Ç–∞—Ç—å—è –∏—Å—Å–ª–µ–¥—É–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–µ—Ö–Ω–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ
[24.12.2024 06:14] Querying the API.
[24.12.2024 06:14] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Large Language Models have demonstrated remarkable capabilities in code generation, yet they often struggle with complex programming tasks that require deep algorithmic reasoning. While process supervision through learned reward models shows promise in guiding reasoning steps, it requires expensive training data and suffers from unreliable evaluation. We propose Outcome-Refining Process Supervision, a novel paradigm that treats outcome refinement itself as the process to be supervised. Our framework leverages concrete execution signals to ground the supervision of reasoning steps, while using tree-structured exploration to maintain multiple solution trajectories simultaneously. Experiments demonstrate that our approach enables even smaller models to achieve high success accuracy and performance metrics on competitive programming tasks, creates more reliable verification than traditional reward models without requiring training PRMs. Our approach achieves significant improvements across 5 models and 3 datasets: an average of 26.9% increase in correctness and 42.2% in efficiency. The results suggest that providing structured reasoning space with concrete verification signals is crucial for solving complex programming tasks. We open-source all our code and data at: https://github.com/zhuohaoyu/ORPS
[24.12.2024 06:14] Response: {
  "desc": "–≠—Ç–∞ —Å—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —É–ª—É—á—à–µ–Ω–∏—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –≤ —Ä–µ—à–µ–Ω–∏–∏ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –ê–≤—Ç–æ—Ä—ã –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –º–µ—Ç–æ–¥ 'Outcome-Refining Process Supervision', –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —ç—Ç–∞–ø–æ–≤ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è. –ü–æ–¥—Ö–æ–¥ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–π —Ä–µ—à–µ–Ω–∏—è. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π –Ω–∞ –∑–∞–¥–∞—á–∞—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±—É—á–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è.",
  "emoji": "üß†",
  "title": "–£—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π"
}
[24.12.2024 06:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Large Language Models have demonstrated remarkable capabilities in code generation, yet they often struggle with complex programming tasks that require deep algorithmic reasoning. While process supervision through learned reward models shows promise in guiding reasoning steps, it requires expensive training data and suffers from unreliable evaluation. We propose Outcome-Refining Process Supervision, a novel paradigm that treats outcome refinement itself as the process to be supervised. Our framework leverages concrete execution signals to ground the supervision of reasoning steps, while using tree-structured exploration to maintain multiple solution trajectories simultaneously. Experiments demonstrate that our approach enables even smaller models to achieve high success accuracy and performance metrics on competitive programming tasks, creates more reliable verification than traditional reward models without requiring training PRMs. Our approach achieves significant improvements across 5 models and 3 datasets: an average of 26.9% increase in correctness and 42.2% in efficiency. The results suggest that providing structured reasoning space with concrete verification signals is crucial for solving complex programming tasks. We open-source all our code and data at: https://github.com/zhuohaoyu/ORPS"

[24.12.2024 06:14] Response: ```python
['PLP', 'TRAINING', 'DATASET']
```
[24.12.2024 06:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Large Language Models have demonstrated remarkable capabilities in code generation, yet they often struggle with complex programming tasks that require deep algorithmic reasoning. While process supervision through learned reward models shows promise in guiding reasoning steps, it requires expensive training data and suffers from unreliable evaluation. We propose Outcome-Refining Process Supervision, a novel paradigm that treats outcome refinement itself as the process to be supervised. Our framework leverages concrete execution signals to ground the supervision of reasoning steps, while using tree-structured exploration to maintain multiple solution trajectories simultaneously. Experiments demonstrate that our approach enables even smaller models to achieve high success accuracy and performance metrics on competitive programming tasks, creates more reliable verification than traditional reward models without requiring training PRMs. Our approach achieves significant improvements across 5 models and 3 datasets: an average of 26.9% increase in correctness and 42.2% in efficiency. The results suggest that providing structured reasoning space with concrete verification signals is crucial for solving complex programming tasks. We open-source all our code and data at: https://github.com/zhuohaoyu/ORPS"

[24.12.2024 06:14] Response: ```python
['REASONING', 'OPTIMIZATION', 'OPEN_SOURCE']
```
[24.12.2024 06:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper introduces Outcome-Refining Process Supervision (ORPS), a new method to improve code generation in large language models, especially for complex programming tasks. Instead of relying on traditional reward models, ORPS supervises the reasoning process by refining outcomes using concrete execution signals. This approach allows models to explore multiple solution paths simultaneously, enhancing their ability to solve challenging problems. The results show that ORPS significantly boosts the accuracy and efficiency of various models on competitive programming tasks, demonstrating the importance of structured reasoning and reliable verification.","title":"Enhancing Code Generation with Outcome-Refining Supervision"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='This paper introduces Outcome-Refining Process Supervision (ORPS), a new method to improve code generation in large language models, especially for complex programming tasks. Instead of relying on traditional reward models, ORPS supervises the reasoning process by refining outcomes using concrete execution signals. This approach allows models to explore multiple solution paths simultaneously, enhancing their ability to solve challenging problems. The results show that ORPS significantly boosts the accuracy and efficiency of various models on competitive programming tasks, demonstrating the importance of structured reasoning and reliable verification.', title='Enhancing Code Generation with Outcome-Refining Supervision'))
[24.12.2024 06:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"Â§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÂú®‰ª£Á†ÅÁîüÊàêÊñπÈù¢Ë°®Áé∞Âá∫Ëâ≤Ôºå‰ΩÜÂú®ÈúÄË¶ÅÊ∑±Â∫¶ÁÆóÊ≥ïÊé®ÁêÜÁöÑÂ§çÊùÇÁºñÁ®ã‰ªªÂä°‰∏≠Â∏∏Â∏∏ÈÅáÂà∞Âõ∞Èöæ„ÄÇÊàë‰ª¨ÊèêÂá∫‰∫Ü‰∏ÄÁßçÊñ∞ÁöÑÁõëÁù£Â≠¶‰π†ËåÉÂºè‚Äî‚ÄîÁªìÊûúÁ≤æÁÇºËøáÁ®ãÁõëÁù£ÔºåÊó®Âú®Â∞ÜÁªìÊûúÁ≤æÁÇºÊú¨Ë∫´‰Ωú‰∏∫ÈúÄË¶ÅÁõëÁù£ÁöÑËøáÁ®ã„ÄÇËØ•Ê°ÜÊû∂Âà©Áî®ÂÖ∑‰ΩìÁöÑÊâßË°å‰ø°Âè∑Êù•ÊåáÂØºÊé®ÁêÜÊ≠•È™§ÁöÑÁõëÁù£ÔºåÂêåÊó∂ÈááÁî®Ê†ëÁä∂ÁªìÊûÑÊé¢Á¥¢Êù•ÂêåÊó∂Áª¥Êä§Â§ö‰∏™Ëß£ÂÜ≥ÊñπÊ°àËΩ®Ëøπ„ÄÇÂÆûÈ™åË°®ÊòéÔºåÊàë‰ª¨ÁöÑÊñπÊ≥ï‰ΩøÂæóÂç≥‰ΩøÊòØËæÉÂ∞èÁöÑÊ®°Âûã‰πüËÉΩÂú®Á´û‰∫âÊÄßÁºñÁ®ã‰ªªÂä°‰∏≠ÂÆûÁé∞È´òÊàêÂäüÁéáÂíåÊÄßËÉΩÊåáÊ†áÔºåÊòæËëóÊèêÈ´ò‰∫ÜÊ≠£Á°ÆÊÄßÂíåÊïàÁéá„ÄÇ","title":"ÁªìÊûúÁ≤æÁÇºÔºöÊèêÂçáÁºñÁ®ã‰ªªÂä°ÁöÑÊô∫ËÉΩÊé®ÁêÜËÉΩÂäõ"}', refusal=None, role='assistant', audio=None, function_call=None, tool_calls=[], parsed=Article(desc='Â§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÂú®‰ª£Á†ÅÁîüÊàêÊñπÈù¢Ë°®Áé∞Âá∫Ëâ≤Ôºå‰ΩÜÂú®ÈúÄË¶ÅÊ∑±Â∫¶ÁÆóÊ≥ïÊé®ÁêÜÁöÑÂ§çÊùÇÁºñÁ®ã‰ªªÂä°‰∏≠Â∏∏Â∏∏ÈÅáÂà∞Âõ∞Èöæ„ÄÇÊàë‰ª¨ÊèêÂá∫‰∫Ü‰∏ÄÁßçÊñ∞ÁöÑÁõëÁù£Â≠¶‰π†ËåÉÂºè‚Äî‚ÄîÁªìÊûúÁ≤æÁÇºËøáÁ®ãÁõëÁù£ÔºåÊó®Âú®Â∞ÜÁªìÊûúÁ≤æÁÇºÊú¨Ë∫´‰Ωú‰∏∫ÈúÄË¶ÅÁõëÁù£ÁöÑËøáÁ®ã„ÄÇËØ•Ê°ÜÊû∂Âà©Áî®ÂÖ∑‰ΩìÁöÑÊâßË°å‰ø°Âè∑Êù•ÊåáÂØºÊé®ÁêÜÊ≠•È™§ÁöÑÁõëÁù£ÔºåÂêåÊó∂ÈááÁî®Ê†ëÁä∂ÁªìÊûÑÊé¢Á¥¢Êù•ÂêåÊó∂Áª¥Êä§Â§ö‰∏™Ëß£ÂÜ≥ÊñπÊ°àËΩ®Ëøπ„ÄÇÂÆûÈ™åË°®ÊòéÔºåÊàë‰ª¨ÁöÑÊñπÊ≥ï‰ΩøÂæóÂç≥‰ΩøÊòØËæÉÂ∞èÁöÑÊ®°Âûã‰πüËÉΩÂú®Á´û‰∫âÊÄßÁºñÁ®ã‰ªªÂä°‰∏≠ÂÆûÁé∞È´òÊàêÂäüÁéáÂíåÊÄßËÉΩÊåáÊ†áÔºåÊòæËëóÊèêÈ´ò‰∫ÜÊ≠£Á°ÆÊÄßÂíåÊïàÁéá„ÄÇ', title='ÁªìÊûúÁ≤æÁÇºÔºöÊèêÂçáÁºñÁ®ã‰ªªÂä°ÁöÑÊô∫ËÉΩÊé®ÁêÜËÉΩÂäõ'))
[24.12.2024 06:14] Using data from previous issue: {"categories": ["#optimization", "#training", "#architecture"], "emoji": "üöÄ", "ru": {"title": "–†–µ–≤–æ–ª—é—Ü–∏—è –≤ —Å–∫–æ—Ä–æ—Å—Ç–∏: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞ –æ–¥–∏–Ω —à–∞–≥", "desc": "–°—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º Distilled Decoding (DD) –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö (AR) –º–æ–¥–µ–ª–µ–π. DD –∏—Å–ø–æ–ª—å–∑—É–µ
[24.12.2024 06:14] Using data from previous issue: {"categories": ["#optimization", "#reasoning", "#inference", "#training", "#architecture"], "emoji": "üß†", "ru": {"title": "–û—Ñ–ª–∞–π–Ω-—Å–æ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä: –£–ª—É—á—à–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–µ–∫–æ–¥–µ—Ä–∞", "desc": "–°—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —É–ª—É—á—à–µ–Ω–∏—é —Ä–∞–±–æ—Ç—ã –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π (LLM) —Å –ø–æ–º–æ—â—å—é –æ—Ñ–ª
[24.12.2024 06:14] Using data from previous issue: {"categories": ["#dataset", "#training", "#optimization", "#data", "#alignment"], "emoji": "üß†", "ru": {"title": "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏ LLM –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–π —Ç–æ–Ω–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "desc": "–°—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ NILE –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–π 
[24.12.2024 06:14] Loading Chinese text from previous data.
[24.12.2024 06:14] Renaming data file.
[24.12.2024 06:14] Renaming previous data. hf_papers.json to ./d/2024-12-24.json
[24.12.2024 06:14] Saving new data file.
[24.12.2024 06:14] Generating page.
[24.12.2024 06:14] Renaming previous page.
[24.12.2024 06:14] Renaming previous data. index.html to ./d/2024-12-24.html
[24.12.2024 06:14] [Experimental] Generating Chinese page for reading.
[24.12.2024 06:14] Chinese vocab [{'word': 'Ëá™ÂõûÂΩí', 'pinyin': 'z√¨ hu√≠ guƒ´', 'trans': 'autoregressive'}, {'word': 'ËßÜËßâ', 'pinyin': 'sh√¨ ju√©', 'trans': 'visual'}, {'word': 'ÁîüÊàê', 'pinyin': 'shƒìng ch√©ng', 'trans': 'generation'}, {'word': 'Ë°®Áé∞', 'pinyin': 'bi«éo xi√†n', 'trans': 'performance'}, {'word': 'Âº∫Â§ß', 'pinyin': 'qi√°ng d√†', 'trans': 'powerful'}, {'word': 'ÊÄßËÉΩ', 'pinyin': 'x√¨ng n√©ng', 'trans': 'performance'}, {'word': 'È°∫Â∫è', 'pinyin': 'sh√πn x√π', 'trans': 'sequential'}, {'word': 'ÈÄê', 'pinyin': 'zh√∫', 'trans': 'gradual'}, {'word': 'Ê†áËÆ∞', 'pinyin': 'biƒÅo j√¨', 'trans': 'token'}, {'word': 'È¢ÑÊµã', 'pinyin': 'y√π c√®', 'trans': 'prediction'}, {'word': 'Êé®ÁêÜ', 'pinyin': 'tuƒ´ l«ê', 'trans': 'inference'}, {'word': 'ÈÄüÂ∫¶', 'pinyin': 's√π d√π', 'trans': 'speed'}, {'word': 'ÊèêÂá∫', 'pinyin': 't√≠ ch≈´', 'trans': 'propose'}, {'word': 'Âπ∂Ë°å', 'pinyin': 'b√¨ng x√≠ng', 'trans': 'parallel'}, {'word': 'ÊúâÊïà', 'pinyin': 'y«íu xi√†o', 'trans': 'effective'}, {'word': 'ÊñπÊ≥ï', 'pinyin': 'fƒÅng f«é', 'trans': 'method'}, {'word': 'ÊèêÈ´ò', 'pinyin': 't√≠ gƒÅo', 'trans': 'improve'}, {'word': 'ÊïàÁéá', 'pinyin': 'xi√†o l«ú', 'trans': 'efficiency'}, {'word': '‰øùÁïô', 'pinyin': 'b«éo li√∫', 'trans': 'retain'}, {'word': '‰ºòÂäø', 'pinyin': 'y≈çu sh√¨', 'trans': 'advantage'}, {'word': 'ÂÖ≥ÈîÆ', 'pinyin': 'gu«én ji√†n', 'trans': 'key'}, {'word': 'Ê¥ûËßÅ', 'pinyin': 'd√≤ng ji√†n', 'trans': 'insight'}, {'word': '‰æùËµñ', 'pinyin': 'yƒ´ l√†i', 'trans': 'dependency'}, {'word': 'ÂÖ≥Á≥ª', 'pinyin': 'guƒÅn x√¨', 'trans': 'relationship'}, {'word': 'Âº±', 'pinyin': 'ru√≤', 'trans': 'weak'}, {'word': 'Âº∫', 'pinyin': 'qi√°ng', 'trans': 'strong'}, {'word': 'Áõ∏ÈÇª', 'pinyin': 'xiƒÅng l√≠n', 'trans': 'adjacent'}, {'word': 'Èöæ‰ª•', 'pinyin': 'n√°n y«ê', 'trans': 'difficult'}, {'word': 'Áã¨Á´ã', 'pinyin': 'd√∫ l√¨', 'trans': 'independent'}, {'word': 'ÈááÊ†∑', 'pinyin': 'c«éi y√†ng', 'trans': 'sampling'}, {'word': '‰∏ç‰∏ÄËá¥', 'pinyin': 'b√π yƒ´ zh√¨', 'trans': 'inconsistency'}, {'word': 'Á≠ñÁï•', 'pinyin': 'c√® l√º√®', 'trans': 'strategy'}, {'word': 'ËøúË∑ùÁ¶ª', 'pinyin': 'yu«én j√π l√≠', 'trans': 'long-distance'}, {'word': 'Â±ÄÈÉ®', 'pinyin': 'j√∫ b√π', 'trans': 'local'}, {'word': 'Êó†Áºù', 'pinyin': 'w√∫ f√®ng', 'trans': 'seamless'}, {'word': 'ÈõÜÊàê', 'pinyin': 'j√≠ ch√©ng', 'trans': 'integrate'}, {'word': 'Ê†áÂáÜ', 'pinyin': 'biƒÅo zh«în', 'trans': 'standard'}, {'word': 'Êû∂ÊûÑ', 'pinyin': 'ji√† g√≤u', 'trans': 'architecture'}, {'word': '‰øÆÊîπ', 'pinyin': 'xi≈´ g«éi', 'trans': 'modify'}, {'word': 'ÂÆûÈ™å', 'pinyin': 'sh√≠ y√†n', 'trans': 'experiment'}, {'word': 'ÂõæÂÉè', 'pinyin': 't√∫ xi√†ng', 'trans': 'image'}, {'word': 'ËßÜÈ¢ë', 'pinyin': 'sh√¨ p√≠n', 'trans': 'video'}, {'word': '‰ªªÂä°', 'pinyin': 'r√®n w√π', 'trans': 'task'}, {'word': 'ÂÆûÁé∞', 'pinyin': 'sh√≠ xi√†n', 'trans': 'achieve'}, {'word': 'Âä†ÈÄü', 'pinyin': 'jiƒÅ s√π', 'trans': 'acceleration'}, {'word': 'Ë¥®Èáè', 'pinyin': 'zh√¨ li√†ng', 'trans': 'quality'}, {'word': 'ÊçüÂ§±', 'pinyin': 's«în shƒ´', 'trans': 'loss'}, {'word': 'ÊøÄÂèë', 'pinyin': 'jƒ´ fƒÅ', 'trans': 'inspire'}, {'word': 'Êú™Êù•', 'pinyin': 'w√®i l√°i', 'trans': 'future'}, {'word': 'È´òÊïà', 'pinyin': 'gƒÅo xi√†o', 'trans': 'efficient'}, {'word': 'Áªü‰∏Ä', 'pinyin': 't«íng yƒ´', 'trans': 'unified'}, {'word': 'È°πÁõÆ', 'pinyin': 'xi√†ng m√π', 'trans': 'project'}, {'word': 'È°µÈù¢', 'pinyin': 'y√® mi√†n', 'trans': 'page'}]
[24.12.2024 06:14] Renaming previous Chinese page.
[24.12.2024 06:14] Renaming previous data. zh.html to ./d/2024-12-23_zh_reading_task.html
[24.12.2024 06:14] Writing Chinese reading task.
[24.12.2024 06:14] Writing result.
[24.12.2024 06:14] Renaming log file.
[24.12.2024 06:14] Renaming previous data. log.txt to ./logs/2024-12-24_last_log.txt
