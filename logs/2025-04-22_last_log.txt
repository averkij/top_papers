[22.04.2025 03:33] Read previous papers.
[22.04.2025 03:33] Generating top page (month).
[22.04.2025 03:33] Writing top page (month).
[22.04.2025 04:13] Read previous papers.
[22.04.2025 04:13] Get feed.
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.14945
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.13958
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.13203
[22.04.2025 04:13] Extract page data from URL. URL: https://huggingface.co/papers/2504.15257
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.14603
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.13805
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.15280
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.15047
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.14655
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.14396
[22.04.2025 04:13] Extract page data from URL. URL: https://huggingface.co/papers/2504.14239
[22.04.2025 04:13] Extract page data from URL. URL: https://huggingface.co/papers/2504.15217
[22.04.2025 04:13] Get page data from previous paper. URL: https://huggingface.co/papers/2504.13941
[22.04.2025 04:13] Obtaining deleted papers (sometimes HF Daily Papers move some articles from today to past days).
[22.04.2025 04:13] No deleted papers detected.
[22.04.2025 04:13] Downloading and parsing papers (pdf, html). Total: 13.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.14945.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.14945.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.14945.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.13958.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.13958.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.13958.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.13203.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.13203.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.13203.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.15257.
[22.04.2025 04:13] Downloading paper 2504.15257 from http://arxiv.org/pdf/2504.15257v1...
[22.04.2025 04:13] Extracting affiliations from text.
[22.04.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 1 2 ] . [ 1 7 5 2 5 1 . 4 0 5 2 : r FlowReasoner: Reinforcing Query-Level Meta-Agents Hongcheng Gao1,2, Yue Liu3, Yufei He3, Longxu Dou1, Chao Du1 Zhijie Deng4, Bryan Hooi3, Min Lin1, Tianyu Pang1 1Sea AI Lab, Singapore 2University of Chinese Academy of Sciences 3National University of Singapore 4Shanghai Jiao Tong University gaohongcheng23@mails.ucas.ac.cn, yliu@u.nus.edu "
[22.04.2025 04:13] Response: ```python
[
    "Sea AI Lab, Singapore",
    "University of Chinese Academy of Sciences",
    "National University of Singapore",
    "Shanghai Jiao Tong University"
]
```
[22.04.2025 04:13] Deleting PDF ./assets/pdf/2504.15257.pdf.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.14603.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.14603.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.14603.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.13805.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.13805.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.13805.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.15280.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.15280.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.15280.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.15047.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.15047.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.15047.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.14655.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.14655.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.14655.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.14396.
[22.04.2025 04:13] Extra JSON file exists (./assets/json/2504.14396.json), skip PDF parsing.
[22.04.2025 04:13] Paper image links file exists (./assets/img_data/2504.14396.json), skip HTML parsing.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.14239.
[22.04.2025 04:13] Downloading paper 2504.14239 from http://arxiv.org/pdf/2504.14239v1...
[22.04.2025 04:13] Extracting affiliations from text.
[22.04.2025 04:13] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 9 1 ] . [ 1 9 3 2 4 1 . 4 0 5 2 : r InfiGUI-R1: Advancing Multimodal GUI Agents from Reactive Actors to Deliberative Reasoners Yuhang Liu Zhejiang University liuyuhang@zju.edu.cn Pengxiang Li Dalian University of Technology lipengxiang@mail.dlut.edu.cn Xavier Hu Zhejiang University xavier.hu.research@gmail.com Xiaotian Han xiaotian.sky.han@gmail.com Congkai Xie Reallm Labs xieck13@gmail.com Shengyu Zhang Zhejiang University sy_zhang@zju.edu.cn Hongxia Yang The Hong Kong Polytechnic University hongxia.yang@polyu.edu.hk Fei Wu Zhejiang University wufei@zju.edu.cn Abstract Multimodal Large Language Models (MLLMs) have powered Graphical User Interface (GUI) Agents, showing promise in automating tasks on computing devices. Recent works have begun exploring reasoning in GUI tasks with encouraging results. However, many current approaches rely on manually designed reasoning templates, which may result in reasoning that is not sufficiently robust and adaptive for complex GUI environments. Meanwhile, some existing agents continue to operate as Reactive Actors, relying primarily on implicit reasoning that may lack sufficient depth for GUI tasks demanding planning and error recovery. We argue that advancing these agents requires shift from reactive acting towards acting based on deliberate reasoning. To facilitate this transformation, we introduce InfiGUI-R1, an MLLM-based GUI agent developed through our Actor2Reasoner framework, reasoning-centric, twostage training approach designed to progressively evolve agents from Reactive Actors to Deliberative Reasoners. The first stage, Reasoning Injection, focuses on establishing basic reasoner. We employ Spatial Reasoning Distillation to transfer cross-modal spatial reasoning capabilities from teacher models to MLLMs through trajectories with explicit reasoning steps, enabling models to integrate GUI visual-spatial information with logical reasoning before action generation. The second stage, Deliberation Enhancement, refines"
[22.04.2025 04:13] Response: ```python
[
    "Zhejiang University",
    "Dalian University of Technology",
    "Reallm Labs",
    "The Hong Kong Polytechnic University"
]
```
[22.04.2025 04:13] Deleting PDF ./assets/pdf/2504.14239.pdf.
[22.04.2025 04:13] Success.
[22.04.2025 04:13] Downloading and parsing paper https://huggingface.co/papers/2504.15217.
[22.04.2025 04:13] Downloading paper 2504.15217 from http://arxiv.org/pdf/2504.15217v1...
[22.04.2025 04:14] Extracting affiliations from text.
[22.04.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: I give you a contaminated text with start of ML paper. Extract all authors affiliations as a single institute, firm, company, etc. Return items as a Python plain list only with affiliations. Do not provide commentaries. If there are no affiliations return empty list.

Text:"5 2 0 2 1 2 ] . [ 1 7 1 2 5 1 . 4 0 5 2 : r DRAGON: Distributional Rewards Optimize Diffusion Generative Models Yatong Bai University of California, Berkeley Somayeh Sojoudi University of California, Berkeley Nicholas J. Bryan Adobe Research yatong_bai@berkeley.edu jonah.casebeer@ieee.org sojoudi@berkeley.edu njb@ieee.org "
[22.04.2025 04:14] Response: ```python
["University of California, Berkeley", "Adobe Research"]
```
[22.04.2025 04:14] Deleting PDF ./assets/pdf/2504.15217.pdf.
[22.04.2025 04:14] Success.
[22.04.2025 04:14] Downloading and parsing paper https://huggingface.co/papers/2504.13941.
[22.04.2025 04:14] Extra JSON file exists (./assets/json/2504.13941.json), skip PDF parsing.
[22.04.2025 04:14] Paper image links file exists (./assets/img_data/2504.13941.json), skip HTML parsing.
[22.04.2025 04:14] Success.
[22.04.2025 04:14] Enriching papers with extra data.
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 0. Recent advances in large reasoning models (LRMs) demonstrate that sophisticated behaviors such as multi-step reasoning and self-reflection can emerge via reinforcement learning (RL) with simple rule-based rewards. However, existing zero-RL approaches are inherently ``on-policy'', limiting learning t...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 1. Current Large Language Models (LLMs) often undergo supervised fine-tuning (SFT) to acquire tool use capabilities. However, SFT struggles to generalize to unfamiliar or complex tool use scenarios. Recent advancements in reinforcement learning (RL), particularly with R1-like models, have demonstrated ...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 2. Multi-turn interactions with language models (LMs) pose critical safety risks, as harmful intent can be strategically spread across exchanges. Yet, the vast majority of prior work has focused on single-turn safety, while adaptability and diversity remain among the key challenges of multi-turn red-te...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 3. This paper proposes a query-level meta-agent named FlowReasoner to automate the design of query-level multi-agent systems, i.e., one system per user query. Our core idea is to incentivize a reasoning-based meta-agent via external execution feedback. Concretely, by distilling DeepSeek R1, we first en...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 4. Recent Computer-Using Agents (CUAs), powered by multimodal large language models (LLMs), offer a promising direction for automating complex desktop workflows through natural language. However, most existing CUAs remain conceptual prototypes, hindered by shallow OS integration, fragile screenshot-bas...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 5. Mobile GUI agents show promise in automating tasks but face generalization challenges in diverse real-world scenarios. Traditional approaches using pre-training or fine-tuning with massive datasets struggle with the diversity of mobile applications and user-specific tasks. We propose enhancing mobil...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 6. Multi-view understanding, the ability to reconcile visual information across diverse viewpoints for effective navigation, manipulation, and 3D scene comprehension, is a fundamental challenge in Multi-Modal Large Language Models (MLLMs) to be used as embodied agents. While recent MLLMs have shown imp...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 7. Large Language Models (LLMs) exhibit remarkable capabilities but are susceptible to adversarial prompts that exploit vulnerabilities to produce unsafe or biased outputs. Existing red-teaming methods often face scalability challenges, resource-intensive requirements, or limited diversity in attack st...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 8. We introduce LeetCodeDataset, a high-quality benchmark for evaluating and training code-generation models, addressing two key challenges in LLM research: the lack of reasoning-focused coding benchmarks and self-contained training testbeds. By curating LeetCode Python problems with rich metadata, bro...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 9. The increasing demand for AR/VR applications has highlighted the need for high-quality 360-degree panoramic content. However, generating high-quality 360-degree panoramic images and videos remains a challenging task due to the severe distortions introduced by equirectangular projection (ERP). Existi...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 10. Multimodal Large Language Models (MLLMs) have powered Graphical User Interface (GUI) Agents, showing promise in automating tasks on computing devices. Recent works have begun exploring reasoning in GUI tasks with encouraging results. However, many current approaches rely on manually designed reasoni...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 11. We present Distributional RewArds for Generative OptimizatioN (DRAGON), a versatile framework for fine-tuning media generation models towards a desired outcome. Compared with traditional reinforcement learning with human feedback (RLHF) or pairwise preference approaches such as direct preference opt...
[22.04.2025 04:14] ********************************************************************************
[22.04.2025 04:14] Abstract 12. Large Language Models (LLMs) have shown strong reasoning capabilities, particularly when enhanced through Reinforcement Learning (RL). While prior work has successfully applied RL to mathematical reasoning -- where rules and correctness are well-defined -- generalizing these methods to broader reaso...
[22.04.2025 04:14] Read previous papers.
[22.04.2025 04:14] Generating reviews via LLM API.
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#training", "#reasoning", "#math", "#optimization", "#rl"], "emoji": "🧠", "ru": {"title": "LUFFY: обучение рассуждениям с балансом между имитацией и исследованием", "desc": "LUFFY - это новый подход к обучению больших моделей рассуждений (LRM) с использованием обучения с подкреплени
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#training", "#open_source", "#rlhf", "#survey", "#reasoning", "#optimization", "#benchmark", "#rl"], "emoji": "🛠️", "ru": {"title": "Оптимизация вознаграждений для улучшения навыков LLM в использовании инструментов", "desc": "Статья представляет первое комплексное исследование разра
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#alignment", "#training", "#open_source", "#security", "#agents", "#dataset"], "emoji": "🛡️", "ru": {"title": "Укрепление безопасности языковых моделей в многоходовом диалоге", "desc": "Статья представляет X-Teaming - фреймворк для исследования многоходовых атак на языковые модели. 
[22.04.2025 04:14] Querying the API.
[22.04.2025 04:14] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

This paper proposes a query-level meta-agent named FlowReasoner to automate the design of query-level multi-agent systems, i.e., one system per user query. Our core idea is to incentivize a reasoning-based meta-agent via external execution feedback. Concretely, by distilling DeepSeek R1, we first endow the basic reasoning ability regarding the generation of multi-agent systems to FlowReasoner. Then, we further enhance it via reinforcement learning (RL) with external execution feedback. A multi-purpose reward is designed to guide the RL training from aspects of performance, complexity, and efficiency. In this manner, FlowReasoner is enabled to generate a personalized multi-agent system for each user query via deliberative reasoning. Experiments on both engineering and competition code benchmarks demonstrate the superiority of FlowReasoner. Remarkably, it surpasses o1-mini by 10.52% accuracy across three benchmarks. The code is available at https://github.com/sail-sg/FlowReasoner.
[22.04.2025 04:14] Response: {
  "desc": "В статье представлен FlowReasoner - мета-агент для автоматизированного проектирования многоагентных систем на уровне запросов. Основная идея заключается в стимулировании мета-агента на основе рассуждений с помощью внешней обратной связи. FlowReasoner обучается с помощью дистилляции модели DeepSeek R1 и усиливается через обучение с подкреплением. Эксперименты показывают превосходство FlowReasoner над существующими решениями, в частности, точность повышается на 10.52% по сравнению с o1-mini на трех эталонных наборах данных.",
  "emoji": "🤖",
  "title": "FlowReasoner: Умный дизайнер многоагентных систем"
}
[22.04.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"This paper proposes a query-level meta-agent named FlowReasoner to automate the design of query-level multi-agent systems, i.e., one system per user query. Our core idea is to incentivize a reasoning-based meta-agent via external execution feedback. Concretely, by distilling DeepSeek R1, we first endow the basic reasoning ability regarding the generation of multi-agent systems to FlowReasoner. Then, we further enhance it via reinforcement learning (RL) with external execution feedback. A multi-purpose reward is designed to guide the RL training from aspects of performance, complexity, and efficiency. In this manner, FlowReasoner is enabled to generate a personalized multi-agent system for each user query via deliberative reasoning. Experiments on both engineering and competition code benchmarks demonstrate the superiority of FlowReasoner. Remarkably, it surpasses o1-mini by 10.52% accuracy across three benchmarks. The code is available at https://github.com/sail-sg/FlowReasoner."

[22.04.2025 04:14] Response: ```python
['AGENTS', 'RL', 'BENCHMARK']
```
[22.04.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"This paper proposes a query-level meta-agent named FlowReasoner to automate the design of query-level multi-agent systems, i.e., one system per user query. Our core idea is to incentivize a reasoning-based meta-agent via external execution feedback. Concretely, by distilling DeepSeek R1, we first endow the basic reasoning ability regarding the generation of multi-agent systems to FlowReasoner. Then, we further enhance it via reinforcement learning (RL) with external execution feedback. A multi-purpose reward is designed to guide the RL training from aspects of performance, complexity, and efficiency. In this manner, FlowReasoner is enabled to generate a personalized multi-agent system for each user query via deliberative reasoning. Experiments on both engineering and competition code benchmarks demonstrate the superiority of FlowReasoner. Remarkably, it surpasses o1-mini by 10.52% accuracy across three benchmarks. The code is available at https://github.com/sail-sg/FlowReasoner."

[22.04.2025 04:14] Response: ```python
['REASONING', 'OPTIMIZATION']
```
[22.04.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper introduces FlowReasoner, a meta-agent designed to automate the creation of multi-agent systems tailored to individual user queries. The approach leverages external execution feedback to enhance the reasoning capabilities of the agent, which is initially based on the DeepSeek R1 model. By employing reinforcement learning, FlowReasoner is trained with a multi-faceted reward system that optimizes for performance, complexity, and efficiency. Experimental results show that FlowReasoner outperforms existing methods, achieving a 10.52% accuracy improvement across various benchmarks.","title":"Automating Personalized Multi-Agent Systems with FlowReasoner"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='This paper introduces FlowReasoner, a meta-agent designed to automate the creation of multi-agent systems tailored to individual user queries. The approach leverages external execution feedback to enhance the reasoning capabilities of the agent, which is initially based on the DeepSeek R1 model. By employing reinforcement learning, FlowReasoner is trained with a multi-faceted reward system that optimizes for performance, complexity, and efficiency. Experimental results show that FlowReasoner outperforms existing methods, achieving a 10.52% accuracy improvement across various benchmarks.', title='Automating Personalized Multi-Agent Systems with FlowReasoner'))
[22.04.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"本文提出了一种名为FlowReasoner的查询级元代理，用于自动设计查询级多代理系统，即为每个用户查询构建一个系统。我们的核心思想是通过外部执行反馈来激励基于推理的元代理。具体来说，通过提炼DeepSeek R1，我们首先赋予FlowReasoner基本的多代理系统生成推理能力。然后，通过强化学习（RL）和外部执行反馈进一步增强其能力，设计了一个多用途奖励来指导RL训练，从性能、复杂性和效率等方面进行优化。","title":"FlowReasoner：为每个查询定制智能代理系统"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='本文提出了一种名为FlowReasoner的查询级元代理，用于自动设计查询级多代理系统，即为每个用户查询构建一个系统。我们的核心思想是通过外部执行反馈来激励基于推理的元代理。具体来说，通过提炼DeepSeek R1，我们首先赋予FlowReasoner基本的多代理系统生成推理能力。然后，通过强化学习（RL）和外部执行反馈进一步增强其能力，设计了一个多用途奖励来指导RL训练，从性能、复杂性和效率等方面进行优化。', title='FlowReasoner：为每个查询定制智能代理系统'))
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#agents", "#architecture", "#multimodal"], "emoji": "🤖", "ru": {"title": "UFO2: Надежная автоматизация Windows с помощью мультиагентной системы и глубокой интеграции с ОС", "desc": "UFO2 - это многоагентная система для автоматизации рабочего стола Windows, использующая мультимодальн
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#benchmark", "#dataset", "#transfer_learning", "#agents"], "emoji": "📱", "ru": {"title": "Обучение ИИ-агентов мобильных интерфейсов на демонстрациях пользователей", "desc": "Статья представляет новый подход к обучению агентов графического интерфейса мобильных устройств на основе дем
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#multimodal", "#3d", "#survey", "#reasoning", "#benchmark"], "emoji": "🔍", "ru": {"title": "Новый бенчмарк выявляет пробелы в многоракурсном понимании у языковых моделей", "desc": "Статья представляет новый бенчмарк All-Angles Bench для оценки способности мультимодальных языковых мо
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#security", "#benchmark", "#data", "#open_source", "#dataset"], "emoji": "🌈", "ru": {"title": "RainbowPlus: Эволюционный подход к повышению безопасности языковых моделей", "desc": "Статья представляет RainbowPlus - новый фреймворк для тестирования безопасности крупных языковых модел
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#training", "#open_source", "#reasoning", "#data", "#optimization", "#benchmark", "#dataset"], "emoji": "🧠", "ru": {"title": "LeetCodeDataset: Новый стандарт для оценки ИИ в программировании", "desc": "LeetCodeDataset представляет собой новый бенчмарк для оценки и обучения моделей г
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#3d", "#diffusion", "#multimodal", "#open_source", "#video"], "emoji": "🌐", "ru": {"title": "SphereDiff: Бесшовная генерация панорам 360° с помощью диффузионных моделей", "desc": "SphereDiff - это новый подход к созданию панорамных изображений и видео с обзором 360 градусов, использ
[22.04.2025 04:14] Querying the API.
[22.04.2025 04:14] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

Multimodal Large Language Models (MLLMs) have powered Graphical User Interface (GUI) Agents, showing promise in automating tasks on computing devices. Recent works have begun exploring reasoning in GUI tasks with encouraging results. However, many current approaches rely on manually designed reasoning templates, which may result in reasoning that is not sufficiently robust and adaptive for complex GUI environments. Meanwhile, some existing agents continue to operate as Reactive Actors, relying primarily on implicit reasoning that may lack sufficient depth for GUI tasks demanding planning and error recovery. We argue that advancing these agents requires a shift from reactive acting towards acting based on deliberate reasoning. To facilitate this transformation, we introduce InfiGUI-R1, an MLLM-based GUI agent developed through our Actor2Reasoner framework, a reasoning-centric, two-stage training approach designed to progressively evolve agents from Reactive Actors to Deliberative Reasoners. The first stage, Reasoning Injection, focuses on establishing a basic reasoner. We employ Spatial Reasoning Distillation to transfer cross-modal spatial reasoning capabilities from teacher models to MLLMs through trajectories with explicit reasoning steps, enabling models to integrate GUI visual-spatial information with logical reasoning before action generation. The second stage, Deliberation Enhancement, refines the basic reasoner into a deliberative one using Reinforcement Learning. This stage introduces two approaches: Sub-goal Guidance, which rewards models for generating accurate intermediate sub-goals, and Error Recovery Scenario Construction, which creates failure-and-recovery training scenarios from identified prone-to-error steps. Experimental results show InfiGUI-R1 achieves strong performance in GUI grounding and trajectory tasks. Resources at https://github.com/Reallm-Labs/InfiGUI-R1.
[22.04.2025 04:14] Response: {
  "desc": "Исследователи представили новый подход к созданию агентов графического пользовательского интерфейса (GUI) на основе мультимодальных больших языковых моделей (MLLM). Они разработали фреймворк Actor2Reasoner, который трансформирует реактивных агентов в делиберативных рассуждающих агентов через двухэтапный процесс обучения. Первый этап, 'Внедрение рассуждений', использует пространственную дистилляцию для передачи способностей к рассуждениям от учительских моделей. Второй этап, 'Улучшение обдумывания', применяет обучение с подкреплением для усовершенствования способностей агента к планированию и восстановлению после ошибок.",

  "emoji": "🤖",

  "title": "От реактивных актёров к обдумывающим рассуждателям в GUI-агентах"
}
[22.04.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Multimodal Large Language Models (MLLMs) have powered Graphical User Interface (GUI) Agents, showing promise in automating tasks on computing devices. Recent works have begun exploring reasoning in GUI tasks with encouraging results. However, many current approaches rely on manually designed reasoning templates, which may result in reasoning that is not sufficiently robust and adaptive for complex GUI environments. Meanwhile, some existing agents continue to operate as Reactive Actors, relying primarily on implicit reasoning that may lack sufficient depth for GUI tasks demanding planning and error recovery. We argue that advancing these agents requires a shift from reactive acting towards acting based on deliberate reasoning. To facilitate this transformation, we introduce InfiGUI-R1, an MLLM-based GUI agent developed through our Actor2Reasoner framework, a reasoning-centric, two-stage training approach designed to progressively evolve agents from Reactive Actors to Deliberative Reasoners. The first stage, Reasoning Injection, focuses on establishing a basic reasoner. We employ Spatial Reasoning Distillation to transfer cross-modal spatial reasoning capabilities from teacher models to MLLMs through trajectories with explicit reasoning steps, enabling models to integrate GUI visual-spatial information with logical reasoning before action generation. The second stage, Deliberation Enhancement, refines the basic reasoner into a deliberative one using Reinforcement Learning. This stage introduces two approaches: Sub-goal Guidance, which rewards models for generating accurate intermediate sub-goals, and Error Recovery Scenario Construction, which creates failure-and-recovery training scenarios from identified prone-to-error steps. Experimental results show InfiGUI-R1 achieves strong performance in GUI grounding and trajectory tasks. Resources at https://github.com/Reallm-Labs/InfiGUI-R1."

[22.04.2025 04:14] Response: ```python
['AGENTS', 'MULTIMODAL', 'RL', 'TRAINING']
```
[22.04.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"Multimodal Large Language Models (MLLMs) have powered Graphical User Interface (GUI) Agents, showing promise in automating tasks on computing devices. Recent works have begun exploring reasoning in GUI tasks with encouraging results. However, many current approaches rely on manually designed reasoning templates, which may result in reasoning that is not sufficiently robust and adaptive for complex GUI environments. Meanwhile, some existing agents continue to operate as Reactive Actors, relying primarily on implicit reasoning that may lack sufficient depth for GUI tasks demanding planning and error recovery. We argue that advancing these agents requires a shift from reactive acting towards acting based on deliberate reasoning. To facilitate this transformation, we introduce InfiGUI-R1, an MLLM-based GUI agent developed through our Actor2Reasoner framework, a reasoning-centric, two-stage training approach designed to progressively evolve agents from Reactive Actors to Deliberative Reasoners. The first stage, Reasoning Injection, focuses on establishing a basic reasoner. We employ Spatial Reasoning Distillation to transfer cross-modal spatial reasoning capabilities from teacher models to MLLMs through trajectories with explicit reasoning steps, enabling models to integrate GUI visual-spatial information with logical reasoning before action generation. The second stage, Deliberation Enhancement, refines the basic reasoner into a deliberative one using Reinforcement Learning. This stage introduces two approaches: Sub-goal Guidance, which rewards models for generating accurate intermediate sub-goals, and Error Recovery Scenario Construction, which creates failure-and-recovery training scenarios from identified prone-to-error steps. Experimental results show InfiGUI-R1 achieves strong performance in GUI grounding and trajectory tasks. Resources at https://github.com/Reallm-Labs/InfiGUI-R1."

[22.04.2025 04:14] Response: ```python
['REASONING', 'GAMES']
```
[22.04.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"This paper presents InfiGUI-R1, a Multimodal Large Language Model (MLLM) designed to enhance Graphical User Interface (GUI) agents by shifting from reactive to deliberative reasoning. The proposed Actor2Reasoner framework employs a two-stage training process: the first stage focuses on Reasoning Injection, where spatial reasoning capabilities are transferred to the MLLM, allowing it to better understand GUI visual-spatial information. The second stage, Deliberation Enhancement, uses Reinforcement Learning to refine the agent\'s reasoning abilities by rewarding the generation of accurate sub-goals and constructing training scenarios for error recovery. Experimental results demonstrate that InfiGUI-R1 significantly improves performance in tasks involving GUI grounding and trajectory planning.","title":"From Reactive to Deliberative: Advancing GUI Agents with InfiGUI-R1"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc="This paper presents InfiGUI-R1, a Multimodal Large Language Model (MLLM) designed to enhance Graphical User Interface (GUI) agents by shifting from reactive to deliberative reasoning. The proposed Actor2Reasoner framework employs a two-stage training process: the first stage focuses on Reasoning Injection, where spatial reasoning capabilities are transferred to the MLLM, allowing it to better understand GUI visual-spatial information. The second stage, Deliberation Enhancement, uses Reinforcement Learning to refine the agent's reasoning abilities by rewarding the generation of accurate sub-goals and constructing training scenarios for error recovery. Experimental results demonstrate that InfiGUI-R1 significantly improves performance in tasks involving GUI grounding and trajectory planning.", title='From Reactive to Deliberative: Advancing GUI Agents with InfiGUI-R1'))
[22.04.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"多模态大型语言模型（MLLMs）为图形用户界面（GUI）代理提供了动力，展现了在计算设备上自动化任务的潜力。当前许多方法依赖于手动设计的推理模板，这可能导致在复杂的GUI环境中推理不够稳健和适应。我们提出InfiGUI-R1，这是一个基于MLLM的GUI代理，通过Actor2Reasoner框架开发，旨在将代理从反应型行为者转变为深思熟虑的推理者。该方法包括两个阶段：推理注入和深思熟虑增强，实验结果表明InfiGUI-R1在GUI任务中表现出色。","title":"从反应到深思熟虑：提升GUI代理的推理能力"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='多模态大型语言模型（MLLMs）为图形用户界面（GUI）代理提供了动力，展现了在计算设备上自动化任务的潜力。当前许多方法依赖于手动设计的推理模板，这可能导致在复杂的GUI环境中推理不够稳健和适应。我们提出InfiGUI-R1，这是一个基于MLLM的GUI代理，通过Actor2Reasoner框架开发，旨在将代理从反应型行为者转变为深思熟虑的推理者。该方法包括两个阶段：推理注入和深思熟虑增强，实验结果表明InfiGUI-R1在GUI任务中表现出色。', title='从反应到深思熟虑：提升GUI代理的推理能力'))
[22.04.2025 04:14] Querying the API.
[22.04.2025 04:14] Claude request. Model: claude-3-5-sonnet-20240620. Prompt: Read an abstract of the ML paper and return a JSON with fields: 'desc': explanation of the paper in Russian (4 sentences), use correct machine learning terms. 'emoji': emoji that will reflect the theme of an article somehow, only one emoji. 'title': a slogan of a main idea of the article in Russian. Return only JSON and nothing else.

We present Distributional RewArds for Generative OptimizatioN (DRAGON), a versatile framework for fine-tuning media generation models towards a desired outcome. Compared with traditional reinforcement learning with human feedback (RLHF) or pairwise preference approaches such as direct preference optimization (DPO), DRAGON is more flexible. It can optimize reward functions that evaluate either individual examples or distributions of them, making it compatible with a broad spectrum of instance-wise, instance-to-distribution, and distribution-to-distribution rewards. Leveraging this versatility, we construct novel reward functions by selecting an encoder and a set of reference examples to create an exemplar distribution. When cross-modality encoders such as CLAP are used, the reference examples may be of a different modality (e.g., text versus audio). Then, DRAGON gathers online and on-policy generations, scores them to construct a positive demonstration set and a negative set, and leverages the contrast between the two sets to maximize the reward. For evaluation, we fine-tune an audio-domain text-to-music diffusion model with 20 different reward functions, including a custom music aesthetics model, CLAP score, Vendi diversity, and Frechet audio distance (FAD). We further compare instance-wise (per-song) and full-dataset FAD settings while ablating multiple FAD encoders and reference sets. Over all 20 target rewards, DRAGON achieves an 81.45% average win rate. Moreover, reward functions based on exemplar sets indeed enhance generations and are comparable to model-based rewards. With an appropriate exemplar set, DRAGON achieves a 60.95% human-voted music quality win rate without training on human preference annotations. As such, DRAGON exhibits a new approach to designing and optimizing reward functions for improving human-perceived quality. Sound examples at https://ml-dragon.github.io/web.
[22.04.2025 04:14] Response: {
  "desc": "DRAGON - это новый метод для тонкой настройки генеративных моделей в области медиа. В отличие от традиционных подходов, DRAGON может оптимизировать функции вознаграждения, оценивающие как отдельные примеры, так и их распределения. Метод использует онлайн-генерации для создания наборов положительных и отрицательных примеров, максимизируя разницу между ними. DRAGON был протестирован на 20 различных функциях вознаграждения для модели генерации музыки, показав высокую эффективность без использования аннотаций человеческих предпочтений.",
  "emoji": "🐉",
  "title": "DRAGON: гибкая оптимизация генеративных моделей без обратной связи от человека"
}
[22.04.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

DATASET: Papers that introduce new datasets or make significant modifications to existing ones
DATA: Papers focusing on data processing, cleaning, collection, or curation methodologies
BENCHMARK: Papers proposing or analyzing model evaluation frameworks and benchmarks
AGENTS: Papers exploring autonomous agents, web agents, or agent-based architectures
CV: Papers developing computer vision methods or visual processing systems
RL: Papers investigating reinforcement learning theory or applications
RLHF: Papers specifically about human feedback in RL (PPO, DPO, etc.)
RAG: Papers advancing retrieval-augmented generation techniques
PLP: Papers about Programming Language Processing models or programming benchmarks
INFERENCE: Papers optimizing model deployment (quantization, pruning, etc.)
3D: Papers on 3D content generation, processing, or understanding
AUDIO: Papers advancing speech/audio processing or generation
VIDEO: Papers on video analysis, generation, or understanding
MULTIMODAL: Papers combining multiple input/output modalities
MATH: Papers focused on mathematical theory and algorithms
MULTILINGUAL: Papers addressing multiple languages or cross-lingual capabilities, including all non English models
ARCHITECTURE: Papers proposing novel neural architectures or components
HEALTHCARE: Papers applying ML to medical/healthcare domains
TRAINING: Papers improving model training or fine-tuning methods
ROBOTICS: Papers on robotic systems and embodied AI
SMALL_MODELS: Papers that describe models considering small, below 1 billion parameters or similar 

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"We present Distributional RewArds for Generative OptimizatioN (DRAGON), a versatile framework for fine-tuning media generation models towards a desired outcome. Compared with traditional reinforcement learning with human feedback (RLHF) or pairwise preference approaches such as direct preference optimization (DPO), DRAGON is more flexible. It can optimize reward functions that evaluate either individual examples or distributions of them, making it compatible with a broad spectrum of instance-wise, instance-to-distribution, and distribution-to-distribution rewards. Leveraging this versatility, we construct novel reward functions by selecting an encoder and a set of reference examples to create an exemplar distribution. When cross-modality encoders such as CLAP are used, the reference examples may be of a different modality (e.g., text versus audio). Then, DRAGON gathers online and on-policy generations, scores them to construct a positive demonstration set and a negative set, and leverages the contrast between the two sets to maximize the reward. For evaluation, we fine-tune an audio-domain text-to-music diffusion model with 20 different reward functions, including a custom music aesthetics model, CLAP score, Vendi diversity, and Frechet audio distance (FAD). We further compare instance-wise (per-song) and full-dataset FAD settings while ablating multiple FAD encoders and reference sets. Over all 20 target rewards, DRAGON achieves an 81.45% average win rate. Moreover, reward functions based on exemplar sets indeed enhance generations and are comparable to model-based rewards. With an appropriate exemplar set, DRAGON achieves a 60.95% human-voted music quality win rate without training on human preference annotations. As such, DRAGON exhibits a new approach to designing and optimizing reward functions for improving human-perceived quality. Sound examples at https://ml-dragon.github.io/web."

[22.04.2025 04:14] Response: ```python
["RLHF", "AUDIO", "TRAINING"]
```
[22.04.2025 04:14] OpenAI request. Model: gpt-4o-mini. Prompt: Analyze the following research paper text and classify it into one or more relevant topics from the list below. Consider only information from the provided text. Don't add a tag if the topic is not directly related to the article.

Topics:

AGI: Papers discussing artificial general intelligence concepts
GAMES: Papers applying ML to games or game development
INTERPRETABILITY: Papers analyzing model behavior and explanations
REASONING: Papers enhancing logical reasoning capabilities
TRANSFER_LEARNING: Papers on knowledge transfer between models/domains
GRAPHS: Papers advancing graph neural networks and applications
ETHICS: Papers addressing AI ethics, fairness, and bias
SECURITY: Papers on model security and adversarial robustness
OPTIMIZATION: Papers advancing training optimization methods
SURVEY: Papers comprehensively reviewing research areas
DIFFUSION: Papers on diffusion-based generative models
ALIGNMENT: Papers about aligning language models with human values, preferences, and intended behavior
STORY_GENERATION: Papers on story generation, including plot generation and author style adaptation
HALLUCINATIONS: Papers about the hallucinations, hallucinations analysis and mitigation
LONG_CONTEXT: Papers about long context handling, including techniques to extend context length
SYNTHETIC: Papers about using synthetic data for training, including methods for generating and leveraging artificial data
TRANSLATION: Papers on machine translation, including techniques, data and applications for translating between languages
LEAKAGE: Papers about data leakage, including issues of unintended data exposure and methods to detect or prevent it
OPEN_SOURCE: Papers that contribute to open-source projects by releasing models, datasets, or frameworks to the public
SCIENCE: Papers on scientific applications of LM including understanding of science articles and research automatization
LOW_RESOURCE: Papers that mention low-resource languages

Return only a Python flat list of topics that match the given text.

Paper text to classify:

"We present Distributional RewArds for Generative OptimizatioN (DRAGON), a versatile framework for fine-tuning media generation models towards a desired outcome. Compared with traditional reinforcement learning with human feedback (RLHF) or pairwise preference approaches such as direct preference optimization (DPO), DRAGON is more flexible. It can optimize reward functions that evaluate either individual examples or distributions of them, making it compatible with a broad spectrum of instance-wise, instance-to-distribution, and distribution-to-distribution rewards. Leveraging this versatility, we construct novel reward functions by selecting an encoder and a set of reference examples to create an exemplar distribution. When cross-modality encoders such as CLAP are used, the reference examples may be of a different modality (e.g., text versus audio). Then, DRAGON gathers online and on-policy generations, scores them to construct a positive demonstration set and a negative set, and leverages the contrast between the two sets to maximize the reward. For evaluation, we fine-tune an audio-domain text-to-music diffusion model with 20 different reward functions, including a custom music aesthetics model, CLAP score, Vendi diversity, and Frechet audio distance (FAD). We further compare instance-wise (per-song) and full-dataset FAD settings while ablating multiple FAD encoders and reference sets. Over all 20 target rewards, DRAGON achieves an 81.45% average win rate. Moreover, reward functions based on exemplar sets indeed enhance generations and are comparable to model-based rewards. With an appropriate exemplar set, DRAGON achieves a 60.95% human-voted music quality win rate without training on human preference annotations. As such, DRAGON exhibits a new approach to designing and optimizing reward functions for improving human-perceived quality. Sound examples at https://ml-dragon.github.io/web."

[22.04.2025 04:14] Response: ```python
["OPTIMIZATION", "DIFFUSION"]
```
[22.04.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"The paper introduces DRAGON, a framework designed to enhance media generation models by fine-tuning them with flexible reward functions. Unlike traditional methods like reinforcement learning with human feedback, DRAGON can optimize rewards based on individual examples or distributions, allowing for a wider range of applications. It constructs novel reward functions using encoders and reference examples, which can come from different modalities, such as text and audio. The results show that DRAGON significantly improves generation quality, achieving high win rates in both human evaluations and various reward settings without relying on human preference annotations.","title":"DRAGON: Revolutionizing Reward Optimization for Media Generation"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='The paper introduces DRAGON, a framework designed to enhance media generation models by fine-tuning them with flexible reward functions. Unlike traditional methods like reinforcement learning with human feedback, DRAGON can optimize rewards based on individual examples or distributions, allowing for a wider range of applications. It constructs novel reward functions using encoders and reference examples, which can come from different modalities, such as text and audio. The results show that DRAGON significantly improves generation quality, achieving high win rates in both human evaluations and various reward settings without relying on human preference annotations.', title='DRAGON: Revolutionizing Reward Optimization for Media Generation'))
[22.04.2025 04:14] Response: ParsedChatCompletionMessage[Article](content='{"desc":"本文介绍了一种名为DRAGON的框架，用于微调媒体生成模型以实现期望的结果。与传统的基于人类反馈的强化学习（RLHF）或成对偏好方法相比，DRAGON更加灵活，能够优化评估单个示例或其分布的奖励函数。通过选择编码器和参考示例集，DRAGON构建了新颖的奖励函数，并利用在线生成的对比集来最大化奖励。实验结果表明，DRAGON在多种奖励函数下表现优异，显著提升了生成内容的质量。","title":"DRAGON：灵活优化生成模型的奖励框架"}', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None, parsed=Article(desc='本文介绍了一种名为DRAGON的框架，用于微调媒体生成模型以实现期望的结果。与传统的基于人类反馈的强化学习（RLHF）或成对偏好方法相比，DRAGON更加灵活，能够优化评估单个示例或其分布的奖励函数。通过选择编码器和参考示例集，DRAGON构建了新颖的奖励函数，并利用在线生成的对比集来最大化奖励。实验结果表明，DRAGON在多种奖励函数下表现优异，显著提升了生成内容的质量。', title='DRAGON：灵活优化生成模型的奖励框架'))
[22.04.2025 04:14] Using data from previous issue: {"categories": ["#benchmark", "#reasoning", "#data", "#rl", "#transfer_learning", "#math"], "emoji": "🧠", "ru": {"title": "Многодоменное обучение с подкреплением для улучшения рассуждений ИИ", "desc": "Статья представляет NEMOTRON-CROSSTHINK - фреймворк для улучшения способностей крупных языковых мо
[22.04.2025 04:14] Loading Chinese text from previous data.
[22.04.2025 04:14] Renaming data file.
[22.04.2025 04:14] Renaming previous data. hf_papers.json to ./d/2025-04-22.json
[22.04.2025 04:14] Saving new data file.
[22.04.2025 04:14] Generating page.
[22.04.2025 04:14] Renaming previous page.
[22.04.2025 04:14] Renaming previous data. index.html to ./d/2025-04-22.html
[22.04.2025 04:14] [Experimental] Generating Chinese page for reading.
[22.04.2025 04:14] Chinese vocab [{'word': '构建', 'pinyin': 'gòujiàn', 'trans': 'construct'}, {'word': '有效', 'pinyin': 'yǒuxiào', 'trans': 'effective'}, {'word': '指令', 'pinyin': 'zhǐlìng', 'trans': 'instruction'}, {'word': '调整', 'pinyin': 'tiáozhěng', 'trans': 'adjust'}, {'word': '数据集', 'pinyin': 'shùjùjí', 'trans': 'dataset'}, {'word': '关键因素', 'pinyin': 'guǎnjiàn yīnsù', 'trans': 'key factors'}, {'word': '质量', 'pinyin': 'zhìliàng', 'trans': 'quality'}, {'word': '多样性', 'pinyin': 'duōyàngxìng', 'trans': 'diversity'}, {'word': '开源', 'pinyin': 'kāiyuán', 'trans': 'open-source'}, {'word': '自动', 'pinyin': 'zìdòng', 'trans': 'automatic'}, {'word': '选择', 'pinyin': 'xuǎnzé', 'trans': 'select'}, {'word': '子集', 'pinyin': 'zǐjí', 'trans': 'subset'}, {'word': '变得', 'pinyin': 'biàndé', 'trans': 'become'}, {'word': '重要', 'pinyin': 'zhòngyào', 'trans': 'important'}, {'word': '现有', 'pinyin': 'xiànyǒu', 'trans': 'existing'}, {'word': '方法', 'pinyin': 'fāngfǎ', 'trans': 'method'}, {'word': '主要', 'pinyin': 'zhǔyào', 'trans': 'main'}, {'word': '关注', 'pinyin': 'guānzhù', 'trans': 'focus on'}, {'word': '实例', 'pinyin': 'shílì', 'trans': 'instance'}, {'word': '启发式', 'pinyin': 'qǐfāshì', 'trans': 'heuristic'}, {'word': '规则', 'pinyin': 'guīzé', 'trans': 'rule'}, {'word': '维持', 'pinyin': 'wéichí', 'trans': 'maintain'}, {'word': '效果', 'pinyin': 'xiàoguǒ', 'trans': 'effect'}, {'word': '不佳', 'pinyin': 'bùjiā', 'trans': 'poor'}, {'word': '作者', 'pinyin': 'zuòzhě', 'trans': 'author'}, {'word': '提出', 'pinyin': 'tíchū', 'trans': 'propose'}, {'word': '新方法', 'pinyin': 'xīn fāngfǎ', 'trans': 'new method'}, {'word': '通过', 'pinyin': 'tōngguò', 'trans': 'through'}, {'word': '标签', 'pinyin': 'biāoqiān', 'trans': 'label'}, {'word': '图', 'pinyin': 'tú', 'trans': 'graph'}, {'word': '模拟', 'pinyin': 'mónǐ', 'trans': 'simulate'}, {'word': '语义', 'pinyin': 'yǔyì', 'trans': 'semantic'}, {'word': '空间', 'pinyin': 'kōngjiān', 'trans': 'space'}, {'word': '基于', 'pinyin': 'jīyú', 'trans': 'based on'}, {'word': '信息', 'pinyin': 'xìnxī', 'trans': 'information'}, {'word': '分布', 'pinyin': 'fēnbù', 'trans': 'distribution'}, {'word': '量化', 'pinyin': 'liànghuà', 'trans': 'quantify'}, {'word': '实验', 'pinyin': 'shíyàn', 'trans': 'experiment'}, {'word': '显示', 'pinyin': 'xiǎnshì', 'trans': 'show'}, {'word': '优于', 'pinyin': 'yōuyú', 'trans': 'superior to'}, {'word': '基础', 'pinyin': 'jīchǔ', 'trans': 'foundation'}, {'word': '模型', 'pinyin': 'móxíng', 'trans': 'model'}]
[22.04.2025 04:14] Renaming previous Chinese page.
[22.04.2025 04:14] Renaming previous data. zh.html to ./d/2025-04-21_zh_reading_task.html
[22.04.2025 04:14] Writing Chinese reading task.
[22.04.2025 04:14] Writing result.
[22.04.2025 04:14] Renaming log file.
[22.04.2025 04:14] Renaming previous data. log.txt to ./logs/2025-04-22_last_log.txt
