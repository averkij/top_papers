{
    "date": {
        "ru": "20 июня",
        "en": "June 20",
        "zh": "6月20日"
    },
    "time_utc": "2025-06-20 05:13",
    "weekday": 4,
    "issue_id": 4396,
    "home_page_url": "https://huggingface.co/papers",
    "papers": [
        {
            "id": "https://huggingface.co/papers/2506.14837",
            "title": "Improved Iterative Refinement for Chart-to-Code Generation via\n  Structured Instruction",
            "url": "https://huggingface.co/papers/2506.14837",
            "abstract": "ChartIR uses structured instruction and iterative refinement to improve MLLM performance in chart-to-code generation by separating visual understanding and code translation tasks.  \t\t\t\t\tAI-generated summary \t\t\t\t Recently, multimodal large language models (MLLMs) have attracted increasing research attention due to their powerful visual understanding capabilities. While they have achieved impressive results on various vision tasks, their performance on chart-to-code generation remains suboptimal. This task requires MLLMs to generate executable code that can reproduce a given chart, demanding not only precise visual understanding but also accurate translation of visual elements into structured code. Directly prompting MLLMs to perform this complex task often yields unsatisfactory results. To address this challenge, we propose {ChartIR}, an iterative refinement method based on structured instruction. First, we distinguish two tasks: visual understanding and code translation. To accomplish the visual understanding component, we design two types of structured instructions: description and difference. The description instruction captures the visual elements of the reference chart, while the difference instruction characterizes the discrepancies between the reference chart and the generated chart. These instructions effectively transform visual features into language representations, thereby facilitating the subsequent code translation process. Second, we decompose the overall chart generation pipeline into two stages: initial code generation and iterative refinement, enabling progressive enhancement of the final output. Experimental results show that, compared to other method, our method achieves superior performance on both the open-source model Qwen2-VL and the closed-source model GPT-4o.",
            "score": 0,
            "issue_id": 4396,
            "pub_date": "2025-06-15",
            "pub_date_card": {
                "ru": "15 июня",
                "en": "June 15",
                "zh": "6月15日"
            },
            "hash": "3172095671c65e03",
            "pdf_title_img": "img/title_stub.png",
            "data": {
                "categories": [
                    "#cv",
                    "#interpretability",
                    "#optimization",
                    "#training",
                    "#multimodal"
                ],
                "emoji": "📊",
                "ru": {
                    "title": "Точная генерация кода графиков с помощью структурированных инструкций и итеративного уточнения",
                    "desc": "ChartIR - это метод итеративного уточнения для улучшения производительности мультимодальных больших языковых моделей (MLLM) в задаче генерации кода по изображению графика. Метод разделяет задачи визуального понимания и перевода в код, используя структурированные инструкции для описания и сравнения графиков. ChartIR применяет двухэтапный подход: начальная генерация кода и итеративное уточнение. Эксперименты показали превосходство ChartIR над другими методами на моделях Qwen2-VL и GPT-4."
                },
                "en": {
                    "title": "ChartIR: Refining Code Generation from Charts with Structured Instructions",
                    "desc": "ChartIR is a novel approach that enhances the performance of multimodal large language models (MLLMs) in generating code from charts by separating the tasks of visual understanding and code translation. It employs structured instructions to guide the model in accurately interpreting visual elements and translating them into executable code. The method involves two main stages: initial code generation followed by iterative refinement, which allows for progressive improvements in the output. Experimental results demonstrate that ChartIR significantly outperforms existing methods on both open-source and closed-source models."
                },
                "zh": {
                    "title": "ChartIR：提升图表到代码生成的智能方法",
                    "desc": "ChartIR是一种通过结构化指令和迭代优化来提升多模态大语言模型（MLLM）在图表到代码生成任务中的表现的方法。该方法将视觉理解和代码翻译任务分开，首先通过描述和差异两种结构化指令来捕捉图表的视觉元素。接着，ChartIR将整体图表生成流程分为初始代码生成和迭代优化两个阶段，从而逐步提升最终输出的质量。实验结果表明，与其他方法相比，ChartIR在开源模型Qwen2-VL和闭源模型GPT-4o上均表现出更优的性能。"
                }
            }
        }
    ],
    "link_prev": "2025-06-19.html",
    "link_next": "2025-06-23.html",
    "link_month": "2025-06.html",
    "short_date_prev": {
        "ru": "19.06",
        "en": "06/19",
        "zh": "6月19日"
    },
    "short_date_next": {
        "ru": "23.06",
        "en": "06/23",
        "zh": "6月23日"
    },
    "categories": {
        "#dataset": 0,
        "#data": 0,
        "#benchmark": 0,
        "#agents": 0,
        "#cv": 1,
        "#rl": 0,
        "#rlhf": 0,
        "#rag": 0,
        "#plp": 0,
        "#inference": 0,
        "#3d": 0,
        "#audio": 0,
        "#video": 0,
        "#multimodal": 1,
        "#math": 0,
        "#multilingual": 0,
        "#architecture": 0,
        "#healthcare": 0,
        "#training": 1,
        "#robotics": 0,
        "#agi": 0,
        "#games": 0,
        "#interpretability": 1,
        "#reasoning": 0,
        "#transfer_learning": 0,
        "#graphs": 0,
        "#ethics": 0,
        "#security": 0,
        "#optimization": 1,
        "#survey": 0,
        "#diffusion": 0,
        "#alignment": 0,
        "#story_generation": 0,
        "#hallucinations": 0,
        "#long_context": 0,
        "#synthetic": 0,
        "#machine_translation": 0,
        "#leakage": 0,
        "#open_source": 0,
        "#small_models": 0,
        "#science": 0,
        "#low_resource": 0
    }
}