{
    "date": {
        "ru": "23 января",
        "en": "January 23",
        "zh": "1月23日"
    },
    "time_utc": "2025-01-23 05:10",
    "weekday": 3,
    "issue_id": 1820,
    "home_page_url": "https://huggingface.co/papers",
    "papers": [
        {
            "id": "https://huggingface.co/papers/2501.12909",
            "title": "FilmAgent: A Multi-Agent Framework for End-to-End Film Automation in Virtual 3D Spaces",
            "url": "https://huggingface.co/papers/2501.12909",
            "abstract": "Virtual film production requires intricate decision-making processes, including scriptwriting, virtual cinematography, and precise actor positioning and actions. Motivated by recent advances in automated decision-making with language agent-based societies, this paper introduces FilmAgent, a novel LLM-based multi-agent collaborative framework for end-to-end film automation in our constructed 3D virtual spaces. FilmAgent simulates various crew roles, including directors, screenwriters, actors, and cinematographers, and covers key stages of a film production workflow: (1) idea development transforms brainstormed ideas into structured story outlines; (2) scriptwriting elaborates on dialogue and character actions for each scene; (3) cinematography determines the camera setups for each shot. A team of agents collaborates through iterative feedback and revisions, thereby verifying intermediate scripts and reducing hallucinations. We evaluate the generated videos on 15 ideas and 4 key aspects. Human evaluation shows that FilmAgent outperforms all baselines across all aspects and scores 3.98 out of 5 on average, showing the feasibility of multi-agent collaboration in filmmaking. Further analysis reveals that FilmAgent, despite using the less advanced GPT-4o model, surpasses the single-agent o1, showing the advantage of a well-coordinated multi-agent system. Lastly, we discuss the complementary strengths and weaknesses of OpenAI's text-to-video model Sora and our FilmAgent in filmmaking.",
            "score": 15,
            "issue_id": 1819,
            "pub_date": "2025-01-22",
            "pub_date_card": {
                "ru": "22 января",
                "en": "January 22",
                "zh": "1月22日"
            },
            "hash": "0b73908eee2c2db3",
            "authors": [
                "Zhenran Xu",
                "Longyue Wang",
                "Jifang Wang",
                "Zhouyi Li",
                "Senbao Shi",
                "Xue Yang",
                "Yiyu Wang",
                "Baotian Hu",
                "Jun Yu",
                "Min Zhang"
            ],
            "affiliations": [
                "Harbin Institute of Technology (Shenzhen)",
                "Tsinghua University"
            ],
            "pdf_title_img": "assets/pdf/title_img/2501.12909.jpg",
            "data": {
                "categories": [
                    "#multimodal",
                    "#story_generation",
                    "#3d",
                    "#open_source",
                    "#agents",
                    "#hallucinations"
                ],
                "emoji": "🎬",
                "ru": {
                    "title": "Виртуальная киностудия: ИИ-агенты создают фильмы от идеи до готового продукта",
                    "desc": "FilmAgent - это новая система на основе языковых моделей для автоматизации создания фильмов в виртуальном 3D-пространстве. Она симулирует работу съемочной группы, включая режиссеров, сценаристов, актеров и операторов. Система охватывает ключевые этапы производства фильма: разработку идеи, написание сценария и выбор планов съемки. FilmAgent использует многоагентное взаимодействие для итеративной доработки результатов, что позволяет достичь лучшего качества по сравнению с одноагентными подходами."
                },
                "en": {
                    "title": "Revolutionizing Film Production with Multi-Agent Collaboration",
                    "desc": "This paper presents FilmAgent, a collaborative framework that utilizes large language models (LLMs) to automate the film production process in 3D virtual environments. FilmAgent employs multiple agents that simulate various roles in filmmaking, such as directors and screenwriters, to collaboratively develop ideas, write scripts, and plan cinematography. The framework enhances decision-making through iterative feedback, which helps to refine scripts and minimize errors. Evaluation results indicate that FilmAgent significantly outperforms traditional methods, demonstrating the effectiveness of multi-agent systems in creative tasks like filmmaking."
                },
                "zh": {
                    "title": "多智能体协作，革新虚拟电影制作",
                    "desc": "这篇论文介绍了一种名为FilmAgent的新型多智能体协作框架，旨在实现虚拟电影制作的自动化。FilmAgent利用大型语言模型（LLM）模拟导演、编剧、演员和摄影师等不同角色，涵盖电影制作的关键阶段，包括创意开发、剧本写作和摄影。通过智能体之间的迭代反馈和修订，FilmAgent能够验证中间剧本并减少错误。评估结果显示，FilmAgent在多个方面的表现优于所有基线模型，证明了多智能体协作在电影制作中的可行性。"
                }
            }
        },
        {
            "id": "https://huggingface.co/papers/2501.12948",
            "title": "DeepSeek-R1: Incentivizing Reasoning Capability in LLMs via Reinforcement Learning",
            "url": "https://huggingface.co/papers/2501.12948",
            "abstract": "We introduce our first-generation reasoning models, DeepSeek-R1-Zero and DeepSeek-R1. DeepSeek-R1-Zero, a model trained via large-scale reinforcement learning (RL) without supervised fine-tuning (SFT) as a preliminary step, demonstrates remarkable reasoning capabilities. Through RL, DeepSeek-R1-Zero naturally emerges with numerous powerful and intriguing reasoning behaviors. However, it encounters challenges such as poor readability, and language mixing. To address these issues and further enhance reasoning performance, we introduce DeepSeek-R1, which incorporates multi-stage training and cold-start data before RL. DeepSeek-R1 achieves performance comparable to OpenAI-o1-1217 on reasoning tasks. To support the research community, we open-source DeepSeek-R1-Zero, DeepSeek-R1, and six dense models (1.5B, 7B, 8B, 14B, 32B, 70B) distilled from DeepSeek-R1 based on Qwen and Llama.",
            "score": 14,
            "issue_id": 1819,
            "pub_date": "2025-01-22",
            "pub_date_card": {
                "ru": "22 января",
                "en": "January 22",
                "zh": "1月22日"
            },
            "hash": "cae642107ec57790",
            "authors": [
                "DeepSeek-AI",
                "Daya Guo",
                "Dejian Yang",
                "Haowei Zhang",
                "Junxiao Song",
                "Ruoyu Zhang",
                "Runxin Xu",
                "Qihao Zhu",
                "Shirong Ma",
                "Peiyi Wang",
                "Xiao Bi",
                "Xiaokang Zhang",
                "Xingkai Yu",
                "Yu Wu",
                "Z. F. Wu",
                "Zhibin Gou",
                "Zhihong Shao",
                "Zhuoshu Li",
                "Ziyi Gao",
                "Aixin Liu",
                "Bing Xue",
                "Bingxuan Wang",
                "Bochao Wu",
                "Bei Feng",
                "Chengda Lu",
                "Chenggang Zhao",
                "Chengqi Deng",
                "Chenyu Zhang",
                "Chong Ruan",
                "Damai Dai",
                "Deli Chen",
                "Dongjie Ji",
                "Erhang Li",
                "Fangyun Lin",
                "Fucong Dai",
                "Fuli Luo",
                "Guangbo Hao",
                "Guanting Chen",
                "Guowei Li",
                "H. Zhang",
                "Han Bao",
                "Hanwei Xu",
                "Haocheng Wang",
                "Honghui Ding",
                "Huajian Xin",
                "Huazuo Gao",
                "Hui Qu",
                "Hui Li",
                "Jianzhong Guo",
                "Jiashi Li",
                "Jiawei Wang",
                "Jingchang Chen",
                "Jingyang Yuan",
                "Junjie Qiu",
                "Junlong Li",
                "J. L. Cai",
                "Jiaqi Ni",
                "Jian Liang",
                "Jin Chen",
                "Kai Dong",
                "Kai Hu",
                "Kaige Gao",
                "Kang Guan",
                "Kexin Huang",
                "Kuai Yu",
                "Lean Wang",
                "Lecong Zhang",
                "Liang Zhao",
                "Litong Wang",
                "Liyue Zhang",
                "Lei Xu",
                "Leyi Xia",
                "Mingchuan Zhang",
                "Minghua Zhang",
                "Minghui Tang",
                "Meng Li",
                "Miaojun Wang",
                "Mingming Li",
                "Ning Tian",
                "Panpan Huang",
                "Peng Zhang",
                "Qiancheng Wang",
                "Qinyu Chen",
                "Qiushi Du",
                "Ruiqi Ge",
                "Ruisong Zhang",
                "Ruizhe Pan",
                "Runji Wang",
                "R. J. Chen",
                "R. L. Jin",
                "Ruyi Chen",
                "Shanghao Lu",
                "Shangyan Zhou",
                "Shanhuang Chen",
                "Shengfeng Ye",
                "Shiyu Wang",
                "Shuiping Yu",
                "Shunfeng Zhou",
                "Shuting Pan",
                "S. S. Li",
                "Shuang Zhou",
                "Shaoqing Wu",
                "Shengfeng Ye",
                "Tao Yun",
                "Tian Pei",
                "Tianyu Sun",
                "T. Wang",
                "Wangding Zeng",
                "Wanjia Zhao",
                "Wen Liu",
                "Wenfeng Liang",
                "Wenjun Gao",
                "Wenqin Yu",
                "Wentao Zhang",
                "W. L. Xiao",
                "Wei An",
                "Xiaodong Liu",
                "Xiaohan Wang",
                "Xiaokang Chen",
                "Xiaotao Nie",
                "Xin Cheng",
                "Xin Liu",
                "Xin Xie",
                "Xingchao Liu",
                "Xinyu Yang",
                "Xinyuan Li",
                "Xuecheng Su",
                "Xuheng Lin",
                "X. Q. Li",
                "Xiangyue Jin",
                "Xiaojin Shen",
                "Xiaosha Chen",
                "Xiaowen Sun",
                "Xiaoxiang Wang",
                "Xinnan Song",
                "Xinyi Zhou",
                "Xianzu Wang",
                "Xinxia Shan",
                "Y. K. Li",
                "Y. Q. Wang",
                "Y. X. Wei",
                "Yang Zhang",
                "Yanhong Xu",
                "Yao Li",
                "Yao Zhao",
                "Yaofeng Sun",
                "Yaohui Wang",
                "Yi Yu",
                "Yichao Zhang",
                "Yifan Shi",
                "Yiliang Xiong",
                "Ying He",
                "Yishi Piao",
                "Yisong Wang",
                "Yixuan Tan",
                "Yiyang Ma",
                "Yiyuan Liu",
                "Yongqiang Guo",
                "Yuan Ou",
                "Yuduan Wang",
                "Yue Gong",
                "Yuheng Zou",
                "Yujia He",
                "Yunfan Xiong",
                "Yuxiang Luo",
                "Yuxiang You",
                "Yuxuan Liu",
                "Yuyang Zhou",
                "Y. X. Zhu",
                "Yanhong Xu",
                "Yanping Huang",
                "Yaohui Li",
                "Yi Zheng",
                "Yuchen Zhu",
                "Yunxian Ma",
                "Ying Tang",
                "Yukun Zha",
                "Yuting Yan",
                "Z. Z. Ren",
                "Zehui Ren",
                "Zhangli Sha",
                "Zhe Fu",
                "Zhean Xu",
                "Zhenda Xie",
                "Zhengyan Zhang",
                "Zhewen Hao",
                "Zhicheng Ma",
                "Zhigang Yan",
                "Zhiyu Wu",
                "Zihui Gu",
                "Zijia Zhu",
                "Zijun Liu",
                "Zilin Li",
                "Ziwei Xie",
                "Ziyang Song",
                "Zizheng Pan",
                "Zhen Huang",
                "Zhipeng Xu",
                "Zhongyu Zhang",
                "Zhen Zhang"
            ],
            "affiliations": [
                "DeepSeek-AI"
            ],
            "pdf_title_img": "assets/pdf/title_img/2501.12948.jpg",
            "data": {
                "categories": [
                    "#training",
                    "#rl",
                    "#reasoning",
                    "#open_source",
                    "#dataset"
                ],
                "emoji": "🧠",
                "ru": {
                    "title": "Новое поколение моделей рассуждения: обучение с подкреплением открывает путь к улучшенному ИИ",
                    "desc": "Исследователи представили модели рассуждений DeepSeek-R1-Zero и DeepSeek-R1. DeepSeek-R1-Zero обучена с помощью масштабного обучения с подкреплением без предварительной тонкой настройки и демонстрирует впечатляющие способности к рассуждению. DeepSeek-R1 использует многоэтапное обучение для улучшения производительности и решения проблем читаемости. Модели показывают результаты, сравнимые с OpenAI-o1-1217 на задачах рассуждения, и исследователи открыли исходный код моделей для научного сообщества."
                },
                "en": {
                    "title": "Revolutionizing Reasoning with DeepSeek Models",
                    "desc": "This paper presents two reasoning models, DeepSeek-R1-Zero and DeepSeek-R1, developed for enhanced reasoning capabilities. DeepSeek-R1-Zero is trained using large-scale reinforcement learning without any supervised fine-tuning, showcasing impressive reasoning behaviors but facing issues like readability and language mixing. To improve these aspects, DeepSeek-R1 employs a multi-stage training approach and utilizes cold-start data prior to reinforcement learning. The performance of DeepSeek-R1 is on par with existing models like OpenAI-o1-1217, and both models, along with several distilled versions, are made available to the research community."
                },
                "zh": {
                    "title": "深度推理模型的创新与挑战",
                    "desc": "我们介绍了第一代推理模型DeepSeek-R1-Zero和DeepSeek-R1。DeepSeek-R1-Zero是通过大规模强化学习（RL）训练的模型，没有经过监督微调（SFT），展现出卓越的推理能力。尽管如此，它在可读性和语言混合方面存在一些挑战。为了解决这些问题并进一步提升推理性能，我们引入了DeepSeek-R1，该模型在进行RL之前采用了多阶段训练和冷启动数据。"
                }
            }
        },
        {
            "id": "https://huggingface.co/papers/2501.13074",
            "title": "Autonomy-of-Experts Models",
            "url": "https://huggingface.co/papers/2501.13074",
            "abstract": "Mixture-of-Experts (MoE) models mostly use a router to assign tokens to specific expert modules, activating only partial parameters and often outperforming dense models. We argue that the separation between the router's decision-making and the experts' execution is a critical yet overlooked issue, leading to suboptimal expert selection and ineffective learning. To address this, we propose Autonomy-of-Experts (AoE), a novel MoE paradigm in which experts autonomously select themselves to process inputs. AoE is based on the insight that an expert is aware of its own capacity to effectively process a token, an awareness reflected in the scale of its internal activations. In AoE, routers are removed; instead, experts pre-compute internal activations for inputs and are ranked based on their activation norms. Only the top-ranking experts proceed with the forward pass, while the others abort. The overhead of pre-computing activations is reduced through a low-rank weight factorization. This self-evaluating-then-partner-comparing approach ensures improved expert selection and effective learning. We pre-train language models having 700M up to 4B parameters, demonstrating that AoE outperforms traditional MoE models with comparable efficiency.",
            "score": 10,
            "issue_id": 1819,
            "pub_date": "2025-01-22",
            "pub_date_card": {
                "ru": "22 января",
                "en": "January 22",
                "zh": "1月22日"
            },
            "hash": "5cf511144ad54091",
            "authors": [
                "Ang Lv",
                "Ruobing Xie",
                "Yining Qian",
                "Songhao Wu",
                "Xingwu Sun",
                "Zhanhui Kang",
                "Di Wang",
                "Rui Yan"
            ],
            "affiliations": [
                "Machine Learning Platform Department, Tencent",
                "Renmin University of China",
                "Southeast University, China"
            ],
            "pdf_title_img": "assets/pdf/title_img/2501.13074.jpg",
            "data": {
                "categories": [
                    "#architecture",
                    "#training",
                    "#optimization"
                ],
                "emoji": "🧠",
                "ru": {
                    "title": "Самоотбор экспертов: новый подход к эффективным нейросетям",
                    "desc": "Статья представляет новый подход к моделям Mixture-of-Experts (MoE) под названием Autonomy-of-Experts (AoE). В AoE эксперты самостоятельно выбирают себя для обработки входных данных, основываясь на внутренних активациях, что устраняет необходимость в отдельном маршрутизаторе. Этот метод обеспечивает более эффективный выбор экспертов и улучшенное обучение. Эксперименты с языковыми моделями от 700 млн до 4 млрд параметров показывают, что AoE превосходит традиционные модели MoE при сопоставимой эффективности."
                },
                "en": {
                    "title": "Empowering Experts: Self-Selection for Enhanced Learning in MoE Models",
                    "desc": "This paper introduces a new approach called Autonomy-of-Experts (AoE) for Mixture-of-Experts (MoE) models, which traditionally rely on a router to assign tasks to expert modules. The authors argue that the separation of decision-making and execution in MoE leads to poor expert selection and learning inefficiencies. In AoE, experts autonomously evaluate their ability to process inputs based on their internal activations, eliminating the need for a router. By allowing only the most capable experts to participate in processing, AoE enhances expert selection and improves overall model performance while maintaining efficiency."
                },
                "zh": {
                    "title": "自主选择，提升专家学习效率",
                    "desc": "混合专家模型（MoE）通常使用路由器将输入分配给特定的专家模块，仅激活部分参数，通常比密集模型表现更好。我们认为，路由器的决策与专家的执行之间的分离是一个关键但被忽视的问题，导致专家选择不佳和学习效果不理想。为了解决这个问题，我们提出了自主专家（AoE），一种新颖的MoE范式，其中专家自主选择自己处理输入。AoE基于专家能够意识到自身处理能力的洞察，通过内部激活的规模反映出来，从而确保了更好的专家选择和有效学习。"
                }
            }
        },
        {
            "id": "https://huggingface.co/papers/2501.12599",
            "title": "Kimi k1.5: Scaling Reinforcement Learning with LLMs",
            "url": "https://huggingface.co/papers/2501.12599",
            "abstract": "Language model pretraining with next token prediction has proved effective for scaling compute but is limited to the amount of available training data. Scaling reinforcement learning (RL) unlocks a new axis for the continued improvement of artificial intelligence, with the promise that large language models (LLMs) can scale their training data by learning to explore with rewards. However, prior published work has not produced competitive results. In light of this, we report on the training practice of Kimi k1.5, our latest multi-modal LLM trained with RL, including its RL training techniques, multi-modal data recipes, and infrastructure optimization. Long context scaling and improved policy optimization methods are key ingredients of our approach, which establishes a simplistic, effective RL framework without relying on more complex techniques such as Monte Carlo tree search, value functions, and process reward models. Notably, our system achieves state-of-the-art reasoning performance across multiple benchmarks and modalities -- e.g., 77.5 on AIME, 96.2 on MATH 500, 94-th percentile on Codeforces, 74.9 on MathVista -- matching OpenAI's o1. Moreover, we present effective long2short methods that use long-CoT techniques to improve short-CoT models, yielding state-of-the-art short-CoT reasoning results -- e.g., 60.8 on AIME, 94.6 on MATH500, 47.3 on LiveCodeBench -- outperforming existing short-CoT models such as GPT-4o and Claude Sonnet 3.5 by a large margin (up to +550%).",
            "score": 7,
            "issue_id": 1819,
            "pub_date": "2025-01-22",
            "pub_date_card": {
                "ru": "22 января",
                "en": "January 22",
                "zh": "1月22日"
            },
            "hash": "427fb9e286a6e3a8",
            "authors": [
                "Kimi Team",
                "Angang Du",
                "Bofei Gao",
                "Bowei Xing",
                "Changjiu Jiang",
                "Cheng Chen",
                "Cheng Li",
                "Chenjun Xiao",
                "Chenzhuang Du",
                "Chonghua Liao",
                "Chuning Tang",
                "Congcong Wang",
                "Dehao Zhang",
                "Enming Yuan",
                "Enzhe Lu",
                "Fengxiang Tang",
                "Flood Sung",
                "Guangda Wei",
                "Guokun Lai",
                "Haiqing Guo",
                "Han Zhu",
                "Hao Ding",
                "Hao Hu",
                "Hao Yang",
                "Hao Zhang",
                "Haotian Yao",
                "Haotian Zhao",
                "Haoyu Lu",
                "Haoze Li",
                "Haozhen Yu",
                "Hongcheng Gao",
                "Huabin Zheng",
                "Huan Yuan",
                "Jia Chen",
                "Jianhang Guo",
                "Jianlin Su",
                "Jianzhou Wang",
                "Jie Zhao",
                "Jin Zhang",
                "Jingyuan Liu",
                "Junjie Yan",
                "Junyan Wu",
                "Lidong Shi",
                "Ling Ye",
                "Longhui Yu",
                "Mengnan Dong",
                "Neo Zhang",
                "Ningchen Ma",
                "Qiwei Pan",
                "Qucheng Gong",
                "Shaowei Liu",
                "Shengling Ma",
                "Shupeng Wei",
                "Sihan Cao",
                "Siying Huang",
                "Tao Jiang",
                "Weihao Gao",
                "Weimin Xiong",
                "Weiran He",
                "Weixiao Huang",
                "Wenhao Wu",
                "Wenyang He",
                "Xianghui Wei",
                "Xianqing Jia",
                "Xingzhe Wu",
                "Xinran Xu",
                "Xinxing Zu",
                "Xinyu Zhou",
                "Xuehai Pan",
                "Y. Charles",
                "Yang Li",
                "Yangyang Hu",
                "Yangyang Liu",
                "Yanru Chen",
                "Yejie Wang",
                "Yibo Liu",
                "Yidao Qin",
                "Yifeng Liu",
                "Ying Yang",
                "Yiping Bao",
                "Yulun Du",
                "Yuxin Wu",
                "Yuzhi Wang",
                "Zaida Zhou",
                "Zhaoji Wang",
                "Zhaowei Li",
                "Zhen Zhu",
                "Zheng Zhang",
                "Zhexu Wang",
                "Zhilin Yang",
                "Zhiqi Huang",
                "Zihao Huang",
                "Ziyao Xu",
                "Zonghan Yang"
            ],
            "affiliations": [],
            "pdf_title_img": "assets/pdf/title_img/2501.12599.jpg",
            "data": {
                "categories": [
                    "#multimodal",
                    "#optimization",
                    "#training",
                    "#benchmark",
                    "#rl",
                    "#reasoning",
                    "#long_context",
                    "#math"
                ],
                "emoji": "🤖",
                "ru": {
                    "title": "Эффективное обучение с подкреплением для многомодальных языковых моделей",
                    "desc": "Статья описывает обучение многомодальной языковой модели Kimi k1.5 с использованием обучения с подкреплением (RL). Авторы представляют упрощенный эффективный подход к RL без использования сложных техник, таких как поиск по дереву Монте-Карло. Ключевыми элементами являются масштабирование на длинный контекст и улучшенные методы оптимизации политики. Модель достигает передовых результатов по рассуждению на различных бенчмарках и модальностях, сравнимых с OpenAI's o1."
                },
                "en": {
                    "title": "Unlocking AI Potential with Reinforcement Learning in LLMs",
                    "desc": "This paper discusses the development of Kimi k1.5, a multi-modal large language model (LLM) that utilizes reinforcement learning (RL) to enhance its training data exploration through reward mechanisms. The authors highlight their innovative RL training techniques and infrastructure optimizations that allow for effective long context scaling and policy optimization without complex methods like Monte Carlo tree search. Kimi k1.5 achieves state-of-the-art performance on various reasoning benchmarks, demonstrating its competitive edge over existing models. Additionally, the paper introduces long2short methods that leverage long-context techniques to significantly improve short-context reasoning results, outperforming other models by a substantial margin."
                },
                "zh": {
                    "title": "强化学习助力大语言模型的突破",
                    "desc": "本文介绍了Kimi k1.5的训练实践，这是一种最新的多模态大语言模型，采用强化学习（RL）进行训练。我们的方法通过长上下文扩展和改进的策略优化，建立了一个简单有效的RL框架，而不依赖于复杂的技术，如蒙特卡洛树搜索和价值函数。Kimi k1.5在多个基准测试中表现出色，达到了最先进的推理性能，超越了现有的短链推理模型。我们的研究表明，利用长链技术可以显著提升短链模型的表现，取得了显著的进步。"
                }
            }
        },
        {
            "id": "https://huggingface.co/papers/2501.12570",
            "title": "O1-Pruner: Length-Harmonizing Fine-Tuning for O1-Like Reasoning Pruning",
            "url": "https://huggingface.co/papers/2501.12570",
            "abstract": "Recently, long-thought reasoning LLMs, such as OpenAI's O1, adopt extended reasoning processes similar to how humans ponder over complex problems. This reasoning paradigm significantly enhances the model's problem-solving abilities and has achieved promising results. However, long-thought reasoning process leads to a substantial increase in inference time. A pressing challenge is reducing the inference overhead of long-thought LLMs while ensuring accuracy. In this paper, we experimentally demonstrate that long-thought reasoning models struggle to effectively allocate token budgets based on problem difficulty and reasoning redundancies. To address this, we propose Length-Harmonizing Fine-Tuning (O1-Pruner), aiming at minimizing reasoning overhead while maintaining accuracy. This effective fine-tuning method first estimates the LLM's baseline performance through pre-sampling and then uses RL-style fine-tuning to encourage the model to generate shorter reasoning processes under accuracy constraints. This allows the model to achieve efficient reasoning with lower redundancy while maintaining accuracy. Experiments on various mathematical reasoning benchmarks show that O1-Pruner not only significantly reduces inference overhead but also achieves higher accuracy, providing a novel and promising solution to this challenge. Our code is coming soon at https://github.com/StarDewXXX/O1-Pruner",
            "score": 3,
            "issue_id": 1818,
            "pub_date": "2025-01-22",
            "pub_date_card": {
                "ru": "22 января",
                "en": "January 22",
                "zh": "1月22日"
            },
            "hash": "2cb7e92315bbf3e4",
            "authors": [
                "Haotian Luo",
                "Li Shen",
                "Haiying He",
                "Yibo Wang",
                "Shiwei Liu",
                "Wei Li",
                "Naiqiang Tan",
                "Xiaochun Cao",
                "Dacheng Tao"
            ],
            "affiliations": [
                "China Agriculture University",
                "Didichuxing Co. Ltd",
                "Nanyang Technological University",
                "Shenzhen Campus of Sun Yat-sen University",
                "Tsinghua University",
                "University of Oxford"
            ],
            "pdf_title_img": "assets/pdf/title_img/2501.12570.jpg",
            "data": {
                "categories": [
                    "#reasoning",
                    "#math",
                    "#optimization",
                    "#training",
                    "#benchmark",
                    "#inference"
                ],
                "emoji": "⚡",
                "ru": {
                    "title": "Ускорение мышления ИИ без потери качества",
                    "desc": "Статья описывает метод оптимизации работы языковых моделей с длительным рассуждением, таких как OpenAI's O1. Авторы предлагают технику под названием Length-Harmonizing Fine-Tuning (O1-Pruner), которая сокращает время вывода, сохраняя точность модели. Метод использует предварительную выборку для оценки базовой производительности модели, а затем применяет обучение с подкреплением для генерации более коротких процессов рассуждения. Эксперименты на различных бенчмарках математического рассуждения показали, что O1-Pruner значительно снижает вычислительные затраты при сохранении или даже повышении точности."
                },
                "en": {
                    "title": "Optimizing Long-Thought Reasoning for Efficient Problem Solving",
                    "desc": "This paper discusses a new approach to improve long-thought reasoning in large language models (LLMs) like OpenAI's O1. The authors identify that while these models enhance problem-solving, they also increase inference time due to inefficient token usage. To tackle this, they introduce Length-Harmonizing Fine-Tuning (O1-Pruner), which optimizes the reasoning process by balancing accuracy and efficiency. Their experiments show that O1-Pruner reduces inference overhead and improves accuracy on mathematical reasoning tasks, making it a valuable advancement in LLM performance."
                },
                "zh": {
                    "title": "优化推理效率，提升准确性！",
                    "desc": "最近，长思考推理的语言模型（LLM）如OpenAI的O1，采用了类似人类思考复杂问题的扩展推理过程。这种推理范式显著增强了模型的解决问题能力，并取得了良好的效果。然而，长思考推理过程导致推理时间大幅增加。为了解决这个问题，我们提出了长度协调微调（O1-Pruner），旨在在保持准确性的同时，减少长思考LLM的推理开销。"
                }
            }
        },
        {
            "id": "https://huggingface.co/papers/2501.12895",
            "title": "Test-Time Preference Optimization: On-the-Fly Alignment via Iterative Textual Feedback",
            "url": "https://huggingface.co/papers/2501.12895",
            "abstract": "Large language models (LLMs) demonstrate impressive performance but lack the flexibility to adapt to human preferences quickly without retraining. In this work, we introduce Test-time Preference Optimization (TPO), a framework that aligns LLM outputs with human preferences during inference, removing the need to update model parameters. Rather than relying on purely numerical rewards, TPO translates reward signals into textual critiques and uses them as textual rewards to iteratively refine its response. Evaluations on benchmarks covering instruction following, preference alignment, safety, and mathematics reveal that TPO progressively improves alignment with human preferences. Notably, after only a few TPO steps, the initially unaligned Llama-3.1-70B-SFT model can surpass the aligned counterpart, Llama-3.1-70B-Instruct. Furthermore, TPO scales efficiently with both the search width and depth during inference. Through case studies, we illustrate how TPO exploits the innate capacity of LLM to interpret and act upon reward signals. Our findings establish TPO as a practical, lightweight alternative for test-time preference optimization, achieving alignment on the fly. Our code is publicly available at https://github.com/yafuly/TPO.",
            "score": 2,
            "issue_id": 1820,
            "pub_date": "2025-01-22",
            "pub_date_card": {
                "ru": "22 января",
                "en": "January 22",
                "zh": "1月22日"
            },
            "hash": "ebde6f173ad4f6f9",
            "authors": [
                "Yafu Li",
                "Xuyang Hu",
                "Xiaoye Qu",
                "Linjie Li",
                "Yu Cheng"
            ],
            "affiliations": [
                "Shanghai AI Laboratory",
                "The Chinese University of Hong Kong"
            ],
            "pdf_title_img": "assets/pdf/title_img/2501.12895.jpg",
            "data": {
                "categories": [
                    "#rlhf",
                    "#training",
                    "#alignment",
                    "#inference"
                ],
                "emoji": "🎯",
                "ru": {
                    "title": "Адаптация языковых моделей на лету: оптимизация без переобучения",
                    "desc": "Авторы представляют новый метод под названием Test-time Preference Optimization (TPO), который позволяет адаптировать выходные данные больших языковых моделей (LLM) к предпочтениям человека во время вывода, без необходимости обновления параметров модели. TPO преобразует сигналы вознаграждения в текстовые критические замечания и использует их в качестве текстовых наград для итеративного улучшения ответа. Эксперименты показывают, что TPO постепенно улучшает соответствие предпочтениям человека, причем даже изначально не настроенная модель Llama-3.1-70B-SFT может превзойти настроенный аналог после нескольких шагов TPO. Метод демонстрирует эффективность и масштабируемость, представляя собой практичную альтернативу для оптимизации предпочтений во время вывода."
                },
                "en": {
                    "title": "Aligning Language Models with Human Preferences on the Fly",
                    "desc": "This paper presents Test-time Preference Optimization (TPO), a novel framework designed to enhance the alignment of large language model (LLM) outputs with human preferences during inference without the need for retraining. TPO utilizes textual critiques as a form of reward signals, allowing the model to iteratively refine its responses based on human feedback. The results show that TPO can significantly improve the performance of the Llama-3.1-70B-SFT model, enabling it to exceed the performance of the pre-aligned Llama-3.1-70B-Instruct model after just a few optimization steps. Additionally, TPO demonstrates efficient scaling with search width and depth, making it a practical solution for real-time preference alignment in LLMs."
                },
                "zh": {
                    "title": "测试时偏好优化：让模型更懂你",
                    "desc": "大型语言模型（LLMs）在性能上表现出色，但在不重新训练的情况下，难以快速适应人类偏好。我们提出了一种名为测试时偏好优化（TPO）的框架，它在推理过程中将LLM的输出与人类偏好对齐，避免了更新模型参数的需求。TPO通过将奖励信号转化为文本批评，并将其作为文本奖励，逐步优化模型的响应。评估结果显示，经过少量TPO步骤后，最初未对齐的Llama-3.1-70B-SFT模型能够超越已对齐的Llama-3.1-70B-Instruct模型。"
                }
            }
        },
        {
            "id": "https://huggingface.co/papers/2501.11067",
            "title": "IntellAgent: A Multi-Agent Framework for Evaluating Conversational AI Systems",
            "url": "https://huggingface.co/papers/2501.11067",
            "abstract": "Large Language Models (LLMs) are transforming artificial intelligence, evolving into task-oriented systems capable of autonomous planning and execution. One of the primary applications of LLMs is conversational AI systems, which must navigate multi-turn dialogues, integrate domain-specific APIs, and adhere to strict policy constraints. However, evaluating these agents remains a significant challenge, as traditional methods fail to capture the complexity and variability of real-world interactions. We introduce IntellAgent, a scalable, open-source multi-agent framework designed to evaluate conversational AI systems comprehensively. IntellAgent automates the creation of diverse, synthetic benchmarks by combining policy-driven graph modeling, realistic event generation, and interactive user-agent simulations. This innovative approach provides fine-grained diagnostics, addressing the limitations of static and manually curated benchmarks with coarse-grained metrics. IntellAgent represents a paradigm shift in evaluating conversational AI. By simulating realistic, multi-policy scenarios across varying levels of complexity, IntellAgent captures the nuanced interplay of agent capabilities and policy constraints. Unlike traditional methods, it employs a graph-based policy model to represent relationships, likelihoods, and complexities of policy interactions, enabling highly detailed diagnostics. IntellAgent also identifies critical performance gaps, offering actionable insights for targeted optimization. Its modular, open-source design supports seamless integration of new domains, policies, and APIs, fostering reproducibility and community collaboration. Our findings demonstrate that IntellAgent serves as an effective framework for advancing conversational AI by addressing challenges in bridging research and deployment. The framework is available at https://github.com/plurai-ai/intellagent",
            "score": 1,
            "issue_id": 1820,
            "pub_date": "2025-01-19",
            "pub_date_card": {
                "ru": "19 января",
                "en": "January 19",
                "zh": "1月19日"
            },
            "hash": "019b0714b4212a7f",
            "authors": [
                "Elad Levi",
                "Ilan Kadar"
            ],
            "affiliations": [
                "Plurai"
            ],
            "pdf_title_img": "assets/pdf/title_img/2501.11067.jpg",
            "data": {
                "categories": [
                    "#multimodal",
                    "#agents",
                    "#open_source",
                    "#games",
                    "#optimization",
                    "#graphs",
                    "#benchmark"
                ],
                "emoji": "🤖",
                "ru": {
                    "title": "IntellAgent: революция в оценке разговорного ИИ",
                    "desc": "IntellAgent - это масштабируемая система с открытым исходным кодом для комплексной оценки разговорных ИИ-систем. Она автоматизирует создание разнообразных синтетических тестов, объединяя моделирование графов на основе политик, генерацию реалистичных событий и интерактивное моделирование взаимодействия пользователя и агента. IntellAgent использует графовую модель политик для представления отношений, вероятностей и сложностей взаимодействия политик, что позволяет проводить детальную диагностику. Система выявляет критические пробелы в производительности и предлагает полезные идеи для целенаправленной оптимизации."
                },
                "en": {
                    "title": "Revolutionizing Evaluation of Conversational AI with IntellAgent",
                    "desc": "This paper presents IntellAgent, a new framework for evaluating conversational AI systems, particularly those powered by Large Language Models (LLMs). It addresses the challenges of traditional evaluation methods by automating the creation of diverse benchmarks that simulate real-world interactions. IntellAgent uses a graph-based policy model to analyze the complex relationships and interactions between different policies, providing detailed diagnostics and identifying performance gaps. The open-source nature of IntellAgent encourages collaboration and integration of new features, making it a valuable tool for improving conversational AI systems."
                },
                "zh": {
                    "title": "IntellAgent：对话式AI评估的新范式",
                    "desc": "大型语言模型（LLMs）正在改变人工智能，成为能够自主规划和执行任务的系统。它们在对话式人工智能系统中的应用尤为重要，这些系统需要处理多轮对话、整合特定领域的API，并遵循严格的政策约束。然而，评估这些智能体仍然是一个重大挑战，因为传统方法无法捕捉现实世界交互的复杂性和多样性。我们提出了IntellAgent，这是一个可扩展的开源多智能体框架，旨在全面评估对话式人工智能系统。"
                }
            }
        },
        {
            "id": "https://huggingface.co/papers/2501.13106",
            "title": "VideoLLaMA 3: Frontier Multimodal Foundation Models for Image and Video Understanding",
            "url": "https://huggingface.co/papers/2501.13106",
            "abstract": "In this paper, we propose VideoLLaMA3, a more advanced multimodal foundation model for image and video understanding. The core design philosophy of VideoLLaMA3 is vision-centric. The meaning of \"vision-centric\" is two-fold: the vision-centric training paradigm and vision-centric framework design. The key insight of our vision-centric training paradigm is that high-quality image-text data is crucial for both image and video understanding. Instead of preparing massive video-text datasets, we focus on constructing large-scale and high-quality image-text datasets. VideoLLaMA3 has four training stages: 1) vision-centric alignment stage, which warms up the vision encoder and projector; 2) vision-language pretraining stage, which jointly tunes the vision encoder, projector, and LLM with large-scale image-text data covering multiple types (including scene images, documents, charts) as well as text-only data. 3) multi-task fine-tuning stage, which incorporates image-text SFT data for downstream tasks and video-text data to establish a foundation for video understanding. 4) video-centric fine-tuning, which further improves the model's capability in video understanding. As for the framework design, to better capture fine-grained details in images, the pretrained vision encoder is adapted to encode images of varying sizes into vision tokens with corresponding numbers, rather than a fixed number of tokens. For video inputs, we reduce the number of vision tokens according to their similarity so that the representation of videos will be more precise and compact. Benefit from vision-centric designs, VideoLLaMA3 achieves compelling performances in both image and video understanding benchmarks.",
            "score": 0,
            "issue_id": 1820,
            "pub_date": "2025-01-22",
            "pub_date_card": {
                "ru": "22 января",
                "en": "January 22",
                "zh": "1月22日"
            },
            "hash": "d22ea6b804e73c9a",
            "authors": [
                "Boqiang Zhang",
                "Kehan Li",
                "Zesen Cheng",
                "Zhiqiang Hu",
                "Yuqian Yuan",
                "Guanzheng Chen",
                "Sicong Leng",
                "Yuming Jiang",
                "Hang Zhang",
                "Xin Li",
                "Peng Jin",
                "Wenqi Zhang",
                "Fan Wang",
                "Lidong Bing",
                "Deli Zhao"
            ],
            "affiliations": [
                "DAMO Academy, Alibaba Group"
            ],
            "pdf_title_img": "assets/pdf/title_img/2501.13106.jpg",
            "data": {
                "categories": [
                    "#multimodal",
                    "#cv",
                    "#agi",
                    "#games",
                    "#video",
                    "#benchmark"
                ],
                "emoji": "🎥",
                "ru": {
                    "title": "VideoLLaMA3: Зрение как ключ к пониманию изображений и видео",
                    "desc": "VideoLLaMA3 - это усовершенствованная мультимодальная модель для понимания изображений и видео. Ключевая особенность модели - ориентированность на зрение, что проявляется как в парадигме обучения, так и в архитектуре. Модель обучается в четыре этапа, уделяя особое внимание высококачественным данным изображение-текст. VideoLLaMA3 использует адаптивное кодирование изображений разного размера и сжатие представления видео для более точного анализа."
                },
                "en": {
                    "title": "Empowering Image and Video Understanding with Vision-Centric Design",
                    "desc": "VideoLLaMA3 is a cutting-edge multimodal foundation model designed for understanding images and videos. It emphasizes a vision-centric approach, which involves training with high-quality image-text datasets instead of large video-text datasets. The model undergoes four training stages, including alignment, pretraining, fine-tuning, and video-centric fine-tuning, to enhance its capabilities in both image and video comprehension. By adapting the vision encoder to handle varying image sizes and optimizing video token representation, VideoLLaMA3 demonstrates impressive performance across various benchmarks."
                },
                "zh": {
                    "title": "以视觉为中心的多模态理解模型",
                    "desc": "本文提出了VideoLLaMA3，这是一个更先进的多模态基础模型，用于图像和视频理解。其核心设计理念是以视觉为中心，强调高质量的图像-文本数据对图像和视频理解的重要性。VideoLLaMA3的训练分为四个阶段，包括视觉对齐、视觉-语言预训练、多任务微调和视频微调，以提升模型在视频理解方面的能力。通过适应性地编码不同大小的图像和优化视频输入的表示，VideoLLaMA3在图像和视频理解基准测试中表现出色。"
                }
            }
        }
    ],
    "link_prev": "2025-01-22.html",
    "link_next": "2025-01-24.html",
    "link_month": "2025-01.html",
    "short_date_prev": {
        "ru": "22.01",
        "en": "01/22",
        "zh": "1月22日"
    },
    "short_date_next": {
        "ru": "24.01",
        "en": "01/24",
        "zh": "1月24日"
    },
    "categories": {
        "#dataset": 1,
        "#data": 0,
        "#benchmark": 4,
        "#agents": 2,
        "#cv": 1,
        "#rl": 2,
        "#rlhf": 1,
        "#rag": 0,
        "#plp": 0,
        "#inference": 2,
        "#3d": 1,
        "#audio": 0,
        "#video": 1,
        "#multimodal": 4,
        "#math": 2,
        "#multilingual": 0,
        "#architecture": 1,
        "#healthcare": 0,
        "#training": 5,
        "#robotics": 0,
        "#agi": 1,
        "#games": 2,
        "#interpretability": 0,
        "#reasoning": 3,
        "#transfer_learning": 0,
        "#graphs": 1,
        "#ethics": 0,
        "#security": 0,
        "#optimization": 4,
        "#survey": 0,
        "#diffusion": 0,
        "#alignment": 1,
        "#story_generation": 1,
        "#hallucinations": 1,
        "#long_context": 1,
        "#synthetic": 0,
        "#machine_translation": 0,
        "#leakage": 0,
        "#open_source": 3,
        "#small_models": 0,
        "#science": 0,
        "#low_resource": 0
    },
    "zh": {
        "text": "这篇文章讨论了大语言模型（LLMs）在处理复杂任务中的重要性。现有方法主要通过模仿更强的专家来提高性能，但这些方法在实际应用中常常失败，因为无法从错误中恢复。文章提出了一种迭代自训练框架，Agent-R，使语言代理能够在执行过程中进行反思。通过使用蒙特卡罗树搜索（MCTS），Agent-R 能够从错误路径中恢复正确路径。实验结果显示，Agent-R 能够有效地纠正错误行为，并在三个互动环境中表现优于基线方法。",
        "title": "Agent-R: Training Language Model Agents to Reflect via Iterative Self-Training",
        "pinyin": "这篇文章讨论了大语言模型（LLMs）在处理复杂任务中的重要性。\nZhè piān wénzhāng tǎolùn le dà yǔyán móxíng (LLMs) zài chǔlǐ fùzá rènwù zhōng de zhòngyàoxìng.\n\n现有方法主要通过模仿更强的专家来提高性能，\nXiànyǒu fāngfǎ zhǔyào tōngguò mófǎng gèng qiáng de zhuānjiā lái tígāo xìngnéng,\n\n但这些方法在实际应用中常常失败，因为无法从错误中恢复。\ndàn zhèxiē fāngfǎ zài shíjì yìngyòng zhōng chángcháng shībài, yīnwèi wúfǎ cóng cuòwù zhōng huīfù.\n\n文章提出了一种迭代自训练框架，Agent-R，使语言代理能够在执行过程中进行反思。\nWénzhāng tíchū le yī zhǒng diédài zì xùnliàn kuàngjià, Agent-R, shǐ yǔyán dàilǐ nénggòu zài zhíxíng guòchéng zhōng jìnxíng fǎnsī.\n\n通过使用蒙特卡罗树搜索（MCTS），Agent-R 能够从错误路径中恢复正确路径。\nTōngguò shǐyòng Méngtèkǎluó shù sōusuǒ (MCTS), Agent-R nénggòu cóng cuòwù lùjìng zhōng huīfù zhèngquè lùjìng.\n\n实验结果显示，Agent-R 能够有效地纠正错误行为，并在三个互动环境中表现优于基线方法。\nShíyàn jiéguǒ xiǎnshì, Agent-R nénggòu yǒuxiào de jiūzhèng cuòwù xíngwéi, bìng zài sān gè hùdòng huánjìng zhōng biǎoxiàn yōu yú jīxiàn fāngfǎ.",
        "vocab": "[{'word': '讨论', 'pinyin': 'tǎo lùn', 'trans': 'discuss'},\n{'word': '大语言模型', 'pinyin': 'dà yǔ yán mó xíng', 'trans': 'large language model'},\n{'word': '处理', 'pinyin': 'chǔ lǐ', 'trans': 'handle'},\n{'word': '复杂', 'pinyin': 'fù zá', 'trans': 'complex'},\n{'word': '任务', 'pinyin': 'rèn wu', 'trans': 'task'},\n{'word': '重要性', 'pinyin': 'zhòng yào xìng', 'trans': 'importance'},\n{'word': '现有', 'pinyin': 'xiàn yǒu', 'trans': 'existing'},\n{'word': '方法', 'pinyin': 'fāng fǎ', 'trans': 'method'},\n{'word': '模仿', 'pinyin': 'mó fǎng', 'trans': 'imitate'},\n{'word': '专家', 'pinyin': 'zhuān jiā', 'trans': 'expert'},\n{'word': '提高', 'pinyin': 'tí gāo', 'trans': 'improve'},\n{'word': '性能', 'pinyin': 'xìng néng', 'trans': 'performance'},\n{'word': '失败', 'pinyin': 'shī bài', 'trans': 'fail'},\n{'word': '恢复', 'pinyin': 'huī fù', 'trans': 'recover'},\n{'word': '迭代', 'pinyin': 'dié dài', 'trans': 'iterate'},\n{'word': '自训练', 'pinyin': 'zì xùn liàn', 'trans': 'self-training'},\n{'word': '框架', 'pinyin': 'kuàng jià', 'trans': 'framework'},\n{'word': '代理', 'pinyin': 'dài lǐ', 'trans': 'agent'},\n{'word': '反思', 'pinyin': 'fǎn sī', 'trans': 'reflect'},\n{'word': '蒙特卡罗树搜索', 'pinyin': 'méng tè kǎ luó shù sōu suǒ', 'trans': 'Monte Carlo Tree Search'},\n{'word': '路径', 'pinyin': 'lù jìng', 'trans': 'path'},\n{'word': '纠正', 'pinyin': 'jiū zhèng', 'trans': 'correct'},\n{'word': '行为', 'pinyin': 'xíng wéi', 'trans': 'behavior'},\n{'word': '互动', 'pinyin': 'hù dòng', 'trans': 'interactive'},\n{'word': '环境', 'pinyin': 'huán jìng', 'trans': 'environment'},\n{'word': '基线', 'pinyin': 'jī xiàn', 'trans': 'baseline'}]",
        "trans": "This article discusses the importance of large language models (LLMs) in handling complex tasks. Existing methods primarily enhance performance by mimicking stronger experts, but these methods often fail in practical applications because they cannot recover from errors. The article proposes an iterative self-training framework, Agent-R, which enables language agents to reflect during the execution process. By utilizing Monte Carlo Tree Search (MCTS), Agent-R can recover from incorrect paths to the correct ones. Experimental results demonstrate that Agent-R can effectively correct erroneous behaviors and outperforms baseline methods in three interactive environments.",
        "update_ts": "2025-01-22 09:10"
    }
}