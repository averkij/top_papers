[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.11116/x1.png",
                "caption": "Figure 1:PaperRegister can support flexible-grained paper search through the hierarchical register, while traditional method fails due to abstract cannot contain required details.",
                "position": 123
            },
            {
                "img": "https://arxiv.org/html/2508.11116/x2.png",
                "caption": "Figure 2:The overview of PaperRegister, including hierarchical indexing and adaptive retrieval. In offline stage, PaperRegister constructs hierarchical index tree via fine-grained content extracting and bottom-up content aggregating based on hierarchical register schema. In online stage, PaperRegister first identify the views of input query and then conduct view-based matching.",
                "position": 128
            }
        ]
    },
    {
        "header": "PaperRegister",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.11116/x3.png",
                "caption": "Figure 3:Illustration of view recognizer training, including SFT and GRPO via hierarchical reward, which is calculated based on the closeness level of predicted view and golden view in the hierarchical register schema.",
                "position": 261
            }
        ]
    },
    {
        "header": "View Recognizer Training",
        "images": []
    },
    {
        "header": "Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.11116/x4.png",
                "caption": "Figure 4:Paper search performance of the PaperRegister with different view recognizer. The figure shows strong recognizer is with obvious\npositive impact on overall system.",
                "position": 831
            },
            {
                "img": "https://arxiv.org/html/2508.11116/x5.png",
                "caption": "Figure 5:Performance of adding PaperRegister into the PaSa framework. The figure shows that PaperRegister can greatly cooperate with extra complex modules in PaSa framework.",
                "position": 928
            }
        ]
    },
    {
        "header": "Related Work",
        "images": []
    },
    {
        "header": "Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix A",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.11116/x6.png",
                "caption": "Figure 6:The first kind of hierarchical register schema.",
                "position": 1461
            },
            {
                "img": "https://arxiv.org/html/2508.11116/x7.png",
                "caption": "Figure 7:The second kind of hierarchical register schema.",
                "position": 1464
            },
            {
                "img": "https://arxiv.org/html/2508.11116/x8.png",
                "caption": "Figure 8:The third kind of hierarchical register schema.",
                "position": 1467
            },
            {
                "img": "https://arxiv.org/html/2508.11116/x9.png",
                "caption": "Figure 9:The fourth kind of hierarchical register schema.",
                "position": 1470
            },
            {
                "img": "https://arxiv.org/html/2508.11116/x10.png",
                "caption": "Figure 10:The fifth kind of hierarchical register schema.",
                "position": 1473
            }
        ]
    },
    {
        "header": "Appendix B",
        "images": []
    },
    {
        "header": "Appendix C",
        "images": []
    },
    {
        "header": "Appendix D",
        "images": []
    }
]