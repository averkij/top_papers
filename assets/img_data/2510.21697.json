[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1.introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.21697/x1.png",
                "caption": "Figure 1.We introduce a visual diffusion approach to solving hard geometric problems directly in pixel space. Shown here on the Inscribed Square Problem, where we task the model with finding a square such that all of its four vertices lie on a given curve. Our method uncovers diverse approximate solutions, corresponding to different random seeds.",
                "position": 101
            }
        ]
    },
    {
        "header": "2.Related Work",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.21697/x2.png",
                "caption": "Figure 2.Example of a curve (black) with three inscribed squares. Note that the inscribed squares are defined only by having all four vertices on the curve: they need not be fully contained within the curve, and they may overlap with each other.",
                "position": 129
            },
            {
                "img": "https://arxiv.org/html/2510.21697/x3.png",
                "caption": "Figure 3.Inscribed squarex0x_{0}predictions across denoising steps.Each row corresponds to a different seed (inscribed square). Columns show selectedx0x_{0}predictions for decreasing timestepsttfrom left to right (leftmost:t=Tt{=}T; penultimate:t=0t{=}0). Fort≠0t\\neq 0we render only the filled mask; att=0t{=}0we also draw square edges and the minimum-area bounding box. The rightmost column (“snapped”) shows the rigidly snapped version of thet=0t{=}0prediction on the curve, with an arrow from the original centroid to the snapped centroid.",
                "position": 132
            }
        ]
    },
    {
        "header": "3.Inscribed Square Problem",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.21697/x4.png",
                "caption": "Figure 4.Solutions produced by our model. Each Jordan curve (black) is accompanied by predicted inscribed squares (colored).",
                "position": 177
            }
        ]
    },
    {
        "header": "4.Steiner Tree Problem",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.21697/x5.png",
                "caption": "Figure 5.Example of a Steiner Minimal Tree. Left: The input terminal nodes, colored in red. Right: The Steiner Minimal Tree for this instance, where auxiliary Steiner points are colored in dark gray.",
                "position": 268
            },
            {
                "img": "https://arxiv.org/html/2510.21697/x6.png",
                "caption": "Figure 6.Steiner treex0x_{0}predictions across denoising steps.Each row corresponds to a different seed. Columns show selectedx0x_{0}predictions for decreasing timestepsttfrom left to right (leftmost:t=Tt{=}T; rightmost:t=0t{=}0). Input points are overlaid in red.",
                "position": 299
            },
            {
                "img": "https://arxiv.org/html/2510.21697/x7.png",
                "caption": "Figure 7.Optimal solutions (left) vs. our model’s solutions (middle) and the difference between them (right). Input points are overlaid over both optimal and produced solutions as red circles.",
                "position": 311
            },
            {
                "img": "https://arxiv.org/html/2510.21697/x8.png",
                "caption": "Figure 8.Qualitative examples of maximum area polygons (left) vs. polygons produced by our model (middle) and the difference between them (right). Areas depicted in red and blue in the difference map correspond to regions that are exclusive to the optimal solution and our solution, respectively. It can be noticed that even in cases where there is a disparity between the optimal solution and the one produced by the model, the area difference between the exclusive regions tends to be small, amounting to a solution of similar quality. Input points are overlaid over both optimal and produced solutions as red circles.",
                "position": 401
            }
        ]
    },
    {
        "header": "5.Maximum Area Polygon Problem",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.21697/x9.png",
                "caption": "Figure 9.Maximum area polygonx0x_{0}predictions across denoising steps.Each row corresponds to a different seed. Columns show selectedx0x_{0}predictions for decreasing timestepsttfrom left to right (leftmost:t=Tt{=}T; rightmost:t=0t{=}0). Input points are overlayed in red.",
                "position": 433
            }
        ]
    },
    {
        "header": "6.Discussion and Conclusions",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix",
        "images": []
    },
    {
        "header": "Appendix ARegression Model Ablation",
        "images": []
    },
    {
        "header": "Appendix BImplementation Details",
        "images": []
    }
]