[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.15624/figures/features.png",
                "caption": "Figure 1:freephdlaboris a multiagent framework for research automation featuring: (1) dynamic workflows that adapt to real-time findings, (2) a modular architecture with customizable agents, (3) a workspace for robust communication and memory, and (4) human-in-the-loop capabilities for continual research.",
                "position": 98
            }
        ]
    },
    {
        "header": "Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.15624/figures/decision.png",
                "caption": "Figure 2:Dynamic Agent Decision-Making infreephdlabor.When encountering a limitation in the current research context, the system’sManagerAgentautonomously reasons about the appropriate response and decides whether to delegate to specialized agents, interact with the workspace, or call other tools. This dynamic decision-making enables adaptive research workflows that respond to real-time progress.",
                "position": 111
            }
        ]
    },
    {
        "header": "Related Works",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.15624/figures/architecture.png",
                "caption": "Figure 3:Example architecture offreephdlabor.Note that arrows in the figure do not indicateworkflowslike figures in other work do, but ratheroptionsthat are available for an agent to autonomously choose from. TheManagerAgentserves as the coordinator orchestrating information flow, delegating tasks to specialized agents and managing communication through a shared workspace. All agents can read from and write to the workspace with customizable access. Thus, in addition to directly messaging each other, they may refer to files in the workspace when communicating with other agents to avoid thegame of telephoneas illustrated inFigure˜5. It is important to note that this set of agents shown here is not stationary, users can modify, add, or remove agents as needed.",
                "position": 219
            }
        ]
    },
    {
        "header": "System Architecture",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.15624/figures/memory.png",
                "caption": "Figure 4:Dissecting a single step of an agent.At any given step, an agent receives inputs constructed from its own role-specific system prompt, available tools, andmemory.Memorycontains a task step (given by users forManagerAgentand byManagerAgentfor other agents in our example system) and all previous action steps of this agent. It then outputs anaction, a code blob containing tool calls, which is parsed and then executed, possibly producing someobservation(e.g., error messages,print()statements, etc.). Then, theaction-observationpair is appended to the agent’s memory for future.",
                "position": 330
            }
        ]
    },
    {
        "header": "Infrastructure Features offreephdlabor",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.15624/figures/game_of_telephone.png",
                "caption": "Figure 5:Information Degradation in String-Based Inter-Agent Communication.Visual illustration of thegame of telephone effectin multi-agent systems. The figure depicts how information fidelity deteriorates across successive communication hops. In this example, an initial concept (a cat) undergoes progressive distortion through agent-to-agent message passing: the first agent observes the original subject, the second agent receives and reinterprets a description (resulting in a different representation), and the third agent receives further degraded information (reducing the concept to the text “CAT” on clothing). Each transcription step introduces potential for information loss, misinterpretation, or abstraction. In contrast, workspace-based communication via direct file references preserves the original data, eliminating this degradation pathway.",
                "position": 622
            }
        ]
    },
    {
        "header": "Discussion",
        "images": []
    },
    {
        "header": "Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendices",
        "images": []
    },
    {
        "header": "Appendix ATool Specifications Format",
        "images": []
    },
    {
        "header": "Appendix BWorkspace Guidelines",
        "images": []
    },
    {
        "header": "Appendix CAgent-Specific Instructions",
        "images": []
    },
    {
        "header": "Appendix DManaged Agents",
        "images": []
    }
]