[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.12635/x1.png",
                "caption": "Figure 1:Comparison between MemAct and conventional memory management.The left side illustrates a representative design in existing systems, where memory operations—such as selection, compression, and summarization—are governed by handcrafted heuristics or external controllers. These behaviors remain decoupled from the agent’s core decision-making process.\nIn contrast, theMemory-as-Action(MemAct) framework integrates such operations into the policy itself, enabling the agent to learn when and how to edit its own working memory as part of a unified decision loop. This formulation supports goal-directed, policy-driven memory management.",
                "position": 104
            }
        ]
    },
    {
        "header": "2Method",
        "images": []
    },
    {
        "header": "3Experiments & Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.12635/x2.png",
                "caption": "Figure 2:Model performance on the Multi-Objective QA dataset.(a)Per-objective accuracy versus average input tokens per round. The top-left quadrant represents higher accuracy with greater context efficiency.(b)Total input tokens per query versus the average number of function calls, illustrating the end-to-end efficiency of different strategies.",
                "position": 515
            },
            {
                "img": "https://arxiv.org/html/2510.12635/x3.png",
                "caption": "Figure 3:Comparative performance on the Multi-Objective QA dataset.The left panel shows task accuracy and the right panel shows the average number of task-related tool calls, broken down by the number of objectives per query. Models are sorted by their overall average accuracy. Memory actions are excluded from the tool call count.",
                "position": 522
            },
            {
                "img": "https://arxiv.org/html/2510.12635/x4.png",
                "caption": "Figure 4:Tool usage by objective count.(a)Average external-tool calls.(b)Average memory-management calls.\nRows: models; columns: objectives. Independent color scales per panel.",
                "position": 537
            }
        ]
    },
    {
        "header": "4Conclusion",
        "images": []
    },
    {
        "header": "5Future Work and Limitations",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AAppendix",
        "images": []
    }
]