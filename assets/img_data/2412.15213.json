[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2412.15213/x1.png",
                "caption": "",
                "position": 100
            }
        ]
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3Preliminaries",
        "images": [
            {
                "img": "https://arxiv.org/html/2412.15213/x2.png",
                "caption": "Figure 2:CrossFlow Architecture.CrossFlow enables direct evolution between two different modalities.\nTaking text-to-image generation as an example, our T2I model comprises two main components: a Text Variational Encoder and a standard flow matching model.\nAt inference time, we utilize the Text Variational Encoder to extract the text latentz0‚àà‚Ñùh√ów√ócsubscriptùëß0superscript‚Ñù‚Ñéùë§ùëêz_{0}\\in\\mathbb{R}^{h\\times w\\times c}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT ‚àà blackboard_R start_POSTSUPERSCRIPT italic_h √ó italic_w √ó italic_c end_POSTSUPERSCRIPTfrom text embeddingx‚àà‚Ñùn√ódùë•superscript‚Ñùùëõùëëx\\in\\mathbb{R}^{n\\times d}italic_x ‚àà blackboard_R start_POSTSUPERSCRIPT italic_n √ó italic_d end_POSTSUPERSCRIPTproduced by any language model.\nThen we directly evolve this text latent into the image space to generate image latentz1‚àà‚Ñùh√ów√ócsubscriptùëß1superscript‚Ñù‚Ñéùë§ùëêz_{1}\\in\\mathbb{R}^{h\\times w\\times c}italic_z start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT ‚àà blackboard_R start_POSTSUPERSCRIPT italic_h √ó italic_w √ó italic_c end_POSTSUPERSCRIPT.",
                "position": 193
            }
        ]
    },
    {
        "header": "4CrossFlow",
        "images": []
    },
    {
        "header": "5Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2412.15213/x3.png",
                "caption": "Figure 4:CrossFlow provides visually smooth interpolations in the latent space.We show images generated by linear interpolation between the first (left) and second (right) text latents.\nCrossFlow enables visually smooth transformations of object direction, composite colors, shapes, background scenes, and even object categories.\nPlease zoom in for better visualization.\nFor brevity, we display only 7 interpolating images here; additional interpolating images can be found inAppendixC(Fig.10andFig.11).",
                "position": 589
            },
            {
                "img": "https://arxiv.org/html/2412.15213/x4.png",
                "caption": "Figure 5:CrossFlow allows arithmetic in text latent space.Using the Text Variational Encoder (VE), we first map the input text into the latent spacez0subscriptùëß0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT.\nArithmetic operations are then performed in this latent space, and the resulting latent representation is used to generate the corresponding image.\nThe latent codez0subscriptùëß0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPTused to generate each image is provided at the bottom.",
                "position": 597
            }
        ]
    },
    {
        "header": "6Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix",
        "images": []
    },
    {
        "header": "Appendix AMethod Details",
        "images": []
    },
    {
        "header": "Appendix BAdditional Experimental Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2412.15213/x5.png",
                "caption": "Figure 6:Qualitative examples forzero-shotdepth estimation.The input images in the first two rows are from the NYUv2 dataset, while the input images in the last row were generated by our T2I model.\nOur model provides robustzero-shotdepth estimation across domains, whether indoor or outdoor, synthetic or real.",
                "position": 2811
            },
            {
                "img": "https://arxiv.org/html/2412.15213/x6.png",
                "caption": "Figure 7:Qualitative examples for image super-resolution.",
                "position": 2835
            },
            {
                "img": "https://arxiv.org/html/2412.15213/x7.png",
                "caption": "Figure 8:Ablation on CFG with indicator.The first two columns show the images generated when the indicator1c=0subscript1ùëê01_{c}=01 start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT = 0(for unconditional generation) and1c=1subscript1ùëê11_{c}=11 start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT = 1(for conditional generation), demonstrating that CrossFlow can still perform unconditional generation with the help of the indicator, thereby allowing for the use of standard CFG.\nWe then demonstrate the improvement provided by CFG (middle five columns) and compare it with Autoguidance (last two columns).\nPrompts used to generate the images:‚Äòa corgi wearing a red hat in the park‚Äô,‚Äòa cat playing chess‚Äô,‚Äòa pair of headphones on a guitar‚Äô,‚Äòa horse in a red car‚Äô",
                "position": 2874
            },
            {
                "img": "https://arxiv.org/html/2412.15213/x8.png",
                "caption": "Figure 9:Qualitative examples for text-to-image with CrossFlow.",
                "position": 2902
            },
            {
                "img": "https://arxiv.org/html/2412.15213/x9.png",
                "caption": "Figure 10:Linear interpolation in latent space.We show images generated by linear interpolation between two text latents (i.e., interpolation betweenz0subscriptùëß0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT).\nImages generated by the first and second text latents are provided in the top-left and bottom-right corners.",
                "position": 2906
            },
            {
                "img": "https://arxiv.org/html/2412.15213/x10.png",
                "caption": "Figure 11:Linear interpolation in latent space.We show images generated by linear interpolation between two text latents (i.e., interpolation betweenz0subscriptùëß0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT).\nImages generated by the first and second text latents are provided in the top-left and bottom-right corners.",
                "position": 2912
            },
            {
                "img": "https://arxiv.org/html/2412.15213/x11.png",
                "caption": "Figure 12:Arithmetic in text latent space.We map the text into the text latent space, perform arithmetic operations to obtain new latent representation, and use the resulting representation to generate the image.\nLatentz0subscriptùëß0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPTused to generate each image is provided at the bottom.",
                "position": 2918
            }
        ]
    },
    {
        "header": "Appendix CAdditional Qualitative Examples",
        "images": []
    }
]