[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Works",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.02882/x1.png",
                "caption": "Figure 1:Visualization of five internal states of TA-LLMs and state trajectories for three different query types. User queries are shown in green message bubbles, while other conversational turns are displayed in blue. OOT (Out-of-Tools) queries represent requests for functionality not available in the teal-colored \"Tools\" list. Slot-Filling QAs denote conversational turns aimed at gathering required fields for tool execution. Tool calls represent messages where the assistant invokes a tool, tool responses show the returned execution results, and completion messages demonstrate the assistant’s final response using the tool output. For optimal visualization of the state transitions and message types, we recommend viewing this figure in color. Icons from Flaticon222http://www.flaticon.comare used in this diagram.",
                "position": 195
            }
        ]
    },
    {
        "header": "3Preliminaries",
        "images": []
    },
    {
        "header": "4Dataset Construction",
        "images": []
    },
    {
        "header": "5Objective Loss",
        "images": []
    },
    {
        "header": "6Experiments",
        "images": []
    },
    {
        "header": "7Conclusion",
        "images": []
    },
    {
        "header": "Limitations",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AEvaluation metrics",
        "images": []
    },
    {
        "header": "Appendix BPrompt for Type 2 Trajectory Augmentation from Type 1 Trajectory",
        "images": []
    },
    {
        "header": "Appendix CDetails of CPT and SFT",
        "images": []
    },
    {
        "header": "Appendix DTraining Setup",
        "images": []
    },
    {
        "header": "Appendix EHyperparameter Analysis",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.02882/extracted/6322723/figures/subplot_horizontal.png",
                "caption": "Figure 2:Effects of hyperparameters on model performance metrics. (a) Impact of DPO regularization parameter (β𝛽\\betaitalic_β) ranging from 0.1 to 0.5. (b) Impact of reward scaling factor (γ𝛾\\gammaitalic_γ) from 0.1 to 0.9. (c) Impact of reward gap margin (ρ𝜌\\rhoitalic_ρ) from 0 to 5. All experiments measure six different performance metrics: call accuracy, completion accuracy, slot accuracy, relevance accuracy, and micro/macro-averaged scores.",
                "position": 2161
            },
            {
                "img": "https://arxiv.org/html/2504.02882/x2.png",
                "caption": "Figure 3:Comparison of responses between SFT-Only and SFT + DiaTool-DPO models. The ‘Messages’ shows the user’s initial query, and ‘Tools’ presents the tool specification required to resolve the user’s query. For brevity, we omit the remaining 4-6 candidate tools in Tools.\nWhile the tool specification includes ‘min’ and ‘max’ as required fields, the user only specifies the ‘min’ value in the query. The SFT-Only model proceeds to call the tool using only the min value, whereas SFT + DiaTool-DPO model engages in slot-filling by asking for the missing ‘max’ value.",
                "position": 2192
            },
            {
                "img": "https://arxiv.org/html/2504.02882/x3.png",
                "caption": "Figure 4:Comparison of responses between SFT-Only and SFT + DiaTool-DPO models. The ‘Messages’ shows the user’s initial query, and ‘Tools’ presents the tool specification required to resolve the user’s query. For brevity, we omit the remaining 4-6 candidate tools in Tools.\nWhile the tool specification lists ‘amount’, ‘from_currency’, and ‘to_currency’ as required fields, the user’s query lacks the ‘amount’ information. The SFT-Only model hallucinates a value of 1,000 for the amount field, whereas the SFT + DiaTool-DPO model engages in slot-filling by asking a question to determine the missing amount value.",
                "position": 2196
            },
            {
                "img": "https://arxiv.org/html/2504.02882/x4.png",
                "caption": "Figure 5:Comparison of responses between SFT-Only and SFT + DiaTool-DPO models. The ‘Messages’ shows the user’s initial query, and ‘Tools’ presents the tool specification required to resolve the user’s query. For brevity, we omit the remaining 4-6 candidate tools in Tools. While the tool specification lists ‘bill_amount’ and ‘tip_percentage’ as required fields, the user’s query does not specify the ‘tip_percentage’. The SFT-Only model generates a comment assuming a 10% tip percentage, whereas the SFT + DiaTool-DPO model generates a slot-filling question to determine the tip percentage value.",
                "position": 2200
            }
        ]
    },
    {
        "header": "Appendix FExtensibility to Other Languages",
        "images": []
    }
]