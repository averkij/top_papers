[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.15257/x1.png",
                "caption": "Figure 1:Task-Level Meta-Agents vs. Query-Level Meta-Agents at Inference Time.q𝑞qitalic_qdenotes a user query, e.g.,build a 2048 game.t∼P⁢(q)similar-to𝑡𝑃𝑞t\\sim P(q)italic_t ∼ italic_P ( italic_q )denotes one kind of task, e.g.,code generation task, which is a distribution of user queries. Givent𝑡titalic_t, previous task-level meta-agent𝒜meta_tasksubscript𝒜meta_task\\mathcal{A}_{\\text{meta\\_task}}caligraphic_A start_POSTSUBSCRIPT meta_task end_POSTSUBSCRIPTaims to search a task-specific multi-agent system𝒮tasksubscript𝒮task\\mathcal{S}_{\\text{task}}caligraphic_S start_POSTSUBSCRIPT task end_POSTSUBSCRIPTto solve all queries sampled fromt𝑡titalic_t, i.e.,one system per task. Differently, given one user queryq(i)superscript𝑞𝑖q^{(i)}italic_q start_POSTSUPERSCRIPT ( italic_i ) end_POSTSUPERSCRIPT, our query-level meta-agent𝒜meta_querysubscript𝒜meta_query\\mathcal{A}_{\\text{meta\\_query}}caligraphic_A start_POSTSUBSCRIPT meta_query end_POSTSUBSCRIPTconducts reasoning and output a query-specific multi-agent system𝒮query(i)superscriptsubscript𝒮query𝑖\\mathcal{S}_{\\text{query}}^{(i)}caligraphic_S start_POSTSUBSCRIPT query end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ( italic_i ) end_POSTSUPERSCRIPTforq(i)superscript𝑞𝑖q^{(i)}italic_q start_POSTSUPERSCRIPT ( italic_i ) end_POSTSUPERSCRIPT, i.e.,one system per query.",
                "position": 90
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3Problem Definition",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.15257/x2.png",
                "caption": "Figure 2:Architectural Comparison of Three Multi-Agent Systems. (a) Manually-designed Multi-agent System, (b) Search-based Automatic Multi-agent System, and (c) Reasoning-based Automatic Multi-agent System.",
                "position": 155
            }
        ]
    },
    {
        "header": "4Meta-AgentFlowReasoner",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.15257/x3.png",
                "caption": "Figure 3:Training Pipeline ofFlowReasoner.It consists of (1) Reasoning Data Distillation, (2) Reasoning SFT Warmup, (3) Reinforce Reasoning from external execution feedback.",
                "position": 169
            }
        ]
    },
    {
        "header": "5Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.15257/x4.png",
                "caption": "(a)Ablation of Meta-agent",
                "position": 453
            },
            {
                "img": "https://arxiv.org/html/2504.15257/x4.png",
                "caption": "(a)Ablation of Meta-agent",
                "position": 456
            },
            {
                "img": "https://arxiv.org/html/2504.15257/x5.png",
                "caption": "(b)Ablation of Workers",
                "position": 461
            }
        ]
    },
    {
        "header": "6Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AMore Implementation Details",
        "images": []
    },
    {
        "header": "Appendix BMore Cases of Workflow",
        "images": []
    }
]