[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.03923/figures/browser.png",
                "caption": "",
                "position": 129
            }
        ]
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3Computer-using Agent with Coding as Actions",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.03923/x1.png",
                "caption": "Figure 1:Multi-agent system design for our CoAct-1. This multi-agent system includes a programmer who can interact with the operating system through multi-round coding.",
                "position": 169
            },
            {
                "img": "https://arxiv.org/html/2508.03923/figures/workflow.png",
                "caption": "Figure 2:Illustration of CoAct-1 workflow. Given a user task, Orchestrator can choose either to call Programmer or GUI Operator to solve a subtask. A programmer can interact with the OS by coding, and a GUI Operator can interact with the OS by performing GUI operations.",
                "position": 194
            }
        ]
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.03923/x2.png",
                "caption": "(a)Average steps for a successful task. CoAct-1 can solve tasks with lower average steps than previous SOTA agentic frameworks. On the other hand, CoAct-1 higher steps than OpenAI CUA 4o but also higher accuracy.",
                "position": 527
            },
            {
                "img": "https://arxiv.org/html/2508.03923/x2.png",
                "caption": "(a)Average steps for a successful task. CoAct-1 can solve tasks with lower average steps than previous SOTA agentic frameworks. On the other hand, CoAct-1 higher steps than OpenAI CUA 4o but also higher accuracy.",
                "position": 530
            },
            {
                "img": "https://arxiv.org/html/2508.03923/x3.png",
                "caption": "(b)GUI/code ratio split by total action of tasks. Coding helps reduce the total action steps.",
                "position": 535
            },
            {
                "img": "https://arxiv.org/html/2508.03923/x4.png",
                "caption": "(c)This chart illustrates the domains where coding actions are most frequently applied.",
                "position": 541
            },
            {
                "img": "https://arxiv.org/html/2508.03923/x5.png",
                "caption": "(d)Error rate distribution split by total action of tasks. The error rate is positive related to total actions.",
                "position": 546
            }
        ]
    },
    {
        "header": "5Conclusions",
        "images": []
    },
    {
        "header": "References",
        "images": []
    }
]