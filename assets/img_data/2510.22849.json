[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.22849/x1.png",
                "caption": "Figure 1:Overview of Per-Instance Program Synthesis (PIPS).PIPSaddresses the open-domain nature of reasoning problems by selecting between synthesis and CoT at the instance-level, avoiding unnecessarily generating programs for non-algorithmic problems. For algorithmic problems,PIPSaddresses the lack of task specifications by iteratively synthesizing programs using feedback based onstructural checks.PIPShandles unstructured input via instance-specific symbolic extraction (step 1) before program synthesis (step 2).Figure˜2shows an example where an undesirable program is rejected before producing an acceptable one which gives the correct answer upon execution (step 3).",
                "position": 130
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x2.png",
                "caption": "Figure 2:Example illustrating two iterations of the synthesis loop inPIPS.",
                "position": 169
            }
        ]
    },
    {
        "header": "2The Challenges of Per-Instance Program Synthesis",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.22849/x3.png",
                "caption": "(a)Fraction of output code with issues:trivial(hard-coded answer),type(wrong return type),syntax(parser error), andplaceholders(incomplete code).",
                "position": 190
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x3.png",
                "caption": "(a)Fraction of output code with issues:trivial(hard-coded answer),type(wrong return type),syntax(parser error), andplaceholders(incomplete code).",
                "position": 193
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x4.png",
                "caption": "(b)Per-instance synthesis baseline performance on mostly algorithmic vs. non-algorithmic problems. Shading indicates fraction of correct solutions with non-trivial code.",
                "position": 199
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x5.png",
                "caption": "(a)Trivial program.",
                "position": 223
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x5.png",
                "caption": "(a)Trivial program.",
                "position": 226
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x6.png",
                "caption": "(b)Program operating over raw image.",
                "position": 231
            }
        ]
    },
    {
        "header": "3Per-Instance Program Synthesis (PIPS)",
        "images": []
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.22849/x7.png",
                "caption": "Figure 5:Harmonic mean accuracy over all 30 datasets (left), on the 17 majority algorithmic tasks (middle), and on the 10 majority non-algorithmic (right) forPIPSand baselines using three state-of-the-art models.\nThe breakdown per task per model is shown inTable˜C.3,Table˜C.2, andTable˜C.4.",
                "position": 381
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x8.png",
                "caption": "(a)Scaling of harmonic mean accuracy across all datasets with more synthesis iterations.",
                "position": 406
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x8.png",
                "caption": "(a)Scaling of harmonic mean accuracy across all datasets with more synthesis iterations.",
                "position": 409
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x9.png",
                "caption": "(b)Decrease in code issues with more synthesis iterations.",
                "position": 414
            },
            {
                "img": "https://arxiv.org/html/2510.22849/x10.png",
                "caption": "Figure 7:Calibration curve of our selection method between program synthesis and CoT. We only consider questions where the choice between synthesis and CoT determines answer correctness, and a positive instance is one correctly solved by code. Therefore, a score of 0.8 should mean an 80% chance of solving correctly with code and a 20% chance of solving correctly with CoT.",
                "position": 490
            }
        ]
    },
    {
        "header": "5Related Work",
        "images": []
    },
    {
        "header": "6Limitations and Conclusion",
        "images": []
    },
    {
        "header": "Acknowledgments and Disclosure of Funding",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "NeurIPS Paper Checklist",
        "images": []
    },
    {
        "header": "Appendix AAlgorithmic Split of Datasets",
        "images": []
    },
    {
        "header": "Appendix BPIPSPrograms forFigure˜4",
        "images": []
    },
    {
        "header": "Appendix CFull Results",
        "images": []
    },
    {
        "header": "Appendix DAdditional Baselines",
        "images": []
    },
    {
        "header": "Appendix EReasoning Costs",
        "images": []
    },
    {
        "header": "Appendix FNon-Trivial Program Synthesis on Non-Algorithmic Problems",
        "images": []
    },
    {
        "header": "Appendix GProgram Evaluation Criteria",
        "images": []
    },
    {
        "header": "Appendix HSwitch Analysis",
        "images": []
    },
    {
        "header": "Appendix IPrompts",
        "images": []
    },
    {
        "header": "Appendix JHyperparameters",
        "images": []
    },
    {
        "header": "Appendix KCompute Resources",
        "images": []
    },
    {
        "header": "Appendix LBroader Impacts",
        "images": []
    },
    {
        "header": "Appendix MConnection to Transductive Learning",
        "images": []
    }
]