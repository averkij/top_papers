[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Background",
        "images": [
            {
                "img": "https://arxiv.org/html/2507.03253/x1.png",
                "caption": "Figure 1:Overview of the program-based refinement pipeline and comparison of training data construction for the distilled refine model in ProX andRefineX. While ProX generates refine programs using complex prompts prone to hallucination,RefineXfirst produces high-quality end-to-end refined texts and derives reliable refine programs by comparing them with the original input.",
                "position": 251
            }
        ]
    },
    {
        "header": "3RefineX: Scalable Refinement with Efficiency and Reliability",
        "images": [
            {
                "img": "https://arxiv.org/html/2507.03253/x2.png",
                "caption": "Figure 2:An overview of theRefineXframework. (1) During training,RefineXprompts an expert model to generate high-quality refined text under instructions, then extracts valid deletions via minimal edit distance. These are converted into program functions to supervise a reliable refine model. (2) At inference time, the trained model generates fine-grained refinement programs for each document, which are executed by a Python interpreter to produce the final refined corpus.",
                "position": 268
            }
        ]
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2507.03253/x3.png",
                "caption": "Figure 3:Downstream average performance (%) of model checkpoints with different numbers of training tokens during pretraining.",
                "position": 775
            },
            {
                "img": "https://arxiv.org/html/2507.03253/x4.png",
                "caption": "Figure 4:Token count distributions before and after refinement on raw data, rule-based filtered data (Comb), and LLM-based filtered data (Prox-C). We randomly sample 5M document instances from each corresponding baseline to ensure a representative analysis.",
                "position": 796
            },
            {
                "img": "https://arxiv.org/html/2507.03253/x5.png",
                "caption": "Figure 5:The top plot reflects the refinement efficiency, while the bottom plot shows the preference for leaving text untouched.",
                "position": 980
            }
        ]
    },
    {
        "header": "5Related Work",
        "images": []
    },
    {
        "header": "6Conclusion and Discussion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix ARefine Model Implementation inRefineX",
        "images": []
    },
    {
        "header": "Appendix BPretraining Details",
        "images": []
    },
    {
        "header": "Appendix CExperimental Evaluation Details",
        "images": []
    },
    {
        "header": "Appendix DFull Evaluation Results",
        "images": []
    },
    {
        "header": "Appendix ECase Study",
        "images": []
    }
]