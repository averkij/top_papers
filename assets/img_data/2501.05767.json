[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2501.05767/x1.png",
                "caption": "",
                "position": 125
            },
            {
                "img": "https://arxiv.org/html/2501.05767/x2.png",
                "caption": "",
                "position": 157
            }
        ]
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Work",
        "images": [
            {
                "img": "https://arxiv.org/html/2501.05767/x3.png",
                "caption": "Figure 2:An illustration of the multi-image grounding tasks included in MIG-Bench. These tasks are divided into two categories: spontaneous grounding and referential grounding, depending on the whether there are explicit referential requirements.",
                "position": 223
            }
        ]
    },
    {
        "header": "3Task Definition",
        "images": []
    },
    {
        "header": "4Methods",
        "images": [
            {
                "img": "https://arxiv.org/html/2501.05767/x4.png",
                "caption": "Figure 3:Illustration of the CoT framework and its failure case. Different from (a) direct inference, the (b) CoT method decomposes the task into two subtasks, solving each task deploying the modelâ€™s existing capabilities. A failure case of CoT is shown in (c) where the model struggles at handling abstract visual information. Green and red background colors indicate correct and incorrect answers, respectively.",
                "position": 243
            },
            {
                "img": "https://arxiv.org/html/2501.05767/x5.png",
                "caption": "Figure 4:Statistics of the MGrounding-630k dataset and MIG-Bench.",
                "position": 246
            },
            {
                "img": "https://arxiv.org/html/2501.05767/x6.png",
                "caption": "Figure 5:Above are the four representative failure patterns of the single-image CoT. From left to right, top to bottom, they are (a) special multi-image format, (b) abstract visual information, (c) CoT error propagation, (d) step-2 inference error.",
                "position": 262
            }
        ]
    },
    {
        "header": "5MIG-Bench",
        "images": []
    },
    {
        "header": "6Experiments",
        "images": []
    },
    {
        "header": "7Analysis",
        "images": []
    },
    {
        "header": "8Conclusion",
        "images": []
    },
    {
        "header": "Limitation",
        "images": []
    },
    {
        "header": "Acknowledgement",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix ABenchmark Tasks Definition",
        "images": []
    },
    {
        "header": "Appendix BSingle-Image CoT Failure Patterns",
        "images": []
    },
    {
        "header": "Appendix CMGrounding-630k Data Curation Details",
        "images": []
    },
    {
        "header": "Appendix DDetails of Two-Stage Training",
        "images": []
    },
    {
        "header": "Appendix EEvaluation Implementation",
        "images": []
    },
    {
        "header": "Appendix FMulti-Task Learning",
        "images": [
            {
                "img": "https://arxiv.org/html/2501.05767/x7.png",
                "caption": "Figure 6:Example cases of the free-form multi-image grounding ability of Migician.",
                "position": 2419
            },
            {
                "img": "https://arxiv.org/html/2501.05767/x8.png",
                "caption": "Figure 7:Example cases of the free-form multi-image grounding ability of Migician.",
                "position": 2422
            },
            {
                "img": "https://arxiv.org/html/2501.05767/x9.png",
                "caption": "Figure 8:Training Examples of the free-form instruction tuning data.",
                "position": 2425
            }
        ]
    },
    {
        "header": "Appendix GCase Study",
        "images": []
    }
]