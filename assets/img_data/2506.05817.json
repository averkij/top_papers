[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.05817/extracted/6518320/intro.png",
                "caption": "Figure 1:Competitive programming problems typically impose constraints on the input. (a) A simple example of a topological sort problem, which requires the input to be a Directed Acyclic Graph (DAG) and specifies limits on its size. (b) An invalid input, as the graph contains a cycle, which means no topological sort exists. (c) A valid input.",
                "position": 110
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3The Generator-Validator Agent System",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.05817/x1.png",
                "caption": "Figure 2:Generator-Validator Agents Pipeline.(a) The Generator Agent writes a generator program and generator commands to produce test cases. (b) The Validator Agent writes a validator program to check if the test cases satisfy all the constraints stated in the problem. Test cases that fail validation, along with specific comments provided by the validator program, are then fed back to the Generator Agent for revision.",
                "position": 315
            }
        ]
    },
    {
        "header": "4CodeContests+: A Competitive Coding Dataset with Verified Test Cases",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.05817/x2.png",
                "caption": "(a)CodeContests",
                "position": 452
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x2.png",
                "caption": "(a)CodeContests",
                "position": 455
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x3.png",
                "caption": "(b)CodeContests+5x",
                "position": 460
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x4.png",
                "caption": "(c)#Problems v.s. Threshold",
                "position": 466
            }
        ]
    },
    {
        "header": "5Conclusion and Future Work",
        "images": []
    },
    {
        "header": "Acknowledgements",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "6Terms and Definitions",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.05817/x5.png",
                "caption": "(a)CodeContests+1x",
                "position": 914
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x5.png",
                "caption": "(a)CodeContests+1x",
                "position": 917
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x6.png",
                "caption": "(b)CodeContests+2x",
                "position": 922
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x7.png",
                "caption": "(c)CodeContests+3x",
                "position": 927
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x8.png",
                "caption": "(d)CodeContests+4x",
                "position": 933
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x9.png",
                "caption": "(e)CodeContests+5x",
                "position": 938
            },
            {
                "img": "https://arxiv.org/html/2506.05817/x10.png",
                "caption": "(f)CodeContests",
                "position": 943
            },
            {
                "img": "https://arxiv.org/html/2506.05817/extracted/6518320/20250520-180156.jpeg",
                "caption": "Figure 5:Evaluation results during RL training process.",
                "position": 950
            }
        ]
    },
    {
        "header": "7Checker",
        "images": []
    },
    {
        "header": "8Evaluation as a Service (EaaS): A Cloud Architecture for Large-Scale Code Evaluation",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.05817/extracted/6518320/reflection.png",
                "caption": "Figure 6:An illustration of the reflection process of Geneartor Agent.",
                "position": 1035
            },
            {
                "img": "https://arxiv.org/html/2506.05817/extracted/6518320/problem.png",
                "caption": "Figure 7:An example problemColor the Map Extreme.",
                "position": 1041
            }
        ]
    },
    {
        "header": "9Illustrations, Demos and Cases",
        "images": []
    }
]