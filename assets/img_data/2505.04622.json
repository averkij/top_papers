[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/teaser.png",
                "caption": "Figure 1.3D primitive assemblies created by PrimitiveAnything span diverse shape categories, enabling versatile primitive-based 3D content creation.",
                "position": 115
            }
        ]
    },
    {
        "header": "1.Introduction",
        "images": []
    },
    {
        "header": "2.Related Works",
        "images": []
    },
    {
        "header": "3.Method",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/framework2.png",
                "caption": "Figure 2.Overview. We propose PrimitiveAnything to decompose complex shapes into 3D primitive assembly via the auto-regressive transformer.\nGiven human-crafted 3D primitive abstraction contents, we first design an ambiguity-free scheme to parameterize each primitivepùëùpitalic_pinto class labelcùëêcitalic_c, translationtùë°titalic_t, rotationrùëüritalic_rand scalesùë†sitalic_s, and then employ a primitive encoder to form primitive tokenh‚Ñéhitalic_h.\nMeanwhile, a shape encoder encodes 3D shape featuresùíûùíû\\mathcal{C}caligraphic_Cfrom sampled point clouds.\nOur primitive transformerùíÆùíÆ\\mathcal{S}caligraphic_Spredicts the next primitive based on\nthe input conditionùíûùíû\\mathcal{C}caligraphic_Cand previously generated primitives. To model the dependencies among primitive attributes, we proposed a\ncascaded primitive decoderùíüùíü\\mathcal{D}caligraphic_Dthat sequentially predicts\nprimitive attributes.",
                "position": 238
            },
            {
                "img": "https://arxiv.org/html/2505.04622/x1.png",
                "caption": "Figure 3.Demonstration of primitive attribute ambiguity. A primitive with inherent symmetry can correspond to multiple scales and rotations through self-rotation and possible axis swapping.",
                "position": 308
            }
        ]
    },
    {
        "header": "4.Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/comp.png",
                "caption": "Figure 4.Qualitative comparisons on the HumanPrim test set: In our method, colors indicate different primitive types, while in Marching Primitives and EMS, colors represent separate superquadrics. Our method achieves human-crafted primitive abstraction and faithfully reproduces the original 3D structure.",
                "position": 528
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/app.png",
                "caption": "Figure 5.PrimitiveAnything interfaces with state-of-the-art 3D shape generation models to enable text- and image-conditioned primitive-based 3D content generation.",
                "position": 804
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/comp_main2.png",
                "caption": "Figure 6.More qualitative comparisons with optimization-based methods on the HumanPrim dataset.",
                "position": 809
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/comp_chair.png",
                "caption": "Figure 7.Comparisons on the HumanPrim test set (Chair subset).",
                "position": 813
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/comp_chair.png",
                "caption": "Figure 7.Comparisons on the HumanPrim test set (Chair subset).",
                "position": 816
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/shapenet.png",
                "caption": "Figure 8.Comparisons on the ShapeNet test set (Chair category).",
                "position": 821
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/comp_objaverse.png",
                "caption": "Figure 9.Comparisons on the Objaverse dataset.",
                "position": 827
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/app2.png",
                "caption": "Figure 10.More visualizations of primitive-based 3D content generation on text and image conditions.",
                "position": 832
            }
        ]
    },
    {
        "header": "5.Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AMore Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/abl.png",
                "caption": "Figure 11.Qualitative comparisons of ablation study.",
                "position": 2085
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/similar.png",
                "caption": "Figure 12.Generalization capability of our method. Top row: unseen test shapes; Middle row: our primitive decomposition results; Bottom row: geometrically closest shapes from the training dataset.",
                "position": 2098
            }
        ]
    },
    {
        "header": "Appendix BMore Implementation Details",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.04622/x2.png",
                "caption": "Figure 13.Statistical characteristics of our HumanPrim dataset.",
                "position": 2109
            },
            {
                "img": "https://arxiv.org/html/2505.04622/x3.png",
                "caption": "Figure 14.Symmetry order calculation for the x-axis of a cuboid. Axis permutation (swapping y and z axes) after 90¬∞ and 270¬∞ rotations creates configurations equivalent to the original, increasing the symmetry order from 2 to 4.",
                "position": 2119
            },
            {
                "img": "https://arxiv.org/html/2505.04622/extracted/6418382/images/fail.png",
                "caption": "Figure 15.Failure cases with out-of-distribution inputs.",
                "position": 2132
            }
        ]
    },
    {
        "header": "Appendix CMore Discussions",
        "images": []
    }
]