[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.03738/x1.png",
                "caption": "(a)DeiT-B, 64√ó\\times√ó64 Input, CLS",
                "position": 82
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x1.png",
                "caption": "(a)DeiT-B, 64√ó\\times√ó64 Input, CLS",
                "position": 85
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x2.png",
                "caption": "(b)Adventurer-B, 128√ó\\times√ó128 Input, CLS",
                "position": 90
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x3.png",
                "caption": "(c)Adventurer-B, 224√ó\\times√ó224 Input, CLS",
                "position": 95
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x4.png",
                "caption": "(d)ADE20k Semantic Segmentation",
                "position": 101
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x5.png",
                "caption": "(e)COCO Object Detection",
                "position": 106
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x6.png",
                "caption": "(f)COCO Instance Segmentation",
                "position": 111
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x7.png",
                "caption": "(g)DeiT-B, 128√ó\\times√ó128 Input, CLS",
                "position": 117
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x8.png",
                "caption": "(h)Adventurer-L, 128√ó\\times√ó128, CLS",
                "position": 122
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x9.png",
                "caption": "(i)Adventurer-T, 224√ó\\times√ó224, CLS",
                "position": 127
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3Method",
        "images": []
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.03738/x10.png",
                "caption": "Figure 2:Decoder‚Äôs impact on semantic segmentation.We train a semantic segmentation model with the same backbone but different decoder heads: an UperNet with 13M parameters and a simple linear layer with 0.2M parameters. We observe that as patch size decreases, the impact of the decoder head diminishes.",
                "position": 427
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x11.png",
                "caption": "(a)Scaling from Adventurer-Base/16, 224√ó\\times√ó224 input.",
                "position": 587
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x11.png",
                "caption": "(a)Scaling from Adventurer-Base/16, 224√ó\\times√ó224 input.",
                "position": 590
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x12.png",
                "caption": "(b)Scaling form ViT-Base/16, 128√ó\\times√ó128 input.",
                "position": 596
            },
            {
                "img": "https://arxiv.org/html/2502.03738/x13.png",
                "caption": "Figure 4:Input size scaling with fixed sequence length.We fix the ratio ofi‚Å¢m‚Å¢a‚Å¢g‚Å¢e‚Å¢_‚Å¢s‚Å¢i‚Å¢z‚Å¢e/p‚Å¢a‚Å¢t‚Å¢c‚Å¢h‚Å¢_‚Å¢s‚Å¢i‚Å¢z‚Å¢eùëñùëöùëéùëîùëí_ùë†ùëñùëßùëíùëùùëéùë°ùëê‚Ñé_ùë†ùëñùëßùëíimage\\_size/patch\\_sizeitalic_i italic_m italic_a italic_g italic_e _ italic_s italic_i italic_z italic_e / italic_p italic_a italic_t italic_c italic_h _ italic_s italic_i italic_z italic_eand scale up the input size for ImageNet classification. As shown, when the input size is scaled beyond its original resolutions (e.g., typically 460 for ImageNet), further interpolating the input images does not yield additional accuracy gains. Instead, it leads to a rapid increase in patchification parameters, resulting in training instability that ultimately harms performance.",
                "position": 616
            }
        ]
    },
    {
        "header": "5Conclusion",
        "images": []
    },
    {
        "header": "Acknowledgments",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix",
        "images": []
    }
]