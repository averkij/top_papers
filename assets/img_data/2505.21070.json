[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Preliminaries",
        "images": []
    },
    {
        "header": "3DualParal",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.21070/x1.png",
                "caption": "Figure 1:Overview ofDualParal:DualParalpartitions video frames into sequential blocks organized in a queue with noise levels increasing from tail to head, and distributes model layers across devices via a device pipeline.\nBy feeding blocks into the pipeline in a reverse order (from tail to head), thisblock-wise denoisingscheme significantly improves efficiency.\nTo further improve performance,DualParalreuses Key-Value (KV) features from the previous block, requiring only the subsequent block to be concatenated. To preserve global consistency, each new block is initialized from a shared noise pool by shuffling noises, excluding the lastN⁢u⁢mc2𝑁𝑢subscript𝑚𝑐2\\frac{Num_{c}}{2}divide start_ARG italic_N italic_u italic_m start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT end_ARG start_ARG 2 end_ARGlatents of the last block in queue.",
                "position": 180
            },
            {
                "img": "https://arxiv.org/html/2505.21070/x2.png",
                "caption": "Figure 2:Examples of four different noise initializations for Wan2.1 modelWan: (a) uses the complete noise space, (b) uses a subset of the noise space, (c) adds new noise to the original space, and (d) uses the complete noise space with the repetitive noise. The first image shows the standard video generated from the reference noise space, followed by two different orders of noise initialization.",
                "position": 239
            },
            {
                "img": "https://arxiv.org/html/2505.21070/x3.png",
                "caption": "Figure 3:Pipeline schedule ofDualParalwithN=4𝑁4N=4italic_N = 4,T=50𝑇50T=50italic_T = 50, andB⁢l⁢o⁢c⁢kn⁢u⁢m=4𝐵𝑙𝑜𝑐subscript𝑘𝑛𝑢𝑚4Block_{num}=4italic_B italic_l italic_o italic_c italic_k start_POSTSUBSCRIPT italic_n italic_u italic_m end_POSTSUBSCRIPT = 4. Blocks are denoised in reverse order, from tail to head in the queue. After diffusion stepT𝑇Titalic_T, the first clean block is popped from the queue, and all remaining blocks shift forward by one position, decrementing their indices accordingly.",
                "position": 268
            }
        ]
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.21070/x4.png",
                "caption": "Figure 4:Scalability analysis in terms of latency and memory cost: (a) and (b) show the scalability of Wan2.1-1.3B (480p) across different methods on a 301-frame video, while (c) and (d) present the scalability of Wan2.1-14B (720p) on a 301-frame video.",
                "position": 464
            },
            {
                "img": "https://arxiv.org/html/2505.21070/x5.png",
                "caption": "Figure 5:Comparison of 257-frame videos.",
                "position": 624
            },
            {
                "img": "https://arxiv.org/html/2505.21070/x6.png",
                "caption": "Figure 6:Video frames under different conditions: (a)N⁢u⁢mC=0𝑁𝑢subscript𝑚𝐶0Num_{C}=0italic_N italic_u italic_m start_POSTSUBSCRIPT italic_C end_POSTSUBSCRIPT = 0without noise initialization; (b)N⁢u⁢mC=8𝑁𝑢subscript𝑚𝐶8Num_{C}=8italic_N italic_u italic_m start_POSTSUBSCRIPT italic_C end_POSTSUBSCRIPT = 8without noise initialization; (c)N⁢u⁢mC=8𝑁𝑢subscript𝑚𝐶8Num_{C}=8italic_N italic_u italic_m start_POSTSUBSCRIPT italic_C end_POSTSUBSCRIPT = 8with coordinated noise initialization.",
                "position": 709
            }
        ]
    },
    {
        "header": "5Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.21070/x7.png",
                "caption": "Figure 7:Pipeline schedule ofDualParalwithN=4𝑁4N=4italic_N = 4,T=50𝑇50T=50italic_T = 50, andB⁢l⁢o⁢c⁢kn⁢u⁢m=3𝐵𝑙𝑜𝑐subscript𝑘𝑛𝑢𝑚3Block_{num}=3italic_B italic_l italic_o italic_c italic_k start_POSTSUBSCRIPT italic_n italic_u italic_m end_POSTSUBSCRIPT = 3. Blocks are denoised in reverse order, from tail to head in the queue. After diffusion stepT𝑇Titalic_T, the first clean block is popped from the head, and all remaining blocks shift forward by one position, incrementing their indices accordingly.",
                "position": 1158
            },
            {
                "img": "https://arxiv.org/html/2505.21070/x8.png",
                "caption": "Figure 8:Pipeline schedule ofDualParalwithN=4𝑁4N=4italic_N = 4,T=50𝑇50T=50italic_T = 50, andB⁢l⁢o⁢c⁢kn⁢u⁢m=4𝐵𝑙𝑜𝑐subscript𝑘𝑛𝑢𝑚4Block_{num}=4italic_B italic_l italic_o italic_c italic_k start_POSTSUBSCRIPT italic_n italic_u italic_m end_POSTSUBSCRIPT = 4. Blocks are denoised sequentially from head to tail in the queue. After diffusion stepT𝑇Titalic_T, the first clean block is popped from the head, and all remaining blocks shift forward by one position, incrementing their indices accordingly.",
                "position": 1190
            },
            {
                "img": "https://arxiv.org/html/2505.21070/x9.png",
                "caption": "Figure 9:The influence of different number of blocks on the scaling ability ofDualParal. Experiments are conducted on Wan2.1-1.3B (480p) using RTX4090s. To better illustrate the scaling behavior, we normalize each line. The black line represents the ideal scaling trend-proportional to the number of GPUs.",
                "position": 1224
            }
        ]
    },
    {
        "header": "Appendix ATechnical Appendices and Supplementary Material",
        "images": []
    }
]