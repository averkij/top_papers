[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.15254/x1.png",
                "caption": "Figure 1:Example of a CRUST-Bench task:btree-map.Top:The task specification provided by CRUST-Bench, including the C source code (left), a safe Rust interface (middle), and Rust test cases (right). The C code implements thefind_valuefunction, which traverses a B-tree map to locate the value for a given key. This implementation relies heavily on raw pointers (e.g.,key). In contrast, the Rust interface uses safe, structured types such asVec<u8>, requiring the transpiler to generate memory-safe, idiomatic Rust.Bottom right:The expected Rust implementation, representing the actual target of the transpilation task.Bottom left:Additional challenges of the transpilation task are highlighted, illustrating the complexity of translating low-level pointer operations to safe abstractions.",
                "position": 75
            }
        ]
    },
    {
        "header": "2Motivation and Related Benchmarks",
        "images": []
    },
    {
        "header": "3Benchmark Structure",
        "images": []
    },
    {
        "header": "4Experimental Setup: Models and Systems Evaluated",
        "images": []
    },
    {
        "header": "5Results and Analysis",
        "images": []
    },
    {
        "header": "6Related Work",
        "images": []
    },
    {
        "header": "7Conclusion",
        "images": []
    },
    {
        "header": "Acknowledgments",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix",
        "images": []
    },
    {
        "header": "Appendix ACode Coverage Analysis",
        "images": []
    },
    {
        "header": "Appendix BGreedy self-repair vs sample-and-repair",
        "images": []
    },
    {
        "header": "Appendix CPrompts",
        "images": []
    },
    {
        "header": "Appendix DAnalysis of the Self-Repair Pipeline",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.15254/x2.png",
                "caption": "Figure 3:Statistics of pipelined SWE-agent with a cost budget of $2. Left: Distribution of steps taken until submission/exit. We see that a majority of resolved test failures (∼similar-to\\sim∼80%) are addressed within the first 50 steps of SWE-agent, showcasing early converge when failures are recoverable. Right: Distribution of cost required to fix test failures successfully.",
                "position": 1717
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x3.png",
                "caption": "Figure 4:Statistics of pipelined SWE-agent with a cost budget of $4. Left: Distribution of steps taken until submission/exit. We see that a majority of tasks are addressed within the first 40 steps of SWE-agent, again showcasing early convergence, even with a higher cost, in cases where errors are recoverable. Right: Distribution of cost required to fix tests successfully. Only 1 task takes over $3.5 to be addressed.",
                "position": 1720
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x4.png",
                "caption": "(a)SWE-agent with $1 budget",
                "position": 1723
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x4.png",
                "caption": "(a)SWE-agent with $1 budget",
                "position": 1726
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x5.png",
                "caption": "(b)SWE-agent with $2 budget",
                "position": 1732
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x6.png",
                "caption": "(c)SWE-agent with $4 budget",
                "position": 1738
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x7.png",
                "caption": "(a)",
                "position": 1745
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x7.png",
                "caption": "(a)",
                "position": 1748
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x8.png",
                "caption": "(b)",
                "position": 1753
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x9.png",
                "caption": "(c)",
                "position": 1759
            },
            {
                "img": "https://arxiv.org/html/2504.15254/x10.png",
                "caption": "(d)",
                "position": 1764
            }
        ]
    },
    {
        "header": "Appendix EResults using SWE-Agent",
        "images": []
    }
]