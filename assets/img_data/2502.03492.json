[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.03492/x1.png",
                "caption": "Figure 1:Performance scaling of ourCTRLcritic (finetuned on Qwen2.5-Coder-32B-Ins, henceforth Qwen2.5-Coder) compared to other critics across different generators on CodeContests.CTRLdemonstrates strong critiquing capabilities not only when paired with its base model but also with a stronger generator (GPT-4o, right). Shaded regions indicate standard error across 5 seeds.",
                "position": 466
            },
            {
                "img": "https://arxiv.org/html/2502.03492/x2.png",
                "caption": "Figure 2:Illustration of the critique-correction process for a coding problem. Top: An initial solution is proposed by the task-performing using a min-heap approach. Bottom: The critic identifies flaws in the implementation (incorrect heap access and inefficient query handling) and suggests specific improvements, leading to a corrected max-heap solution. This example is taken from critiques ofCTRLon LiveCodeBench, which demonstrates how structured feedback from the critic can guide meaningful improvements in code generation.",
                "position": 471
            }
        ]
    },
    {
        "header": "2Preliminaries and Motivation",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.03492/x3.png",
                "caption": "Figure 3:Simulation results showing success probability (pcorrectsubscriptùëùcorrectp_{\\text{correct}}italic_p start_POSTSUBSCRIPT correct end_POSTSUBSCRIPT) as a function of the number of attempts, comparing different levels of critiquing and discrimination ability.",
                "position": 539
            }
        ]
    },
    {
        "header": "3Method",
        "images": []
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.03492/x4.png",
                "caption": "Figure 4:Compounding error analysis. Regression rate measures the frequency of correct initial solutions being revised into incorrect ones. Shaded regions indicate standard error over 5 seeds.",
                "position": 1199
            },
            {
                "img": "https://arxiv.org/html/2502.03492/x5.png",
                "caption": "Figure 5:Comparison of pass@1 rates by problem difficulty withCTRLcritics on CodeContests. Results are averaged over 5 seeds.",
                "position": 1202
            },
            {
                "img": "https://arxiv.org/html/2502.03492/x6.png",
                "caption": "Figure 6:Model performance comparison on JudgeBench.",
                "position": 1216
            },
            {
                "img": "https://arxiv.org/html/2502.03492/x7.png",
                "caption": "Figure 7:Comparison of solution similarities between original and revised code guided byCTRLon CodeContests. Left: Distribution of similarity scores for self-critique and ourCTRLmethod. Right: Box plot showing the statistical distribution of similarity scores. Lower scores indicate more substantial revisions.",
                "position": 1288
            }
        ]
    },
    {
        "header": "5Related Work",
        "images": []
    },
    {
        "header": "6Conclusion",
        "images": []
    },
    {
        "header": "Impact Statement",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix APipeline",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.03492/x8.png",
                "caption": "Figure 8:Overview of our two-stage training pipelineCTRL.",
                "position": 2072
            }
        ]
    },
    {
        "header": "Appendix BSupplementary Discussion of Related Work",
        "images": []
    },
    {
        "header": "Appendix CImplementation Details",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.03492/x9.png",
                "caption": "(a)The effect of the number of votes on the accuracy of majority voting in reward calculation. As the number of votes increases, the accuracy improves significantly, demonstrating the scalability and robustness of the majority voting approach.",
                "position": 2558
            },
            {
                "img": "https://arxiv.org/html/2502.03492/x9.png",
                "caption": "(a)The effect of the number of votes on the accuracy of majority voting in reward calculation. As the number of votes increases, the accuracy improves significantly, demonstrating the scalability and robustness of the majority voting approach.",
                "position": 2561
            },
            {
                "img": "https://arxiv.org/html/2502.03492/x10.png",
                "caption": "(b)Training curve of the value network in PPO, showing the mean predicted value over training steps.",
                "position": 2566
            }
        ]
    },
    {
        "header": "Appendix DThe Credit Assignment Issue for Critic Training",
        "images": []
    },
    {
        "header": "Appendix ECTRLSamples",
        "images": []
    }
]