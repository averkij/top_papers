[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction and Related Work",
        "images": [
            {
                "img": "https://arxiv.org/html/2509.19676/paper-fig.png",
                "caption": "Fig. 1:Description of our proposed method. During training, we allow the model to causally predict categories for every patch to get the patch-level category output. The trained model is frozen during inference, and the audio is fixed. We sample from the posterior probability category distribution of each patch multiple times (which we define as the length of the sampling trace of a patch) to get a reasoning trace. The trace is then used to understand the category using a frozen LLM reasoning model like GPT-OSS 20B or a frozen GPT-2 model with a new embedding matrix to aggregate and give accurate predictions for the audio.",
                "position": 52
            }
        ]
    },
    {
        "header": "2Methodology",
        "images": []
    },
    {
        "header": "3Dataset",
        "images": [
            {
                "img": "https://arxiv.org/html/2509.19676/TTS-ESC50.png",
                "caption": "Fig. 2:Results for Test Time Scaling For ESC50 dataset for frozen YAMNet and AST as a function of length of sampling trace, using GPT-2 and Qwen3-14B for category prediction.",
                "position": 98
            }
        ]
    },
    {
        "header": "4Experiments and Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2509.19676/TTS-FSD50K.png",
                "caption": "Fig. 3:Results on 1s chunks on FSD050K dataset for different length of sampling traces. We reason through the sampling trace with a frozen GPT-2 backbone, with trained embedding matrix with for baseline Audio Transformer, and backbone.",
                "position": 108
            }
        ]
    },
    {
        "header": "5Conclusion and Future Work",
        "images": []
    },
    {
        "header": "References",
        "images": []
    }
]