[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/teaser_v7.png",
                "caption": "",
                "position": 87
            }
        ]
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Works",
        "images": []
    },
    {
        "header": "3Method",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/qualitative_problem_solving_process_v3.png",
                "caption": "Figure 1:FirePlace pipeline.[Stage 1]FirePlace first generates a set of constraint outlines, describing in text from the applicable constraints and the corresponding interacting surfaces.[Stages 2-4]FirePlace then selects the anchor object using Batched Visual Selection on instance segmentation masks. It extracts the surfaces that best match the constraint outline, and then uses a constraint solver to produce feasible layouts.[Stage 5]Finally, it uses an MLLM to select a subset of placements that adhere to common sense principles.",
                "position": 180
            }
        ]
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/qualitative_samples_v5.png",
                "caption": "Figure 2:Qualitative samples of object placements (shown inredmasks) within 3D scenes based on language instructions. FirePlace can place diverse objects in a variety of settings, and produce geometrically feasible and semantically plausible object placements.",
                "position": 356
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/qualitative_vsholodeck_v2.png",
                "caption": "Figure 3:Comparisons against Holodeck.Holodeck fails to put the collection of books onto the shelf (due to its bounding box representation), and produces many implausible placements due to incorrect selection of anchor objects using the caption-based selection method.",
                "position": 413
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/qualitative_vslayoutgpt_v2.png",
                "caption": "Figure 4:Comparisons against LayoutGPT.LayoutGPT produces implausible object placements with intersections, showing that LLMs often fail to accurately estimate object positions and should be guided by constraints, as done in FirePlace.",
                "position": 469
            }
        ]
    },
    {
        "header": "5Conclusion & Discussion",
        "images": []
    },
    {
        "header": "Acknowledgements",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "6System Limitations",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/general_failurecases.png",
                "caption": "Figure 5:Common failure modes.On the left, the placement of the object overlaps with preexisting objects, due to the constraint library not including a constraint to minimize intersections. In the middle, the placement of the chair was not constrained beyond contact to the ground, but additional constraints should have been generated (such as parallelism between the backs of the masked chair and the adjacent chair). On the right, the plausibility pruning step failed to remove implausible placements in the event of under-constrained placements (the bottom of the books are in contact with the table, but is overhanging), leading to a placement result that features the book floating over the edge of the table.",
                "position": 1430
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/bookshelf_failurecase.png",
                "caption": "Figure 6:When surface extraction is done in canonical space, but the object is rotated in world space.A failure case where a stack of books is placedunder a shelfbecause contact constraints were enforced for a upward-pointing (in the canonical space) surface of the shelf thathas been rotated by the artistin its final position in the world frame.",
                "position": 1436
            }
        ]
    },
    {
        "header": "7Societal Impact",
        "images": []
    },
    {
        "header": "8Design of Metrics",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/plausible_score_examples.png",
                "caption": "Figure 7:Examples of plausibility scores for different placements. The text prompts are shown on the left, and objects placed are shown on the right. A plausibility score of 4 is the maximum, and a 1 is the minimum. Refer toFigure20for the definitions of these scores.",
                "position": 1462
            }
        ]
    },
    {
        "header": "9Constraint Outline Generation",
        "images": []
    },
    {
        "header": "10Extraction of Anchor Objects",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/batched_visual_selection_process.png",
                "caption": "Figure 8:The batched visual selection process for a scene with only a few items. Here, the MLLM is tasked to find the anchor object corresponding to “the white cabinet” from a constraint outline generated. Each batch shows 3 options rendered in different colors (for batch size=3absent3=3= 3), and the MLLM chooses object instances that best match the description by indicating the color of the mask in each round. The chosen instances across each batch are merged and the process is repeated until only one object instance is chosen. This is done using the prompt shown inFigure23.",
                "position": 1479
            }
        ]
    },
    {
        "header": "11Extraction of Surfaces",
        "images": []
    },
    {
        "header": "12Parameter estimation",
        "images": []
    },
    {
        "header": "13Constraint functions",
        "images": []
    },
    {
        "header": "14Prompts and Constraint Functions for Holodeck and LayoutGPT",
        "images": []
    },
    {
        "header": "15Evaluation Dataset",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/histogram_count_per_scene.png",
                "caption": "Figure 9:Distributions of the number of objects (furniture and architectural elements) within the placement tasks used for evaluation.",
                "position": 1623
            }
        ]
    },
    {
        "header": "16Ablations",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/ablation_coat.png",
                "caption": "Figure 10:An example of the effects of ablations inTable3on the placements. In this example, FirePlace is tasked to place the coat into the closet.",
                "position": 1640
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/ablation_bottle.png",
                "caption": "Figure 11:An example of the effects of ablations inTable3on the placements. In this example, FirePlace is tasked to place the bottle on the cabinet.",
                "position": 1643
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/scaling_experiments.png",
                "caption": "Figure 12:Increasing the batch size within Batched Visual Selection leads to lower performance on placement tasks.",
                "position": 1650
            }
        ]
    },
    {
        "header": "17Performance on Image Inputs",
        "images": [
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/qualitative_IMAGEINPUT_samples.png",
                "caption": "Figure 13:Qualitative results of object placement when FirePlace is givenimageinputs of placement examples. Note how generated placements follow the semantics of object placements shown in the input image to varying degrees, but can vary in their final positions.",
                "position": 1661
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/ex1.png",
                "caption": "Figure 14:The constraints and interaction surfaces generated for the task of mounting a TV. For clarification, the contact constraint is enforced between the back of the TV and the wall (visualized as a plane). Note that there are multiple wall meshes within this scene (for instance, seeFigure8– blue in Batch 3 and cyan in Batch 2 are both alternatives), and that Batched Visual Selection chooses the correct one",
                "position": 1821
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/ex2.png",
                "caption": "Figure 15:To place the small table into the scene, the constraints generated first identifies a Contact constraint between the bottom of the table and the floor, then uses various CloseTo constraints to capture its rough position in the room - the final position generated is close to all 3 surfaces chosen.",
                "position": 1824
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/ex3.png",
                "caption": "Figure 16:Similar toFigure16, FirePlace enforces a contact constraint with the floor, then uses CloseTo constraints to restrict plausible placements.",
                "position": 1827
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/ex4.png",
                "caption": "Figure 17:Placing a piano into the room. FirePlace successfully discerns that the left and the right of the piano must be close to different things, and that the right side should be closer to the left of the curtains, and the left should be closer to the bed.",
                "position": 1830
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/ex5.png",
                "caption": "Figure 18:Placing the lamp in the living room is done by locating near-by objects and enforcing CloseTo constraints.",
                "position": 1833
            },
            {
                "img": "https://arxiv.org/html/2503.04919/extracted/6258802/assets/images/ex6.png",
                "caption": "Figure 19:The desk is L-shaped, meaning that in order to insert place the desktop, it must correctly extract the top of the desk, and not just use the top face of the desk’s bounding-box. We see here that it enforces Contact and NoOverhang constraints to the table, guides the placement according to other CloseTo constraints.",
                "position": 1836
            }
        ]
    },
    {
        "header": "18Using MLLMs to Compare FirePlace to Baselines",
        "images": []
    }
]