[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x1.png",
                "caption": "Figure 1:Given a 3D model, MagicArticulate can automatically generate the skeleton and skinning weights, making the model articulation-ready without further manual refinement.The input meshes are generated by Rodin Gen-1[50]and Tripo 2.0[1]. The meshes and skeletons are rendered using Maya Software Renderer[19].",
                "position": 122
            }
        ]
    },
    {
        "header": "2Related works",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x2.png",
                "caption": "(a)Word cloud of Articulation-XL categories.",
                "position": 174
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x2.png",
                "caption": "(a)Word cloud of Articulation-XL categories.",
                "position": 177
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x3.png",
                "caption": "(b)Breakdown of Articulation-XL categories.",
                "position": 182
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x4.png",
                "caption": "(c)Bone number distributions of Articulation-XL.",
                "position": 187
            }
        ]
    },
    {
        "header": "3Articulation-XL",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x5.png",
                "caption": "Figure 3:Some examples from Articulation-XL alongside examples of poorly defined skeletons that were curated out.",
                "position": 207
            }
        ]
    },
    {
        "header": "4Methods",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x6.png",
                "caption": "Figure 4:Overview of our method for auto-regressive skeleton generation.Given an input mesh, we begin by sampling point clouds from its surface. These sampled points are then encoded into fixed-length shape tokens, which are appended to the start of skeleton tokens to achieve auto-regressive skeleton generation conditioned on input shapes. The input mesh is generated by Rodin Gen-1[50].",
                "position": 229
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x7.png",
                "caption": "Figure 5:Spatial sequence ordering versus hierarchical sequence ordering.The numbers indicate the bone ordering indices.",
                "position": 286
            }
        ]
    },
    {
        "header": "5Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x8.png",
                "caption": "Figure 6:Comparison of skeleton creation results on ModelsResource (left) and Articulation-XL (right).Our generated skeletons more closely resemble the artist-created references, while RigNet and Pinocchio struggle to handle various object categories.",
                "position": 427
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x9.png",
                "caption": "Figure 7:Skeleton creation results on 3D generated meshes.Our method has a better generalization performance than both RigNet[43]and Pinocchio[3]across difference object categories. The 3D models are generated by Tripo 2.0[1].",
                "position": 523
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x10.png",
                "caption": "Figure 8:Comparisons with previous methods for skinning weight prediction on ModelsResource (top) and Articulation-XL (bottom).We visualize skinning weights and L1 error maps. For more results, please refer to the supplementary materials.",
                "position": 526
            }
        ]
    },
    {
        "header": "6Conclusion",
        "images": []
    },
    {
        "header": "Acknowledgements",
        "images": []
    },
    {
        "header": "Overview",
        "images": []
    },
    {
        "header": "7More details of MagicArticulate",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x11.png",
                "caption": "Figure S9:Overview of the function diffusion architecture for skinning weight prediction.Given a set of noised skinning weight functions{(x,ft‚Å¢(x))‚à£x‚ààùí´}conditional-setùë•subscriptùëìùë°ùë•ùë•ùí´\\{(x,f_{t}(x))\\mid x\\in\\mathcal{P}\\}{ ( italic_x , italic_f start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT ( italic_x ) ) ‚à£ italic_x ‚àà caligraphic_P }, conditioned on skeleton and shape features from[52], we denoise the skinning weight functions to approximate the target weights.",
                "position": 774
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x12.png",
                "caption": "Figure S10:Process of adding noise to the skinning weight function.Givenx‚ààùí´ùë•ùí´x\\in\\mathcal{P}italic_x ‚àà caligraphic_Pand the original skinning weight functionf0‚Å¢(x)subscriptùëì0ùë•f_{0}(x)italic_f start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT ( italic_x ), we add the noise functiong‚Å¢(x)ùëîùë•g(x)italic_g ( italic_x )to obtain the noised functionft‚Å¢(x)subscriptùëìùë°ùë•f_{t}(x)italic_f start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT ( italic_x ).",
                "position": 777
            }
        ]
    },
    {
        "header": "8Additional experimental results",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x13.png",
                "caption": "Figure S11:Comparison of skeleton generation methods on out-of-domain data.The input meshes are from 3D generation, 3D scan, and 3D reconstruction.",
                "position": 803
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x14.png",
                "caption": "Figure S12:Comparison of skeleton generation methods on ModelsResource (left) and Articulation-XL (right).Our results more closely resemble the artist-created references, while RigNet and Pinocchio struggle to handle various object categories.",
                "position": 806
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x15.png",
                "caption": "Figure S13:Skeleton results on 3D models with different orientations.Although minor differences may appear in the generated skeletons, all results maintain anatomically valid and suitable for rigging purposes.",
                "position": 1006
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x16.png",
                "caption": "Figure S14:Comparison of skinning weight prediction methods on ModelsResource (first three rows) and Articulation-XL (last three rows).We visualize the predicted skinning weights alongside their corresponding L1 error maps.",
                "position": 1021
            }
        ]
    },
    {
        "header": "9More details of Articulation-XL",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x17.png",
                "caption": "Figure S15:Input instructions to VLM for data filtering.",
                "position": 1043
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x18.png",
                "caption": "Figure S16:Input instructions to VLM for category labeling.",
                "position": 1053
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x19.png",
                "caption": "Figure S17:Input rendered examples to VLM for data filtering.",
                "position": 1056
            },
            {
                "img": "https://arxiv.org/html/2502.12135/x20.png",
                "caption": "Figure S18:Input rendered examples to VLM for category labeling.",
                "position": 1059
            }
        ]
    },
    {
        "header": "10Limitations and future work",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.12135/x21.png",
                "caption": "Figure S19:Failure cases.When input meshes possess very coarse surfaces (3D reconstruction results from[33]), our generated skeleton may exhibit inaccuracies, such as imperfect connections between the dog‚Äôs trunk and legs.",
                "position": 1079
            }
        ]
    },
    {
        "header": "References",
        "images": []
    }
]