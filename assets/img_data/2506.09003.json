[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Preliminaries",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.09003/x1.png",
                "caption": "Figure 1:The framework ofSWE-Flow.Step 1:Given a codebase and its corresponding development environment, sweflow executes unit tests, constructs the project’s Runtime Dependency Graph (RDG), and generates a development schedule.Step 2:Based on the development schedule, sweflow removes the implementation of core functions covered by the current step’s test functions, forming an incomplete codebase for development. Additionally, it generates a development document based on the content of the test functions.",
                "position": 316
            }
        ]
    },
    {
        "header": "3SWE-Flow",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.09003/x2.png",
                "caption": "Figure 2:Examples of theReplace FormatandPatch Formatsolution.\nTheleftside presents an example of a Replace Format solution, which follows the GitHub merge conflict format.\nTherightside shows an example of a Patch Format solution, which can be directly generated using diff tools.",
                "position": 601
            },
            {
                "img": "https://arxiv.org/html/2506.09003/x3.png",
                "caption": "Figure 3:The evaluation framework ofSWE-Flow-Bench.Upper:A prompt containing the current codebase information, development document, and output format is sent to the LLM. The LLM generates a response based on the prompt’s requirements. A post-processing tool then extracts the solution from the LLM’s response, applies it to the codebase, and executes the corresponding unit tests to verify correctness.Lower:Given an incomplete codebase and a development document, an agent iteratively performs development until the task is completed or a preset iteration limit is reached. After the agent terminates, the corresponding unit tests are executed to assess the correctness of the development.",
                "position": 697
            }
        ]
    },
    {
        "header": "4SWE-Flow-Bench",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.09003/x4.png",
                "caption": "Figure 4:The overview of evaluation results of large language models on SWE-Flow-Bench (Lite). The x-axis represents the number of development tasks for which the solutions generated by LLMs successfully pass unit tests.",
                "position": 770
            }
        ]
    },
    {
        "header": "5Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.09003/x5.png",
                "caption": "Figure 5:Efficiency values of various LLMs integrated with OpenHands.\nEach axis represents a specific software engineering task, with values indicating the corresponding efficiency scores of the agent for that task.",
                "position": 887
            }
        ]
    },
    {
        "header": "6Discussion and Future Work",
        "images": []
    },
    {
        "header": "7Related Work",
        "images": []
    },
    {
        "header": "8Conclusion",
        "images": []
    },
    {
        "header": "Acknowledgments",
        "images": []
    },
    {
        "header": "Impact Statement",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AAdditional Related Work",
        "images": []
    },
    {
        "header": "Appendix BSWE-Flow-Bench",
        "images": []
    },
    {
        "header": "Appendix CContent of SWE-Flow-synthesized Data",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.09003/x6.png",
                "caption": "Figure 6:Content of the target test function and the requirement document generated by Qwen2.5-Coder-32B-Instruct based on it.",
                "position": 2378
            },
            {
                "img": "https://arxiv.org/html/2506.09003/x7.png",
                "caption": "Figure 7:Content of the target core function and the doc-string generated by Qwen2.5-Coder-32B-Instruct based on it.",
                "position": 2390
            },
            {
                "img": "https://arxiv.org/html/2506.09003/x8.png",
                "caption": "Figure 8:An example of a reference patch in synthetic data from sweflow.",
                "position": 2393
            }
        ]
    },
    {
        "header": "Appendix DFine-tuning Language Models",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.09003/x9.png",
                "caption": "Figure 9:The distribution of total tokens",
                "position": 2405
            }
        ]
    },
    {
        "header": "Appendix EDetailed Evaluation Results",
        "images": []
    },
    {
        "header": "Appendix FLimitations and Future Work",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.09003/x10.png",
                "caption": "Figure 10:An Runtime Dependency Graph (RDG) instance formdatasetsproject.",
                "position": 3139
            },
            {
                "img": "https://arxiv.org/html/2506.09003/x11.png",
                "caption": "Figure 11:An Runtime Dependency Graph (RDG) instance formdatasetsproject.",
                "position": 3142
            },
            {
                "img": "https://arxiv.org/html/2506.09003/x12.png",
                "caption": "Figure 12:An Runtime Dependency Graph (RDG) instance formdatasetsproject.",
                "position": 3145
            },
            {
                "img": "https://arxiv.org/html/2506.09003/x13.png",
                "caption": "Figure 13:An Runtime Dependency Graph (RDG) instance formdatasetsproject.",
                "position": 3148
            }
        ]
    },
    {
        "header": "Appendix GRuntime Dependency Graph",
        "images": []
    }
]