[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Preliminaries",
        "images": []
    },
    {
        "header": "3Methods",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.01666/x1.png",
                "caption": "Figure 1:Multimodal quantum circuit synthesis pipeline scheme.a)An input circuit is first tokenized and then embedded into two separate modes, from which the forward and backward diffusion processes are defined.b)Schematic of the generative model. SeeSection3.1andSection3.2for details.",
                "position": 283
            },
            {
                "img": "https://arxiv.org/html/2506.01666/x2.png",
                "caption": "Figure 2:Noise schedules and loss weighting.a)Averaged Hamming distance between an initial token𝐡0subscript𝐡0\\mathbf{h}_{0}bold_h start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPTand the decoded embedding of𝐡tsubscript𝐡𝑡\\mathbf{h}_{t}bold_h start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPTover the diffusion timet𝑡titalic_t. Dashed lines represent target schedules and solid lines represent the learned ones (seeSection3.3).b)Circular loss between initial parameterλ𝜆\\mathbf{\\lambda}italic_λand the decoded parameterλ^tsubscript^𝜆𝑡\\hat{\\lambda}_{t}over^ start_ARG italic_λ end_ARG start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPTover the diffusion timet𝑡titalic_tfor different noise schedules.c)Loss weighting for the discrete (ωh⁢(t)subscript𝜔ℎ𝑡\\omega_{h}(t)italic_ω start_POSTSUBSCRIPT italic_h end_POSTSUBSCRIPT ( italic_t )) and continuous (ωw⁢(t)subscript𝜔𝑤𝑡\\omega_{w}(t)italic_ω start_POSTSUBSCRIPT italic_w end_POSTSUBSCRIPT ( italic_t )) modes used inEq.7over the diffusion time, chosen such that their total areas roughly match.",
                "position": 438
            },
            {
                "img": "https://arxiv.org/html/2506.01666/x3.png",
                "caption": "Figure 3:Compilation of random unitaries.a)Histogram of infidelities for 1024 unitaries and 128 circuits sampled per unitary (up to 16 gates).b)Histogram of minimum infidelity for each of the 1024 unitaries in a). The insets showcase the same plot but in logarithmic scale.c)Best infidelity over 128 circuits for unitaries of varying gate count and percentage of parameterized gates.",
                "position": 495
            }
        ]
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.01666/x4.png",
                "caption": "Figure 4:Hamiltonian evolution.a, b)Minimum infidelities over 128 circuits for different parameters of the Ising and XXZ Hamiltonian, respectively, atτ=0.25𝜏0.25\\tau=0.25italic_τ = 0.25.c)Minimum infidelities over 128 circuits for different evolution timesτ𝜏\\tauitalic_τfor both Hamiltonians with 3 qubits and various parameters, color matching the highlighted points in a and b panels. The vertical dashed is placed atτ=0.25𝜏0.25\\tau=0.25italic_τ = 0.25.",
                "position": 550
            },
            {
                "img": "https://arxiv.org/html/2506.01666/x5.png",
                "caption": "Figure 5:Circuit structure analysis.a, b, c)Gate distribution, angle distribution for the CP(θ𝜃\\thetaitalic_θ) gates and most recurring gate sequences for circuits generated for the 4-qubit QFT.c, d, f)andg, h, i)Gate distribution for two points of the phase space (see titles) and most recurring gate sequences for the Ising (left) and XXZ (right) Hamiltonians, each for 4-qubits.",
                "position": 581
            }
        ]
    },
    {
        "header": "5Discussion",
        "images": []
    },
    {
        "header": "Acknowledgments",
        "images": []
    },
    {
        "header": "Code and data availability",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.01666/x6.png",
                "caption": "Figure 6:Multimodal diffusion.Overview of the tokenization, embedding and forward diffusion process of our pipeline. SeeApp.AandApp.Bfor details.",
                "position": 625
            }
        ]
    },
    {
        "header": "Appendix AMultimodal diffusion details",
        "images": []
    },
    {
        "header": "Appendix BCircuit encoding and embedding",
        "images": []
    },
    {
        "header": "Appendix CDataset details",
        "images": []
    },
    {
        "header": "Appendix DTraining details",
        "images": []
    },
    {
        "header": "Appendix EInference details",
        "images": []
    },
    {
        "header": "Appendix FModel architecture",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.01666/x7.png",
                "caption": "Figure 7:Circuit Diffusion Transformer (CirDiT) architecture.a)Overview of the encoder-core-decoder structure. After passing the inputs through the encoder, the latent state is averaged across the qubit dimension, yielding a sequence of latent vectors. This sequence is then passed into the core transformer blocks, which inject the condition𝐜𝐜\\mathbf{c}bold_c. Finally, the core output is passed alongside a skip connection of the encoder to the decoder.b)Design of the encoder blocks.c)Design of the core blocks. The condition𝐜𝐜\\mathbf{c}bold_cis passed through a multimodal full attention layer, where we concatenate the output of the previous layer with𝐜𝐜\\mathbf{c}bold_c. Then, the output is split and the𝐜𝐜\\mathbf{c}bold_cportion is averaged and used as gating for the following AdaRMS layer.d)Design of the decoder blocks. The core output is utilized by scaling and shifting operations on the main branch.",
                "position": 1881
            }
        ]
    },
    {
        "header": "Appendix GUnitary encoder pre-training",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.01666/x8.png",
                "caption": "Figure 8:UnitaryCLIP.a)Overview of the contrastive unitary encoder pre-training.b)Conditioning of the diffusion model using the output of the unitary-prompt encoder as condition𝐜𝐜\\mathbf{c}bold_c.",
                "position": 1902
            }
        ]
    },
    {
        "header": "Appendix HAdditional figure parameters",
        "images": []
    },
    {
        "header": "Appendix ICircuit corruption test",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.01666/x9.png",
                "caption": "Figure 9:Circuit corruptions.a)Infidelity distribution for circuits with discrete corruptions (seeApp.I).b)Infidelity distribution for circuits with continuous corruption, as defined inEq.70.",
                "position": 2042
            }
        ]
    },
    {
        "header": "Appendix JHamiltonians",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.01666/x10.png",
                "caption": "Figure 10:QFT Gate-Pair Encodings.GPE (seeSection3.4) on generated circuits for the QFT unitary fora)3 qubits,b)4 qubits andc)5 qubits.\nThe rows correspond to the token depth (seeApp.K). The circuits shown represent the top-5 most occurring structures, from most occurring (left) to less often occurring (right).",
                "position": 2114
            },
            {
                "img": "https://arxiv.org/html/2506.01666/x11.png",
                "caption": "Figure 11:Ising Hamiltonian Gate-Pair Encodings.GPE (seeSection3.4) on generated circuits for the 4-qubit Ising Hamiltonian (defined inEq.72) evolution unitary forτ=0.25𝜏0.25\\tau=0.25italic_τ = 0.25.\nWe use ina)circuits for the parametersh∈[0.5,0.9]ℎ0.50.9h\\in\\left[0.5,0.9\\right]italic_h ∈ [ 0.5 , 0.9 ]andJ=0𝐽0J=0italic_J = 0, and inb)J∈[0.5,0.9]𝐽0.50.9J\\in\\left[0.5,0.9\\right]italic_J ∈ [ 0.5 , 0.9 ]andh=0ℎ0h=0italic_h = 0. The rows correspond to the token depth (seeApp.K). The circuits shown represent the top-5 most occurring structures, from most occurring (left) to less often occurring (right).",
                "position": 2120
            },
            {
                "img": "https://arxiv.org/html/2506.01666/x12.png",
                "caption": "Figure 12:XXZ Hamiltonian Gate-Pair Encodings.GPE (seeSection3.4) on generated circuits for the 4-qubit XXZ Hamiltonian (defined inEq.73) evolution unitary forτ=0.25𝜏0.25\\tau=0.25italic_τ = 0.25.\nWe use ina)circuits for the parametersJ∈[0.5,0.9]𝐽0.50.9J\\in\\left[0.5,0.9\\right]italic_J ∈ [ 0.5 , 0.9 ]andΔ=0Δ0\\Delta=0roman_Δ = 0, and inb)J∈[0.5,0.9]𝐽0.50.9J\\in\\left[0.5,0.9\\right]italic_J ∈ [ 0.5 , 0.9 ]andΔ∈[0.5,0.9]Δ0.50.9\\Delta\\in\\left[0.5,0.9\\right]roman_Δ ∈ [ 0.5 , 0.9 ]. The rows correspond to the token depth (seeApp.K). The circuits shown represent the top-5 most occurring structures, from most occurring (left) to less often occurring (right).",
                "position": 2125
            }
        ]
    },
    {
        "header": "Appendix KAdditional GPE structures",
        "images": []
    }
]