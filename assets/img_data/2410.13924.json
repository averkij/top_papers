[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Works",
        "images": []
    },
    {
        "header": "3method",
        "images": [
            {
                "img": "https://arxiv.org/html/2410.13924/x1.png",
                "caption": "Figure 1:Dependency graph of the LabelMakerv2 pipeline.\nOur LabelMakerv2 pipeline has a clear dependency structure that has to be handled in the distributed processing of the data.\nThis has to be especially respected when recovering from job failure.\nThere, our recovery strategy checks for unfinished jobs in the dependency graph before submitting any new jobs to avoid unnecessarily wasting compute resources.\nThe boxes with thick yellow frame donotes visualizable tasks.\nThese are used during inspection and job quality assurance.",
                "position": 217
            }
        ]
    },
    {
        "header": "4Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2410.13924/extracted/5934858/figures/fireplace_rgb00.png",
                "caption": "Figure 2:Self-captured scenes and the semantic segmentation generated by LabelMakerv2. This figure shows visually appealing segmentation results, therefore illustrates the effectiveness of our pipeline. The color mapping is defined in original LabelMakerâ€™srepository.",
                "position": 705
            },
            {
                "img": "https://arxiv.org/html/2410.13924/extracted/5934858/figures/fireplace_label01.png",
                "caption": "",
                "position": 709
            },
            {
                "img": "https://arxiv.org/html/2410.13924/extracted/5934858/figures/kitchen_rgb00.png",
                "caption": "",
                "position": 711
            },
            {
                "img": "https://arxiv.org/html/2410.13924/extracted/5934858/figures/kitchen_label01.png",
                "caption": "",
                "position": 713
            }
        ]
    },
    {
        "header": "5Conclusion",
        "images": []
    },
    {
        "header": "Acknowledgement",
        "images": []
    },
    {
        "header": "ADataset and code download availability",
        "images": []
    },
    {
        "header": "BHead, common and tail split mIoU scores for ScanNet200",
        "images": []
    },
    {
        "header": "CDetailed process of applying LabelMaker to ARKitScenes",
        "images": []
    },
    {
        "header": "References",
        "images": []
    }
]