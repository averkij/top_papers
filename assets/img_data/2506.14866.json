[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.14866/x1.png",
                "caption": "Figure 1:Summary ofOS-Harm.We propose a benchmark for measuring safety of computer use agents across three general categories of harm.\nAn LLM judge grades the successful completion of tasks and the safety of agent behavior according to a detailed prompt, using execution traces that consist of agent reasoning steps, GUI screenshots, and summaries of accessibility trees.",
                "position": 131
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3OS-Harm: Benchmarking the Safety of Computer Use Agents",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.14866/x2.png",
                "caption": "Figure 3:Distribution of tasks by application.For the prompt injection attacks, applications are grouped by injection vector (e.g., a base task in Chrome with a desktop-notification injection is categorized as “OS”).",
                "position": 265
            },
            {
                "img": "https://arxiv.org/html/2506.14866/x3.png",
                "caption": "Figure 4:Creation of prompt injection tasks.They are constructed by combining original OSWorld tasks with different injectionvectors(an email, docx document, etc.) and injectiongoals(upload files to an external website, run‘sudo rm -rf /’, etc.).",
                "position": 301
            }
        ]
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.14866/x4.png",
                "caption": "Figure 5:Effectiveness of a simple jailbreak template.We study the impact of our static “ignore-all-restrictions” jailbreak template on safety and task completion across five models for deliberate misuse tasks.",
                "position": 544
            },
            {
                "img": "https://arxiv.org/html/2506.14866/x5.png",
                "caption": "",
                "position": 547
            }
        ]
    },
    {
        "header": "5Discussion and Future Work",
        "images": []
    },
    {
        "header": "Acknowledgements",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AExperimental Details",
        "images": []
    },
    {
        "header": "Appendix BAdditional Experiments and Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2506.14866/x6.png",
                "caption": "Figure 6:Comparison of different number of maximum steps ono4-mini.Running agents for longer leads to better completion rate only in some cases, but overall does not affect the main findings fromTable2.",
                "position": 1503
            },
            {
                "img": "https://arxiv.org/html/2506.14866/x7.png",
                "caption": "",
                "position": 1506
            },
            {
                "img": "https://arxiv.org/html/2506.14866/x8.png",
                "caption": "Figure 7:Breakdown of safety and success rate.We show a breakdown by subcategory and applications used in the tasks based on ourmanualannotation ofo4-miniexecution traces from the user misuse category.",
                "position": 1517
            },
            {
                "img": "https://arxiv.org/html/2506.14866/x9.png",
                "caption": "",
                "position": 1520
            }
        ]
    },
    {
        "header": "Appendix CSystem Prompts",
        "images": []
    },
    {
        "header": "Appendix DExamples of Tasks",
        "images": []
    }
]