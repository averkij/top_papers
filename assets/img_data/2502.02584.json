[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.02584/x1.png",
                "caption": "Figure 1:QLASS pipeline overview.QLASS involves mainly four stages:1)Supervised fine-tuning (SFT) on expert data.2)Leverage SFT agent to explore the environment and construct an exploration tree for each task. After construction, estimate the Q-value of each tree node based on Equation7.3)Train QNet on the estimated Q-values.4)Use the trained QNet to provide inference guidance at each step.",
                "position": 171
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3Preliminaries",
        "images": []
    },
    {
        "header": "4QLASS Pipeline Details",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.02584/x2.png",
                "caption": "Figure 2:Illustrative example of constructing a exploration tree. Grey nodes represent the branches with a zero outcome reward. Once the leaf node with a zero outcome reward is detected, aStop expansionsignal will be sent back to the first unexpanded node on the branch. Green nodes are on branches where zero outcome reward is not detected and can keep expanding.",
                "position": 360
            }
        ]
    },
    {
        "header": "5Experiment",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.02584/x3.png",
                "caption": "Table 2:Performance of all the baselines on WebShop, SciWorld and ALFWorld. The table is divided into two sections: the first presents the results of closed-source agents and the second includes open-sourced agents.♠indicates the baseline based onGPT-4o. In each column, the best result isboldedand the second-best result isunderlined.111",
                "position": 505
            },
            {
                "img": "https://arxiv.org/html/2502.02584/x3.png",
                "caption": "Figure 3:QLASS and Best-of-N under different search budgets. The x-axis represents the number of tokens consumed by the trajectories generated during inference averaged on all the tasks in each test set.",
                "position": 659
            },
            {
                "img": "https://arxiv.org/html/2502.02584/x4.png",
                "caption": "Figure 4:Self-training baselines. The three methods marked with diagonal stripes leverage different process reward modeling based on the same exploration trees constructed in Stage 2 to guide self-training data generation.",
                "position": 669
            },
            {
                "img": "https://arxiv.org/html/2502.02584/x5.png",
                "caption": "Figure 5:One example on the ALFWorld, the right isQLASS and the left is the SFT baseline.",
                "position": 682
            }
        ]
    },
    {
        "header": "6Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.02584/x6.png",
                "caption": "Figure 6:The instruction prompt provided to language agent on WebShop.",
                "position": 1706
            },
            {
                "img": "https://arxiv.org/html/2502.02584/x7.png",
                "caption": "Figure 7:The instruction prompt provided to language agent on SciWorld.",
                "position": 1709
            },
            {
                "img": "https://arxiv.org/html/2502.02584/x8.png",
                "caption": "Figure 8:The instruction prompt provided to language agent on ALFWorld.",
                "position": 1712
            },
            {
                "img": "https://arxiv.org/html/2502.02584/x9.png",
                "caption": "Figure 9:An illustrative example on task perturbation.",
                "position": 1715
            }
        ]
    },
    {
        "header": "Appendix AAppendix",
        "images": []
    }
]