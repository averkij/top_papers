[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Work",
        "images": [
            {
                "img": "https://arxiv.org/html/2501.03841/x1.png",
                "caption": "Figure 1:Overview framework.Given instruction and RGB-D observation marked by VFM, VLM firstly filters task-related objects and partitions the task into stages. For each stage, VLM extracts object-centric canonical interaction primitives as spatial constraints in a closed-loop manner. For execution, the trajectory is optimized by constraints and updated in a closed loop using a 6D Pose Tracker.",
                "position": 118
            }
        ]
    },
    {
        "header": "3Method",
        "images": [
            {
                "img": "https://arxiv.org/html/2501.03841/x2.png",
                "caption": "Figure 2:Interaction points generation.",
                "position": 168
            },
            {
                "img": "https://arxiv.org/html/2501.03841/x3.png",
                "caption": "Figure 3:Interaction directions extraction.",
                "position": 189
            }
        ]
    },
    {
        "header": "4Experiment",
        "images": [
            {
                "img": "https://arxiv.org/html/2501.03841/x4.png",
                "caption": "Figure 4:Stability analysis of interaction primitives.Visualization of planning and corresponding execution results across different methods, demonstrated using the ‘Pour tea’ as a case study.",
                "position": 571
            },
            {
                "img": "https://arxiv.org/html/2501.03841/x5.png",
                "caption": "Figure 5:Qualitative analysis of the impact of viewpoints on the performance, using‘Recycle the battery’as a case study.",
                "position": 576
            },
            {
                "img": "https://arxiv.org/html/2501.03841/x6.png",
                "caption": "Figure 6:Closed-planning. Self-correction mechanism via RRC.",
                "position": 618
            },
            {
                "img": "https://arxiv.org/html/2501.03841/x7.png",
                "caption": "Figure 7:Two typical failure cases without closed-loop execution.",
                "position": 656
            }
        ]
    },
    {
        "header": "5Conclusion",
        "images": []
    },
    {
        "header": "Acknowledgments",
        "images": []
    },
    {
        "header": "References",
        "images": []
    }
]