[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Diffusion models",
        "images": []
    },
    {
        "header": "3Methodology",
        "images": [
            {
                "img": "https://arxiv.org/html/2507.02608/x1.png",
                "caption": "Figure 1:Illustration of the latent-space emulation process. At each step of the autoregressive rollout, the diffusion model generates the nextn=4ùëõ4n=4italic_n = 4latent stateszi+1:i+nsuperscriptùëß:ùëñ1ùëñùëõz^{i+1:i+n}italic_z start_POSTSUPERSCRIPT italic_i + 1 : italic_i + italic_n end_POSTSUPERSCRIPTgiven the current statezisuperscriptùëßùëñz^{i}italic_z start_POSTSUPERSCRIPT italic_i end_POSTSUPERSCRIPTand the simulation parametersŒ∏ùúÉ\\thetaitalic_Œ∏. After rollout, the generated latent states are decoded to pixel space.",
                "position": 223
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x2.png",
                "caption": "Figure 2:Illustration of the denoiser‚Äôs inputs and outputs, while generating fromp‚Å¢(zi+1:i+n‚à£zi,Œ∏)ùëùconditionalsuperscriptùëß:ùëñ1ùëñùëõsuperscriptùëßùëñùúÉp(z^{i+1:i+n}\\mid z^{i},\\theta)italic_p ( italic_z start_POSTSUPERSCRIPT italic_i + 1 : italic_i + italic_n end_POSTSUPERSCRIPT ‚à£ italic_z start_POSTSUPERSCRIPT italic_i end_POSTSUPERSCRIPT , italic_Œ∏ ).",
                "position": 293
            }
        ]
    },
    {
        "header": "4Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2507.02608/x3.png",
                "caption": "Figure 3:Average VRMSE of the autoencoder reconstruction at different compression rates and lead time horizons for the Euler (left), RB (center) and TGC (right) datasets. The compression rate has a clear impact on reconstruction quality.",
                "position": 414
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x4.png",
                "caption": "",
                "position": 417
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x5.png",
                "caption": "",
                "position": 418
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x6.png",
                "caption": "Figure 4:Examples of latent-space emulation for the Euler (left) and Rayleigh-B√©nard (right) datasets. Even for large compression rates (√∑\\div√∑), latent-space emulators are able to reproduce the dynamics surprisingly faithfully, despite significant reconstruction artifacts. For Euler, wavefronts are accurately propagated until the end of the simulation, while vortices are well located, but distorted. For Rayleigh-B√©nard, plumes grow correctly until the fluid reaches a high-turbulence regime. Even though they diverge from the ground-truth, diffusion-based emulators produce statistically plausible trajectories. Similar observations can be made in Figures10to21.",
                "position": 428
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x7.png",
                "caption": "Figure 5:Average evaluation metrics of latent-space emulation for the Euler dataset. As expected from imperfect emulators, the emulation error grows with the lead time. However, the compression rate has little to no impact on emulation accuracy, beside high-frequency content. The spread-skill ratio[fortin2014why,price2025probabilistic]drops slightly with the compression rate, which could be a sign of overfitting. The diffusion-based emulators are consistently more accurate than neural solvers.",
                "position": 431
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x8.png",
                "caption": "Figure 6:Example of guided latent-space emulation for the RB (left) and TGC (right) datasets. The observations are the states downsampled by a factor 16 for RB and a stripe along the domain boundaries for TGC. Guidance is performed using the MMPS[rozet2024learning]method. Thanks to the additional information in the observations, the emulation diverges less from the ground-truth.",
                "position": 493
            }
        ]
    },
    {
        "header": "5Related work",
        "images": []
    },
    {
        "header": "6Discussion",
        "images": []
    },
    {
        "header": "Acknowledgments and Disclosure of Funding",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix ASpread / Skill",
        "images": []
    },
    {
        "header": "Appendix BExperiment details",
        "images": [
            {
                "img": "https://arxiv.org/html/2507.02608/x9.png",
                "caption": "Figure 7:Schematic representation of the autoencoder architecture. Downsampling (resp. upsampling) is performed with a space-to-depth (resp. depth-to-space) operation followed (resp. preceded) with a convolution initialized near identity.",
                "position": 817
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x10.png",
                "caption": "Figure 8:Average evaluation metrics of latent-space emulation for the Euler (top), RB (center) and TGC (bottom) datasets. As expected from imperfect emulators, the emulation error grows with the lead time. However, the compression rate has little to no impact on emulation accuracy. Mid and high-frequency content is limited by the the autoencoder‚Äôs reconstruction capabilities. The spread-skill ratio[fortin2014why,price2025probabilistic]drops slightly with the compression rate, which could be a sign of overfitting. The diffusion-based emulators are consistently more accurate than neural solvers.",
                "position": 1022
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x11.png",
                "caption": "",
                "position": 1026
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x12.png",
                "caption": "",
                "position": 1028
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x13.png",
                "caption": "Figure 9:Average evaluation metrics of latent-space emulation relative to the auto-encoded statesDœà‚Å¢(Eœà‚Å¢(xi))subscriptùê∑ùúìsubscriptùê∏ùúìsuperscriptùë•ùëñD_{\\psi}(E_{\\psi}(x^{i}))italic_D start_POSTSUBSCRIPT italic_œà end_POSTSUBSCRIPT ( italic_E start_POSTSUBSCRIPT italic_œà end_POSTSUBSCRIPT ( italic_x start_POSTSUPERSCRIPT italic_i end_POSTSUPERSCRIPT ) )for the Euler (top), RB (center) and TGC (bottom) datasets. As expected from imperfect emulators, the emulation error grows with the lead time. However, the compression rate has little to no impact on emulation accuracy. The spread-skill ratio[fortin2014why,price2025probabilistic]drops slightly with the compression rate, which could be a sign of overfitting. The diffusion-based emulators are consistently more accurate than neural solvers.",
                "position": 1032
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x14.png",
                "caption": "",
                "position": 1036
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x15.png",
                "caption": "",
                "position": 1038
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x16.png",
                "caption": "Figure 10:Examples of emulation at different compression rates (√∑\\div√∑) for the Euler dataset. In this simulation, the system has open boundary conditions.",
                "position": 1895
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x17.png",
                "caption": "",
                "position": 1898
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x18.png",
                "caption": "",
                "position": 1900
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x19.png",
                "caption": "",
                "position": 1901
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x20.png",
                "caption": "Figure 11:Examples of emulation at different compression rates (√∑\\div√∑) for the Euler dataset. In this simulation, the system has periodic boundary conditions.",
                "position": 1905
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x21.png",
                "caption": "",
                "position": 1908
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x22.png",
                "caption": "",
                "position": 1910
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x23.png",
                "caption": "",
                "position": 1911
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x24.png",
                "caption": "Figure 12:Examples of emulation at different compression rates (√∑\\div√∑) for the Euler dataset. In this simulation, the system has periodic boundary conditions.",
                "position": 1915
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x25.png",
                "caption": "",
                "position": 1918
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x26.png",
                "caption": "",
                "position": 1920
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x27.png",
                "caption": "",
                "position": 1921
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x28.png",
                "caption": "Figure 13:Examples of emulation at different compression rates (√∑\\div√∑) for the Euler dataset. In this simulation, the system has periodic boundary conditions.",
                "position": 1925
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x29.png",
                "caption": "",
                "position": 1928
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x30.png",
                "caption": "",
                "position": 1930
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x31.png",
                "caption": "",
                "position": 1931
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x32.png",
                "caption": "Figure 14:Examples of emulation at different compression rates (√∑\\div√∑) for the Rayleigh-B√©nard dataset. In this simulation, the fluid is in a low-turbulence regime (Ra=‚Å¢106RaE6\\mathrm{Ra}=${10}^{6}$roman_Ra = start_ARG end_ARG start_ARG ‚Å¢ end_ARG start_ARG power start_ARG 10 end_ARG start_ARG 6 end_ARG end_ARG).",
                "position": 1935
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x33.png",
                "caption": "",
                "position": 1938
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x34.png",
                "caption": "",
                "position": 1940
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x35.png",
                "caption": "",
                "position": 1941
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x36.png",
                "caption": "Figure 15:Examples of emulation at different compression rates (√∑\\div√∑) for the Rayleigh-B√©nard dataset. In this simulation, the fluid is in a high-turbulence regime (Ra=‚Å¢108RaE8\\mathrm{Ra}=${10}^{8}$roman_Ra = start_ARG end_ARG start_ARG ‚Å¢ end_ARG start_ARG power start_ARG 10 end_ARG start_ARG 8 end_ARG end_ARG).",
                "position": 1945
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x37.png",
                "caption": "",
                "position": 1948
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x38.png",
                "caption": "",
                "position": 1950
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x39.png",
                "caption": "",
                "position": 1951
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x40.png",
                "caption": "Figure 16:Examples of emulation at different compression rates (√∑\\div√∑) for the Rayleigh-B√©nard dataset. In this simulation, the fluid is in a low-turbulence regime (Ra=‚Å¢106RaE6\\mathrm{Ra}=${10}^{6}$roman_Ra = start_ARG end_ARG start_ARG ‚Å¢ end_ARG start_ARG power start_ARG 10 end_ARG start_ARG 6 end_ARG end_ARG).",
                "position": 1955
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x41.png",
                "caption": "",
                "position": 1958
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x42.png",
                "caption": "",
                "position": 1960
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x43.png",
                "caption": "",
                "position": 1961
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x44.png",
                "caption": "Figure 17:Examples of emulation at different compression rates (√∑\\div√∑) for the Rayleigh-B√©nard dataset. In this simulation, the fluid is in a high-turbulence regime (Ra=‚Å¢108RaE8\\mathrm{Ra}=${10}^{8}$roman_Ra = start_ARG end_ARG start_ARG ‚Å¢ end_ARG start_ARG power start_ARG 10 end_ARG start_ARG 8 end_ARG end_ARG).",
                "position": 1965
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x45.png",
                "caption": "",
                "position": 1968
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x46.png",
                "caption": "",
                "position": 1970
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x47.png",
                "caption": "",
                "position": 1971
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x48.png",
                "caption": "Figure 18:Examples of emulation at different compression rates (√∑\\div√∑) for the TGC dataset. In this simulation, the initial density is low and the initial temperature is low (œÅ0=0.445subscriptùúå00.445\\rho_{0}=0.445italic_œÅ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = 0.445,T0=10.0subscriptùëá010.0T_{0}=10.0italic_T start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = 10.0).",
                "position": 1975
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x49.png",
                "caption": "",
                "position": 1978
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x50.png",
                "caption": "",
                "position": 1980
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x51.png",
                "caption": "Figure 19:Examples of emulation at different compression rates (√∑\\div√∑) for the TGC dataset. In this simulation, the initial density is medium and the initial temperature is high (œÅ0=4.45subscriptùúå04.45\\rho_{0}=4.45italic_œÅ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = 4.45,T0=1000.0subscriptùëá01000.0T_{0}=1000.0italic_T start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = 1000.0).",
                "position": 1984
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x52.png",
                "caption": "",
                "position": 1987
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x53.png",
                "caption": "",
                "position": 1989
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x54.png",
                "caption": "Figure 20:Examples of emulation at different compression rates (√∑\\div√∑) for the TGC dataset. In this simulation, the initial density is high and the initial temperature is low (œÅ0=44.5subscriptùúå044.5\\rho_{0}=44.5italic_œÅ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = 44.5,T0=10.0subscriptùëá010.0T_{0}=10.0italic_T start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = 10.0).",
                "position": 1993
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x55.png",
                "caption": "",
                "position": 1996
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x56.png",
                "caption": "",
                "position": 1998
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x57.png",
                "caption": "Figure 21:Examples of emulation at different compression rates (√∑\\div√∑) for the TGC dataset. In this simulation, the initial density is high and the initial temperature is medium (œÅ0=44.5subscriptùúå044.5\\rho_{0}=44.5italic_œÅ start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = 44.5,T0=100.0subscriptùëá0100.0T_{0}=100.0italic_T start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT = 100.0).",
                "position": 2002
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x58.png",
                "caption": "",
                "position": 2005
            },
            {
                "img": "https://arxiv.org/html/2507.02608/x59.png",
                "caption": "",
                "position": 2007
            }
        ]
    },
    {
        "header": "Appendix CAdditional results",
        "images": []
    }
]