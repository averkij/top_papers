[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2411.02359/extracted/5969415/images/deer.png",
                "caption": "",
                "position": 69
            }
        ]
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Works",
        "images": []
    },
    {
        "header": "3Dynamic Early-Exit for Robotic MLLM",
        "images": [
            {
                "img": "https://arxiv.org/html/2411.02359/x1.png",
                "caption": "Figure 1:Left: Dynamic inference of DeeR. For inference, we adaptively activate an appropriate size of MLLM based on an exit criterioncùëêcitalic_c, which accounts for thecurrent situation(including task instructionlùëôlitalic_land observationotsubscriptùëúùë°o_{t}italic_o start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT) andpredefined computational and GPU memory budgets.\nThe language instruction and gripper camera image, not shown in this figure, are also inputs to the MLLM.\nAn action is then obtained using the intermediate featurex~tc‚Å¢(t)subscriptsuperscript~ùë•ùëêùë°ùë°\\tilde{x}^{c(t)}_{t}over~ start_ARG italic_x end_ARG start_POSTSUPERSCRIPT italic_c ( italic_t ) end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPTand historical information.Right: Training of DeeR.We randomly sample features from all exits during training. This strategy helps minimize the discrepancy between training and dynamic inference. Moreover, we employ several auxiliary action heads (AuxH) to better optimize the MLLM.",
                "position": 200
            },
            {
                "img": "https://arxiv.org/html/2411.02359/x2.png",
                "caption": "Figure 2:Multi-exit MLLM architecture for robot.",
                "position": 224
            }
        ]
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2411.02359/x3.png",
                "caption": "Figure 3:Results atop OpenFlamingo 3B.Upper: Avg. successful len v.s. avg. LLM GFLOPs.Bottom: Peak GLOPs and GPU memory for LLM.\nDifferent colors indicate different peak FLOPs and GPU memory budgets, denoted asDeeR-SandDeeR-B(they share a fixed model).\nDeeR preserve all the architecture and hyperparameters from RoboFlamingo++ for fair comparisons, except for our dynamic early-exit paradigm.",
                "position": 647
            },
            {
                "img": "https://arxiv.org/html/2411.02359/x4.png",
                "caption": "",
                "position": 651
            },
            {
                "img": "https://arxiv.org/html/2411.02359/x5.png",
                "caption": "Figure 4:Results on the top of OpenFlamingo 9B.Left: Avg. successful lenv.s.average LLM GFLOPs.Right: Maxinum GLOPs and GPU memory budget forDeeR-SandDeeR-B.\nThe activated LLM inDeeR-SandDeeR-Bconsumes 12GB memory, whereas RoboFlamingo 9B requires 32GB.",
                "position": 686
            },
            {
                "img": "https://arxiv.org/html/2411.02359/x6.png",
                "caption": "Figure 5:Visualization of DeeR rollouts in the CALVIN environment. Please zoom in to view details. The numbers indicate the termination exit index. Situations with a lower exit index are recognized as ‚Äòeasier‚Äô ones.",
                "position": 874
            }
        ]
    },
    {
        "header": "5Conclusion and Limitations",
        "images": []
    },
    {
        "header": "6Acknowledgement",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AImplementation Details",
        "images": []
    },
    {
        "header": "Appendix BMore Experimental Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2411.02359/x7.png",
                "caption": "Figure 6:Visualization of DeeR rollouts of five subtasks in a task chain.",
                "position": 2503
            }
        ]
    },
    {
        "header": "Appendix CBroader Impacts",
        "images": []
    },
    {
        "header": "NeurIPS Paper Checklist",
        "images": []
    }
]