[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.04295/extracted/6150185/fig/teaser6.png",
                "caption": "Figure 1:The crucial role of prompt formatting and its interaction with content.(A): Model-specific format biases: Illustrates the performance sensitivity of two LLMs to different format styles on the GSM8K task, showing substantial variability in the effectiveness of 10 randomly selected formats.(B): For seven different prompt contents evaluated across 24 distinct formats, performance variations show the complex, interdependent relationship between prompt content and structure, demonstrating that no single format universally maximizes effectiveness.",
                "position": 145
            },
            {
                "img": "https://arxiv.org/html/2502.04295/extracted/6150185/fig/pipeline3.png",
                "caption": "Figure 2:Illustration of the CFPO pipeline within a single iteration round. In the initial Component-wise Content Optimization stage, case-diagnosis and Monte-Carlo sampling are employed for content mutation. Subsequently, the Format Optimization stage identifies the most suitable format for each content candidate. The yellow dashed line indicates where the LLM optimizer is employed to guide the optimization process.",
                "position": 149
            },
            {
                "img": "https://arxiv.org/html/2502.04295/extracted/6150185/fig/template2.png",
                "caption": "Figure 3:An illustrative example of our Structured Prompt Template. This template systematically organizes the prompt into distinct components, each serving a specific functional role. When formulating a prompt, the template first employs a Query format to present examples and queries, and then integrates all content components via the Prompt Renderer to construct the comprehensive prompt string.",
                "position": 161
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.04295/extracted/6150185/fig/formats5.png",
                "caption": "Figure 4:Built-in formats and rendering effects in our initial format pool. The final format configuration is achieved by selecting and combining elements from both thePrompt Rendererand theQuery Formatcategories.",
                "position": 201
            }
        ]
    },
    {
        "header": "3CFPO: Content-Format Integrated Prompt Optimization",
        "images": []
    },
    {
        "header": "4Experiments",
        "images": []
    },
    {
        "header": "5Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AAppendix: Detailed Optimization Process and Meta-Prompts",
        "images": []
    },
    {
        "header": "Appendix BAppendix: Examples of Generated Format",
        "images": []
    },
    {
        "header": "Appendix CAppendix: Initial Prompt",
        "images": [
            {
                "img": "https://arxiv.org/html/2502.04295/extracted/6150185/fig/results.png",
                "caption": "Figure 5:Overview of in-context examples and text lengths for various tasks and models.",
                "position": 2241
            }
        ]
    },
    {
        "header": "Appendix DAppendix: CFPO Results Analysis",
        "images": []
    }
]