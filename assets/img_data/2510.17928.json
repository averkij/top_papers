[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.17928/x1.png",
                "caption": "Figure 1:Overview of EvoSyn, a task-agnostic pipeline for synthesizing verifiable data. From a small human-verified seed data, an evolutionary process discovers a data-filtering strategy via a consistency-based evaluator; this strategy then guides synthesis by generating candidate solutions and tests for new problems, cross-executing them to rank and retain reliable instances while discarding trivial or inconsistent ones. The resulting verifiable dataset (problems, tests, and strong solutions) supports training in diverse tasks.",
                "position": 114
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3Methodology",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.17928/x2.png",
                "caption": "Figure 2:Given an initial strategy, the evolutionary algorithm iteratively optimizes it across multiple iterations. Each newly generated strategy is evaluated against our two criteria to determine its effectiveness. The model autonomously explores diverse optimization approaches, ensuring a balance between exploration and exploitation throughout the process.",
                "position": 160
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/best_code.png",
                "caption": "Figure 3:The best strategy explored by model on LiveCodeBench.",
                "position": 194
            }
        ]
    },
    {
        "header": "4Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.17928/figs/evolve_process.png",
                "caption": "((a))",
                "position": 229
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/evolve_process.png",
                "caption": "((a))",
                "position": 240
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/count_distribution.png",
                "caption": "((b))",
                "position": 246
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/reward_comparison_80steps_llama-3-1-8b.png",
                "caption": "((a))",
                "position": 452
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/reward_comparison_80steps_llama-3-1-8b.png",
                "caption": "((a))",
                "position": 455
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/3reward_comparison_80steps.png",
                "caption": "((b))",
                "position": 461
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/reward_comparison_40steps_qwen3-4b.png",
                "caption": "((c))",
                "position": 467
            }
        ]
    },
    {
        "header": "5Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": [
            {
                "img": "https://arxiv.org/html/2510.17928/x3.png",
                "caption": "Figure 6:Prompt for testing generation on LiveCodeBench.",
                "position": 1125
            },
            {
                "img": "https://arxiv.org/html/2510.17928/x4.png",
                "caption": "Figure 7:Prompt for testing generation on AgentBench-OS QA task.",
                "position": 1128
            },
            {
                "img": "https://arxiv.org/html/2510.17928/x5.png",
                "caption": "Figure 8:Prompt for testing generation on AgentBench-OS Execution task.",
                "position": 1131
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/test_count_distribution.png",
                "caption": "Figure 9:Unit-test count distribution per synthesized problem (mean11.511.5); includes long-input edge cases.",
                "position": 1141
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/example_code4.png",
                "caption": "Figure 10:TF-IDF-like approach. Solutions that pass difficult testings receive higher scores, where difficulty is defined as testings passed by only a few solutions.",
                "position": 1151
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/example_code3.png",
                "caption": "Figure 11:Coverage-based approach. Solutions are rewarded simply for passing more testings, while testing quality is measured by its discriminative power (i.e., the score gap between solutions that pass and those that fail).",
                "position": 1154
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/example_code1.png",
                "caption": "Figure 12:Inverse filtering approach. Contrary to the initial strategy, testings that fewer solutions can pass are considered better.",
                "position": 1157
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/example_code2.png",
                "caption": "Figure 13:Exclusion-based approach. The contribution of a testing is measured without its own influence, by weighting solutions that pass all other testings.",
                "position": 1160
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/example_code5.png",
                "caption": "Figure 14:Hardness-Aware approach. Solutions are ranked by test strictness and pass count, penalizing all-or-none tests to select the strongest solution and most discriminative tests.",
                "position": 1163
            },
            {
                "img": "https://arxiv.org/html/2510.17928/figs/easy_problem.png",
                "caption": "Figure 15:An example of a trivial problem present inDEvoSynrelaxedD^{\\mathrm{EvoSyn^{relaxed}}}but not inDEvoSynD^{\\mathrm{EvoSyn}}, containing quesiton description and solution code.",
                "position": 1173
            }
        ]
    },
    {
        "header": "Appendix AAppendix",
        "images": []
    }
]