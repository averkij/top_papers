[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Terminology",
        "images": []
    },
    {
        "header": "3Threat Model",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.14534/extracted/6458473/figures/threat_model.png",
                "caption": "Figure 1:An example of an indirect prompt injection attack.",
                "position": 661
            }
        ]
    },
    {
        "header": "4Why Do We Need Specialized Automated Red-Teaming?",
        "images": []
    },
    {
        "header": "5Adversarial Techniques and Evaluation Setup",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.14534/x1.png",
                "caption": "(a)Actor Critic",
                "position": 774
            },
            {
                "img": "https://arxiv.org/html/2505.14534/x1.png",
                "caption": "(a)Actor Critic",
                "position": 777
            },
            {
                "img": "https://arxiv.org/html/2505.14534/x2.png",
                "caption": "(b)Beam Search",
                "position": 782
            },
            {
                "img": "https://arxiv.org/html/2505.14534/x3.png",
                "caption": "(c)TAP",
                "position": 788
            },
            {
                "img": "https://arxiv.org/html/2505.14534/x4.png",
                "caption": "(d)Linear generation",
                "position": 793
            },
            {
                "img": "https://arxiv.org/html/2505.14534/extracted/6458473/figures/short_sample.png",
                "caption": "Figure 3:A shortened sample from our dataset in the email and passport scenario (the full version is included atAppendixJ). Each trigger is generated given a specificscenariowhich, in this case, is email as the function calling capability (highlighted in yellow) and passport number as the private data type (in the non-JSON format), seeSection5.4. Each sample containsdifferentsynthetically generated conversation history that contains a different private data instance (“E70034442” above) of the corresponding type. The trigger is injected in a form of retrieved content by the first (legitimate) function call invoked by the user query. Gemini 2.0 (undefended) often gets tricked into exfiltrating the private data by invoking another (malicious) function call. On the other hand, Gemini 2.5 (adversarially fine-tuned) recognizes the potential attack and warns the user.",
                "position": 846
            }
        ]
    },
    {
        "header": "6Assessing Potential Vulnerabilties of an Undefended Model",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.14534/x5.png",
                "caption": "Figure 4:Attack success rate (ASR) against the number of queries to the target model (an undefended version of Gemini 2.0) to construct the trigger. We plot results against each of the three information types, two trigger formats, and two functions described inSection5.4, constructed using each of the three main attacks described inSection5.1.",
                "position": 1007
            }
        ]
    },
    {
        "header": "7Evaluating Defenses with Non-Adaptive Attacks",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.14534/x6.png",
                "caption": "Figure 5:Attack success rate (ASR) over different defenses undernon-adaptiveevaluations. For each attack (Section5.1) and defense, we plot the peak ASR achieved over all generated triggers. We also plot the number of queries to (undefended) Gemini 2.0 necessary to achieve this peak ASR during attack optimization.",
                "position": 1106
            }
        ]
    },
    {
        "header": "8Evaluating Defenses with Adaptive Attacks",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.14534/x7.png",
                "caption": "Figure 6:Attack success rate (ASR) (left) and number of queries (right) over different defenses underadaptiveandnon-adaptiveattacks. For each attack and defense combination, we plot the highest ASR achieved over all generated triggers. We also plot the number of queries to Gemini 2.0 necessary to achieve this ASR during attack optimization.",
                "position": 1152
            }
        ]
    },
    {
        "header": "9Improving the Gemini’s understanding of indirect prompt injections through adversarial fine-tuning",
        "images": []
    },
    {
        "header": "10Discussion",
        "images": []
    },
    {
        "header": "11Related Work",
        "images": []
    },
    {
        "header": "12Conclusion",
        "images": []
    },
    {
        "header": "13Contributions",
        "images": []
    },
    {
        "header": "14Acknowledgements",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AExamples of triggers generated by TAP, Actor Critic, Beam Search, and Linear Generation",
        "images": []
    },
    {
        "header": "Appendix BChallenges in Optimizing Prompt Injection Reward Signals under the Actor Critic Attack",
        "images": []
    },
    {
        "header": "Appendix CTabular version of results fromSection6",
        "images": []
    },
    {
        "header": "Appendix DTabular version of results fromSection7",
        "images": []
    },
    {
        "header": "Appendix ETabular version of results fromSection8",
        "images": []
    },
    {
        "header": "Appendix FBest-of-N style attacks",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.14534/x8.png",
                "caption": "(a)ASR",
                "position": 3138
            },
            {
                "img": "https://arxiv.org/html/2505.14534/x8.png",
                "caption": "(a)ASR",
                "position": 3141
            },
            {
                "img": "https://arxiv.org/html/2505.14534/x9.png",
                "caption": "(b)Score (P(target response | prompt + trigger))",
                "position": 3146
            }
        ]
    },
    {
        "header": "Appendix GAttention tracker",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.14534/x10.png",
                "caption": "Figure 8:The attention tracker approach clearly separates the distribution of benign and adversarial inputs.",
                "position": 3199
            }
        ]
    },
    {
        "header": "Appendix HA deep dive into baseline defense results in a non-adaptive evaluation setting on Gemini 1.5",
        "images": []
    },
    {
        "header": "Appendix IAttacks with languages other than English",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.14534/x11.png",
                "caption": "Figure 9:Attack success rate (ASR) of the translated vs. original trigger.",
                "position": 4262
            },
            {
                "img": "https://arxiv.org/html/2505.14534/extracted/6458473/figures/full_sample.png",
                "caption": "Figure 10:A full sample from our dataset in the email and passport scenario. Each trigger is generated given a specificscenariowhich, in this case, is email as the function calling capability (highlighted in yellow) and passport number as the private data type (in the non-JSON format), seeSection5.4. Each sample containsdifferentsynthetically generated conversation history that contains a different private data instance (“E70034442” above) of the corresponding type. The trigger is injected in a form of retrieved content by the first (legitimate) function call invoked by the user query. Gemini 2.0 (undefended) often gets tricked into exfiltrating the private data by invoking another (malicious) function call. On the other hand, Gemini 2.5 (adversarially fine-tuned) recognizes the potential attack and warns the user.",
                "position": 4287
            }
        ]
    },
    {
        "header": "Appendix JFull prompt example containing a malicious trigger",
        "images": []
    }
]