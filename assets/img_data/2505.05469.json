[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.05469/x1.png",
                "caption": "",
                "position": 132
            }
        ]
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Work",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.05469/x2.png",
                "caption": "Figure 2:StableText2Lego Dataset.(a) From a ShapeNetCore[2]mesh, we generate a LEGO design by voxelizing it onto a20×20×2020202020\\times 20\\times 2020 × 20 × 20grid and applying legolization to determine the brick layout. (b) We augment each shape with multiple structural variations by randomizing the brick layout while preserving the overall shape. (c) Stability analysis[37]is performed on each variation to filter out physically unstable designs. (d) To obtain the corresponding captions for each shape, we render the LEGO design from 24 different viewpoints and use GPT-4o[1]to generate detailed geometric descriptions. (e) Data samples from 5 categories in our StableText2Lego dataset.",
                "position": 200
            }
        ]
    },
    {
        "header": "3Dataset",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.05469/x3.png",
                "caption": "Figure 3:Method.(a) Our system tokenizes a LEGO design into a sequence of text tokens, ordered in a raster-scan manner from bottom to top. (b) We create an instruction dataset pairing brick sequences with descriptions to fine-tune LLaMA-3.2-Instruct-1B. (c) At inference time,LegoGPTgenerates LEGO designs incrementally by predicting one brick at a time given a text prompt. For each generated brick, we perform validity checks to ensure it is well-formatted, exists in our brick library, and does not collide with existing bricks. After completing the design, we verify its physical stability. If the structure is unstable, we roll back to the stable state by removing all the unstable bricks and their subsequent ones and resume generation from that point.",
                "position": 238
            }
        ]
    },
    {
        "header": "4Method",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.05469/x4.png",
                "caption": "Figure 4:Force Model.(a) We consider all forces exerted on a single brick, including gravity (black), vertical forces with the top brick (red/blue) and bottom brick (green/purple), and horizontal (shear) forces due to knob connections (cyan), and adjacent bricks (yellow). (b) The structural force modelℱℱ\\mathcal{F}caligraphic_Fextends the individual force model to multiple bricks. Solving for static equilibrium inℱℱ\\mathcal{F}caligraphic_Fdetermines each brick’s stability score.",
                "position": 338
            },
            {
                "img": "https://arxiv.org/html/2505.05469/x5.png",
                "caption": "Table 1:Quantitative Analysis.We evaluate our method against several baselines on validity (no out-of-library, out-of-bounds, or colliding bricks), stability, and CLIP-based text similarity. Stability and CLIP score are computed over valid designs only. For LLaMA-Mesh[78], validity requires a well-formed OBJ file. Our method outperforms all baselines as well as the ablated setups on validity and stability using our proposed rejection sampling and rollback, while maintaining high text similarity.",
                "position": 530
            },
            {
                "img": "https://arxiv.org/html/2505.05469/x5.png",
                "caption": "Figure 5:Result gallery and baseline comparisons.Our method can generate high-quality, diverse, and novel LEGO designs aligned with the given text prompts. Black bricks are colliding. For LLaMA-Mesh[78], LGM[68], XCube[60], and Hunyuan3D-2[86], an inset of the generated mesh before legolization is shown.",
                "position": 642
            },
            {
                "img": "https://arxiv.org/html/2505.05469/x6.png",
                "caption": "Figure 6:Ablation study.Brick-by-brick rejection sampling and physics-informed rollback help to ensure that the generated LEGO design is both valid and stable. Black indicates colliding bricks.",
                "position": 710
            },
            {
                "img": "https://arxiv.org/html/2505.05469/x7.png",
                "caption": "Figure 7:Textured and Colored LEGO Generation.Our method can generate diverse textured (top two rows) and colored (bottom) LEGO models based on the same shape while using different appearance text prompts.",
                "position": 713
            },
            {
                "img": "https://arxiv.org/html/2505.05469/x8.png",
                "caption": "Figure 8:Automated Assembly.Demonstrations of automated assembly of generated LEGO structures using robots.",
                "position": 716
            }
        ]
    },
    {
        "header": "5Experiments",
        "images": []
    },
    {
        "header": "6Discussion and Limitations",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix",
        "images": []
    },
    {
        "header": "Appendix ALegoGPTImplementation Details",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.05469/x9.png",
                "caption": "Figure 9:Given a prompt and several example LEGO designs in text format, a pre-trained LLaMA model can generate LEGO designs with some structure.",
                "position": 2056
            },
            {
                "img": "https://arxiv.org/html/2505.05469/x10.png",
                "caption": "Figure 10:Novelty analysis.For each structure generated byLegoGPT, we find the closest structure in the training dataset as measured by Chamfer distance in voxel space. The generated structures are distinct from their nearest neighbors, indicating low memorization.",
                "position": 2059
            }
        ]
    },
    {
        "header": "Appendix BRobotic Assembly",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.05469/x11.png",
                "caption": "Figure 11:Manual Assembly.Demonstrations of manual assembly of generated LEGO structures.",
                "position": 2133
            }
        ]
    },
    {
        "header": "Appendix CManual Assembly",
        "images": []
    }
]