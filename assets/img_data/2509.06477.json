[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2509.06477/images/teaser.png",
                "caption": "Figure 1:Workflow of GUI Only vs. GUI-Shortcut Hybrid Agent.Shortcuts improve agent execution efficiency by bypassing GUI operations.",
                "position": 165
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3MAS-Bench",
        "images": [
            {
                "img": "https://arxiv.org/html/2509.06477/images/api_deeplink_rpa.png",
                "caption": "Figure 2:Functional Comparison of APIs, Deep-Links, and RPA Scripts.The figure uses the Amazon app as an example: (a) theopen_cart()API call directly opens the shopping cart; (b) thesearch_product()deep-link directly performs a product search; and (c) an RPA script combines APIs, deep links, and GUI operations to automate a complete workflow.",
                "position": 451
            },
            {
                "img": "https://arxiv.org/html/2509.06477/x1.png",
                "caption": "Figure 3:Evaluation Workflow for Agentsâ€™ Shortcut Generation Capability.The process consists of two stages: (a) Shortcut Generation Stage, where the agent creates its shortcut knowledge base; and (b) Quality Evaluation Stage. The Agent-generated shortcuts is imported into a baseline agent for performance testing. The quality of the Agent-generated shortcuts is then measured by comparing this performance against the GUI-only baseline agent and the baseline agent with predefined shortcuts.",
                "position": 481
            },
            {
                "img": "https://arxiv.org/html/2509.06477/images/pipeline.png",
                "caption": "Figure 4:The pipeline of MAS-Bench. The GUI-Shortcut agent first filters products using thesearch_productshortcut, selects an item via GUI operations, and then adds it to the cart using theadd_to_cartshortcut. The entire process is monitored by an automated evaluation module, which outputs metrics such as success rate and efficiency.",
                "position": 487
            }
        ]
    },
    {
        "header": "4MAS: Shortcut-Augmented Hybrid Agents",
        "images": []
    },
    {
        "header": "5Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2509.06477/x2.png",
                "caption": "Figure 5:Performance comparison of MAS-MobileAgent with and without shortcuts.The base models are Gemini-2.5-Pro and Gemini-2.0-Flash. Data points show the relationship between SR and MET for single-app and cross-app tasks, with circle size representing mean cost. Results demonstrate that shortcuts benefit both models, with more significant improvements for the weaker Gemini-2.0-Flash.",
                "position": 885
            }
        ]
    },
    {
        "header": "6Conclusion",
        "images": []
    },
    {
        "header": "7Acknowledgments",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AMAS-Bench Environment",
        "images": []
    },
    {
        "header": "Appendix BDetails of Predefined Shortcut Evaluation",
        "images": []
    },
    {
        "header": "Appendix CDetails of Shortcut Generation Evaluation",
        "images": [
            {
                "img": "https://arxiv.org/html/2509.06477/x3.png",
                "caption": "Figure 6:Examples of the resulting shortcut types. Action Replay shortcuts (Task-Level and Subtask-Level) use a sequence of actions with fixed indices, while Dynamic Shortcuts use variable arguments that correspond to UI elements.",
                "position": 2351
            },
            {
                "img": "https://arxiv.org/html/2509.06477/x4.png",
                "caption": "Figure 7:Examples of GUI-shortcut hybrid agent failure cases. (a) Selection and Planning Error: The agent incorrectly invokes search_hotel() shortcut instead of searching for attractions, demonstrating failure in mapping natural language instructions to appropriate shortcuts. (b) Behavioral and Adaptation Error: The agent repeatedly calls open_shorts() shortcut instead of switching to a GUI-only action to select the video, showing an inability to adapt operational mode based on task state.",
                "position": 2369
            }
        ]
    },
    {
        "header": "Appendix DBad Case Analysis",
        "images": []
    }
]