[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Preliminary",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.04955/x1.png",
                "caption": "(a)Plain multiplication",
                "position": 324
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x1.png",
                "caption": "(a)Plain multiplication",
                "position": 327
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x2.png",
                "caption": "(b)CoT multiplication",
                "position": 332
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x3.png",
                "caption": "(c)Plain DP",
                "position": 337
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x4.png",
                "caption": "(d)CoT DP",
                "position": 342
            }
        ]
    },
    {
        "header": "3CoT Tokens Store Intermediate Results",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.04955/x5.png",
                "caption": "Figure 2:Model performance when non-result tokens are removed from CoT in multi-digit multiplication. Removing these tokens has little impact.",
                "position": 377
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x6.png",
                "caption": "Figure 3:The model structure used to reason with latent tokens. We use one-hot vectors as the latent embedding of latent tokens<LAT>. When the input token is a latent token, we use its projected latent embedding to replace the original input embedding. Correspondingly, a latent output head is added to predict the latent embedding of the next token from the last hidden state.",
                "position": 395
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x7.png",
                "caption": "(a)Multiplication",
                "position": 398
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x7.png",
                "caption": "(a)Multiplication",
                "position": 401
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x8.png",
                "caption": "(b)DP",
                "position": 406
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x9.png",
                "caption": "(a)Successful intervention",
                "position": 481
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x9.png",
                "caption": "(a)Successful intervention",
                "position": 484
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x10.png",
                "caption": "(b)Intervention with a shortcut error",
                "position": 489
            }
        ]
    },
    {
        "header": "4CoT Tokens are Mutable Variables",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.04955/x11.png",
                "caption": "(a)Success rate",
                "position": 528
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x11.png",
                "caption": "(a)Success rate",
                "position": 531
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x12.png",
                "caption": "(b)Error breakdown",
                "position": 536
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x13.png",
                "caption": "Figure 7:Demonstration of the alternative merging strategy. Each line refers to the compare-then-add state transfer function in the original setup. Nodes corresponding to the dashed boxes will not appear in the new CoT. It will cost at most 3 compare-then-add operations (redlines) to transfer states between new matrix tokens.",
                "position": 543
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x14.png",
                "caption": "Figure 8:Probing accuracy on different layers. Intermediate variable values can only be probed on late layers, regardless of the overall accuracy.",
                "position": 583
            },
            {
                "img": "https://arxiv.org/html/2505.04955/x15.png",
                "caption": "Figure 9:Accuracy breakdown by the scale of target values. When computational complexity between tokens exceeds a limit, the model will fail.",
                "position": 622
            }
        ]
    },
    {
        "header": "5Discussion",
        "images": []
    },
    {
        "header": "6Related Work",
        "images": []
    },
    {
        "header": "7Conclusion",
        "images": []
    },
    {
        "header": "Limitations",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix ADetails on Multiplication Task",
        "images": []
    },
    {
        "header": "Appendix BDetails on Dynamic Programming Task",
        "images": []
    },
    {
        "header": "Appendix CMain Experiment Settings",
        "images": []
    },
    {
        "header": "Appendix DLatent Experiment Settings",
        "images": []
    },
    {
        "header": "Appendix EIntervention Experiment Details",
        "images": []
    },
    {
        "header": "Appendix FProbing Experiment Details",
        "images": []
    }
]