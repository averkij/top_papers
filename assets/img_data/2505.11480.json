[
    {
        "header": "Abstract",
        "images": []
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2505.11480/x1.png",
                "caption": "Figure 1:Overview of the assembly code optimization task. Given a C program and its baseline assembly fromgcc -O3, an LLM is fine-tuned with Proximal Policy Optimization (PPO) to generate improved assembly. The reward function reflects correctness and performance based on test execution.",
                "position": 108
            }
        ]
    },
    {
        "header": "2Related Work",
        "images": []
    },
    {
        "header": "3Methodology",
        "images": []
    },
    {
        "header": "4Experimental Setup",
        "images": []
    },
    {
        "header": "5Results",
        "images": []
    },
    {
        "header": "6Discussion",
        "images": []
    },
    {
        "header": "7Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AAppendix",
        "images": []
    }
]