[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.19413/extracted/6393986/figures/mem0_logo_bw_long.png",
                "caption": "",
                "position": 133
            }
        ]
    },
    {
        "header": "1Introduction",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.19413/extracted/6393986/figures/main_figure.png",
                "caption": "Figure 1:Illustration of memory importance in AI agents.Left: Without persistent memory, the system forgets critical user information (vegetarian, dairy-free preferences) between sessions, resulting in inappropriate recommendations.Right: With effective memory, the system maintains these dietary preferences across interactions, enabling contextually appropriate suggestions that align with previously established constraints.",
                "position": 148
            }
        ]
    },
    {
        "header": "2Proposed Methods",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.19413/extracted/6393986/figures/mem0_pipeline.png",
                "caption": "Figure 2:Architectural overview of theMem0system showing extraction and update phase. The extraction phase processes messages and historical context to create new memories. The update phase evaluates these extracted memories against similar existing ones, applying appropriate operations through a Tool Call mechanism. The database serves as the central repository, providing context for processing and storing updated memories.",
                "position": 181
            },
            {
                "img": "https://arxiv.org/html/2504.19413/extracted/6393986/figures/mem0p_pipeline.png",
                "caption": "Figure 3:Graph-based memory architecture ofMem0gsuperscriptMem0ùëî\\texttt{Mem0}^{\\tiny g}Mem0 start_POSTSUPERSCRIPT italic_g end_POSTSUPERSCRIPTillustrating entity extraction and update phase. The extraction phase uses LLMs to convert conversation messages into entities and relation triplets. The update phase employs conflict detection and resolution mechanisms when integrating new information into the existing knowledge graph.",
                "position": 226
            }
        ]
    },
    {
        "header": "3Experimental Setup",
        "images": []
    },
    {
        "header": "4Evaluation Results, Analysis and Discussion.",
        "images": [
            {
                "img": "https://arxiv.org/html/2504.19413/extracted/6393986/figures/latency_search.png",
                "caption": "(a)Comparison ofsearchlatency at p50 (median) and p95 (95th percentile) across different memory methods (Mem0,Mem0gsuperscriptMem0ùëî\\texttt{Mem0}^{\\tiny g}Mem0 start_POSTSUPERSCRIPT italic_g end_POSTSUPERSCRIPT, best RAG variant, Zep, LangMem, and A-Mem). The bar heights represent J¬†scores (left axis), while the line plots show search latency in seconds (right axis scaled in log).",
                "position": 805
            },
            {
                "img": "https://arxiv.org/html/2504.19413/extracted/6393986/figures/latency_search.png",
                "caption": "(a)Comparison ofsearchlatency at p50 (median) and p95 (95th percentile) across different memory methods (Mem0,Mem0gsuperscriptMem0ùëî\\texttt{Mem0}^{\\tiny g}Mem0 start_POSTSUPERSCRIPT italic_g end_POSTSUPERSCRIPT, best RAG variant, Zep, LangMem, and A-Mem). The bar heights represent J¬†scores (left axis), while the line plots show search latency in seconds (right axis scaled in log).",
                "position": 808
            },
            {
                "img": "https://arxiv.org/html/2504.19413/extracted/6393986/figures/latency_total.png",
                "caption": "(b)Comparison oftotal responselatency at p50 and p95 across different memory methods (Mem0,Mem0gsuperscriptMem0ùëî\\texttt{Mem0}^{\\tiny g}Mem0 start_POSTSUPERSCRIPT italic_g end_POSTSUPERSCRIPT, best RAG variant, Zep, LangMem, OpenAI, full-context, and A-Mem). The bar heights represent J¬†scores (left axis), and the line plots capture end-to-end latency in seconds (right axis scaled in log).",
                "position": 814
            }
        ]
    },
    {
        "header": "5Conclusion and Future Work",
        "images": []
    },
    {
        "header": "6Acknowledgments",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix",
        "images": []
    },
    {
        "header": "Appendix APrompts",
        "images": []
    },
    {
        "header": "Appendix BAlgorithm",
        "images": []
    },
    {
        "header": "Appendix CSelected Baselines",
        "images": []
    }
]