[
    {
        "header": "Abstract",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.09192/x1.png",
                "caption": "Figure 1:D2F dLLMs surpass AR LLMs in inference speed for up to2.5×2.5\\times.Comparison of inference throughput among D2F dLLMs, vanilla dLLMs like Dream-Base-7B(Ye et al.,2025)and LLaDA-Instruct-8B(Nie et al.,2025), previous SOTA acceleration method Fast-dLLM(Wu et al.,2025), and similarly-sized AR baselines(Yang et al.,2024a; Grattafiori et al.,2024).\nThe max generation length is set to 512.",
                "position": 80
            },
            {
                "img": "https://arxiv.org/html/2508.09192/x2.png",
                "caption": "Figure 2:Throughput vs. performance trade-off.As shown, D2F achieves a more favorable trade-off compared to vanilla dLLMs.\nRefer to Section4.3for the details of the hyperparametersτadd\\tau_{\\text{add}}andτconf\\tau_{\\text{conf}}.",
                "position": 87
            }
        ]
    },
    {
        "header": "1Introduction",
        "images": []
    },
    {
        "header": "2Related Work",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.09192/x3.png",
                "caption": "Figure 3:An overview of discrete diffusion forcing (D2F).During training, the answer is divided into blocks with progressively increasing masking ratios. D2F dLLM is specified with a block-wise causal attention mask, and trained to mimic the prediction of a pre-trained bidirectional dLLM conditioned on partially denoised preceding tokens.\nThis enables inter-block parallel decoding with KV cache compatibility during inference.",
                "position": 153
            }
        ]
    },
    {
        "header": "3Preliminary: Diffusion Large Language Models (DLLMs)",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.09192/x4.png",
                "caption": "Figure 4:Visualization of the pipelined parallel decoding of D2F dLLMs.As shown, a pipeline of blocks are decoded in parallel.\nA new block is dynamically added when the completion ratio of the last block exceeds a thresholdτa​d​d\\tau_{add}(=13=\\frac{1}{3}here).\nThe new block is initially semi-activated and will transition to a fully-activated state when its predecessor reaches the completion thresholdτa​c​t\\tau_{act}(=56=\\frac{5}{6}here).\nThe fully-activated blocks differ from semi-activated ones in that they would decode multiple tokens in each step more aggressively.",
                "position": 205
            }
        ]
    },
    {
        "header": "4Method",
        "images": []
    },
    {
        "header": "5Experiments",
        "images": [
            {
                "img": "https://arxiv.org/html/2508.09192/x5.png",
                "caption": "Figure 5:Ablation study on the block size during inference.The block size for inference is tested with integer multiples of the training block size (16).\nAll experiments were conducted with a maximum length of 512,τconf=0.9\\tau_{\\text{conf}}=0.9,τadd=0.1\\tau_{\\text{add}}=0.1, andτact=0.95\\tau_{\\text{act}}=0.95.",
                "position": 895
            }
        ]
    },
    {
        "header": "6Conclusion",
        "images": []
    },
    {
        "header": "References",
        "images": []
    },
    {
        "header": "Appendix AAppendix",
        "images": []
    }
]