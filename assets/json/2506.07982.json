{
    "paper_title": "$τ^2$-Bench: Evaluating Conversational Agents in a Dual-Control Environment",
    "authors": [
        "Victor Barres",
        "Honghua Dong",
        "Soham Ray",
        "Xujie Si",
        "Karthik Narasimhan"
    ],
    "sections": [
        {
            "title": "Abstract",
            "content": "Existing benchmarks for conversational AI agents simulate single-control environments, where only the AI agent can use tools to interact with the world, while the user remains a passive information provider. This differs from real-world scenarios like technical support, where users need to actively participate in modifying the state of the (shared) world. In order to address this gap, we introduce $\\tau^2$-bench, with four key contributions: 1) A novel Telecom dual-control domain modeled as a Dec-POMDP, where both agent and user make use of tools to act in a shared, dynamic environment that tests both agent coordination and communication, 2) A compositional task generator that programmatically creates diverse, verifiable tasks from atomic components, ensuring domain coverage and controlled complexity, 3) A reliable user simulator tightly coupled with the environment, whose behavior is constrained by tools and observable states, improving simulation fidelity, 4) Fine-grained analysis of agent performance through multiple ablations including separating errors arising from reasoning vs communication/coordination. In particular, our experiments show significant performance drops when agents shift from no-user to dual-control, highlighting the challenges of guiding users. Overall, $\\tau^2$-bench provides a controlled testbed for agents that must both reason effectively and guide user actions."
        },
        {
            "title": "Start",
            "content": "5 2 0 2 9 ] . [ 1 2 8 9 7 0 . 6 0 5 2 : r τ 2-Bench: Evaluating Conversational Agents in Dual-Control Environment Victor Barres Sierra victor@sierra.ai Honghua Dong Sierra & University of Toronto & Vector Institute honghuad@cs.toronto.edu Soham Ray Sierra soham@sierra.ai Xujie Si University of Toronto & Vector Institute six@cs.toronto.edu Karthik Narasimhan Sierra karthik@sierra.ai"
        },
        {
            "title": "Abstract",
            "content": "Existing benchmarks for conversational AI agents simulate single-control environments, where only the AI agent can use tools to interact with the world, while the user remains passive information provider. This differs from real-world scenarios like technical support, where users need to actively participate in modifying the state of the (shared) world. In order to address this gap, we introduce τ 2-bench, with four key contributions: 1) novel Telecom dual-control domain modeled as Dec-POMDP, where both agent and user make use of tools to act in shared, dynamic environment that tests both agent coordination and communication, 2) compositional task generator that programmatically creates diverse, verifiable tasks from atomic components, ensuring domain coverage and controlled complexity, 3) reliable user simulator tightly coupled with the environment, whose behavior is constrained by tools and observable states, improving simulation fidelity, 4) fine-grained analysis of agent performance through multiple ablations including separating errors arising from reasoning vs communication/coordination. In particular, our experiments show significant performance drops when agents shift from no-user to dual-control, highlighting the challenges of guiding users. Overall, τ 2-bench provides controlled testbed for agents that must both reason effectively and guide user actions."
        },
        {
            "title": "Introduction",
            "content": "Existing benchmarks for conversational AI agents are designed to test their abilities to communicate effectively with user and perform the right sequence of actions to solve tasks [26, 14, 23, 19]. These benchmarks are inherently single-control environments, where the AI agent is able to interact with the world but the (simulated) user is limited to providing information about preferences and goals. In τ -bench [26] for example, the retail and airline domains test the agents ability to solve constraint satisfaction tasks, where constraints stem from combination of domain policy that the agent must follow and the users cognitive state including beliefs, goals and preferences. In such settings, the users understanding of the agents environment (including the set of actions the agent can take) is provided through carefully crafted natural language instructions that help ensure single, solvable path for the constraint satisfaction problem. While this enables easier task *Equal contribution. Work done during internship. 1Code and data are available at: https://github.com/sierra-research/tau2-bench. Preprint. Under review. Figure 1: Supporting dual-control environment in τ 2-bench. The agent have access to set of tools that interact with database, and is tasked with resolving the users request via Tool-Agent-User (TAU) interactions while adhering to the domain policy. To test real-world scenarios, the user is simulated by another AI agent given scenario-based instruction and set of tools that interact with its own database. The simulated user can be regarded as handling an easier version of the TAU interaction in dual format (Tool-User-Agent), where it only need to follow instructions but does not need to reason about solutions for the task. specification, the user can only perceive the agents actions through communication and reason about the environment state solely based on the initial instructions. This is quite different from real-world scenarios like technical customer support, where the user has to actively participate in taking some actions to diagnose and solve problems when asked to do so, such as restarting their phone or turning off airplane mode. In order to capture this additional real-world complexity, we introduce τ 2-bench with dual-control environment, where (LLM-simulated) users can take actions and call tools in addition to communicating with the agent. The dual-control model provides few advantages in improving the user simulation, such as selective information hiding, non-verbal manipulation of the environment, and easier specification of the users task or scenario, especially in cases where the structured format of tools is preferred to unstructured natural language. The primary challenge in dual-control setup lies in granting the user simulator meaningful agency via tools while maintaining the \"complexity asymmetry\" between the agent and the user simulator that is, making sure the users affordances are limited and the user still requires support from the agent in order to solve issues. While tools for the user simulator could disrupt this balance by increasing its capabilities, we find that carefully designing the tools can help constrain user behavior, leading to more reliable simulations. We achieve this by ensuring user tools yield only human-readable outputs, limiting user planning to reactive tool use based on agent requests, and tightly constraining user behavior through the environment. This results in controlled testbed for agents that must both think and effectively guide user to take the right actions. Overall, τ 2-bench makes four key contributions: Telecom dual-control domain. We introduce novel dual-control telecom domain within τ 2bench, where, unlike previous benchmarks, both the AI agent and the user possess distinct tools to observe, act upon, and verify the state of shared, dynamic environment. This is formalized using Decentralized Partially Observable Markov Decision Process (Dec-POMDP) [15]. This dual-control setup is designed to accurately represent real-world collaborative scenarios and exposes crucial agent coordination and communication challenges absent from evaluations where users have limited agency. Experiments show state-of-the-art LLMs struggle significantly in this domain (e.g., passˆ1 of 34% for gpt-4.1 [16], 42% for o4-mini [17], and 49% for claude-3.7-sonnet [2] on new tasks). Compositional task generator. τ 2-bench incorporates programmatic task generator that automatically composes vast and diverse set of verifiable tasks from small set of atomic base scenarios (defined by initialization, solution, and assertion functions). This method ensures provable correctness of tasks, provides complete domain coverage, allows for explicit control over task complexity (e.g., by number of solution steps or issue type), and removes the manual effort and potential brittleness associated with hand-crafted task suites. 2 Reliable user simulator. We enhance the reliability of the user simulation by tightly coupling the user simulator to the environment. User behavior is constrained by the available tools and the observable state of the environment, leading to more predictable and consistent interactions. This approach significantly alleviates the need for complex natural language prompting to guide the user simulator and results in substantially higher reliability (e.g., the telecom domains user simulator shows 16% error rate with 6% critical errors, compared to 40% error rate with 12% critical errors in the retail domain from τ -bench). Fine-grained diagnosis of agent failures. τ 2-bench enables decomposed diagnosis of agent performance by evaluating task success in different modes: (i) fully autonomous mode (no-user mode), where the agent controls all tools, isolating its reasoning capabilities, and (ii) the standard dual-control mode, which introduces communication and coordination requirements. Our findings reveal substantial performance decrease (around 20% pass ˆ 1) when agents must shift from autonomous operation to guiding user. This clearly distinguishes pure reasoning failures from those arising from communication and decentralized control, pinpointing the latter as critical bottleneck for current agents."
        },
        {
            "title": "2 Related Work",
            "content": "Benchmarks for Conversational AI Agents. Following long line of research into language agents [25, 27, 10, 13, 21], LLM tool use [24, 20, 9], and task-oriented dialog [5, 4, 1, 22, 6, 7, 8], τ -bench [26] is recently introduced benchmark to measure the reliability of language agents in multi-turn task-oriented conversations such as customer service workflows, while respecting domain rules. Each task in τ -bench instantiates live conversation between user simulator and the language agent, with tasks spread across two domains retail and airline. To quantify reliability the paper introduces passˆk metrics: the fraction of independent runs that succeed. Several follow-ups to τ -bench have explored variations of the basic setup. FlowBench [23] isolates the planning step of tool-using agents by injecting explicit workflow knowledge into the prompt, using natural language, python-like pseudocode or mermaid flowcharts. IntellAgent [12] provides an evaluation pipeline to programmatically build synthetic test suites from structured policy graphs that encode domain rules and their co-occurrence statistics. IntellAgent explicitly uses τ -bench as an external gold standard, reporting high Spearman correlation between the two score distributions, and acts as fast, synthetic proxy task. APIGen-MT [19] explores the idea of fine-tuning tool-calling agents for τ -bench. They generate data by creating conversation blueprints which are sequences of tool calls that depend on each other, followed by simulating conversational traces based on each blueprint. ToolSandbox [14] focuses on creating stateful tools in order to evaluate agent progress in more fine-grained manner. Our work extends the τ -bench paradigm and generalizes it to allow for both the user and agent to have state-changing abilities (via tool calls) over shared world. As demonstrated in the results, this allows us to build more complex domains to test conversational agents, while also providing the opportunity for fine-grained analysis of agent failure points that can be improved upon. User Simulation for Conversational Agents. The reliability of user simulation has been key concern for benchmarks like τ -bench [26]. While most efforts have focused on introducing supervision for the user simulator, for instance, by using generic LLM to generate or validate user responses [19], less attention has been paid to the possibility of using the environment itself to constrain and shape user simulator behavior for increased reliability, core tenet of our approach. This concern has been extensively studied in the context of task-oriented dialogue systems, with early work by [18] providing comprehensive survey of metrics for evaluating user simulations. More recently, [11] has demonstrated how LLMs can be effectively used as user-agents for evaluating task-oriented dialogue systems, showing that careful prompting and state tracking can lead to more reliable and context-aware user simulations. Multi-Agent Benchmarks. Our work is also related to efforts to build multi-agent frameworks and evaluate them [28]. While we can consider the user and the agent in our paper as forming multi-agent system, the key difference in our case is that the final evaluation still focuses on the agents ability to elicit the right information from the user and perform the correct actions to solve the task. This introduces an inherent asymmetry between the agent and the user; our focus is not on solving pure multi-agent problem but rather on the agents capability to effectively guide and collaborate with user who also possesses agency. In this sense, the framework can be collaborative (e.g., troubleshooting), competitive (e.g., negotiating subscription), or hybrid, requiring the agent to identify and navigate the scenario appropriately, even accounting for user mistakes or errors. 3 τ 2-bench: Evaluating Agents in Dual-Control Environment τ 2-bench serves as platform for systematic study of multi-turn interactions between conversational AI agent and simulated user. Dual-control interactions are modeled as Decentralized Partially Observable Markov Decision Process (Dec-POMDP) [15] where both the agent and user can communicate, use tools, and receive observations. This allows us to simulate complex scenarios like technical troubleshooting where agent and user must coordinate their actions to solve the task."
        },
        {
            "title": "3.1 The Dec-POMDP Formalism",
            "content": "As illustrated in Figure 1, the Dec-POMDP in τ 2-bench involves two players: an agent and user. The entire process is formally defined by the tuple (S, {Ai}, {Oi}, , R, U, M), where {agent, user} denotes players and each component in the tuple is detailed below, with illustrative examples drawn from the new telecom domain. Message space (M): The set of all possible (natural language) messages exchanged between the agent and the user. For example, the user could say cannot use mobile data. and the agent could respond with Could you check whether your airplane mode is on? State space (S): The global state = Sworld Shistory, where Sworld = Sdb,agent Sdb,user represents the underlying database states for the agent and user, and Shistory logs all interaction events (actions, observations, messages). For example, in the telecom domain, Sdb,agent might be CRM data (customer profiles, lines), while Sdb,user could be phone status. Action spaces (Ai): Player is action ai Ai is either tool call ai,tool Ai,tool (interacting with Sdb,i via function calls like tool_name(**kwargs)) or message mi M. Only one player acts per turn. In the telecom domain, the agent can access tools like get_customer_by_id(id) and the user can access tools like toggle_airplane_mode(). Observation spaces (Oi): Player is observation oi Oi is either tool observation oi,tool (e.g., data, messages, or errors from ai,tool) or message mj from player = i. Only one player receives an observation per turn. In the telecom domain, the agent might observe customer details from get_customer_by_id, and the user might observe message indicating the airplane mode has been turned off from toggle_airplane_mode. Transition function (T ): Defines system dynamics via : O. Given current state and joint action = (aagent, auser), it yields new state and joint observation = (oagent, ouser). Calling tool ai,tool Ai,tool may change Sworld and yield oi Oi,tool. Sending message mi yields oj = mi for = i. In both cases, includes updated Sworld and Shistory. For example, an agents action enable_roaming(customer_id, line_id) would update the world state (the roaming service for the specific line number is enabled), and users action toggle_airplane_mode would update the status of the mocked phone. Reward function (R): function : [0, 1] providing global reward based on the overall state (database states, history), signaling task success or failure. For example, in telecom, the agent is rewarded if users issue (\"no mobile data\") is fixed, as verified by the users database state. Instruction space (U): The instruction space defines the scenario guiding realistic user simulation, as well as the domain policies to which the agent must adhere when assisting the user. The Dec-POMDP formalism offers key advantages for simulating complex, interactive scenarios (see Figure 2 for an example trajectory of interactions). It enables realistic simulation of collaborative environments, such as technical support, where users execute tool actions guided by the agent. This presents agents with crucial coordination and communication challenges. Additionally, the formalism enhances user simulation reliability and control; by defining user tools and their effects on the user state, user behavior becomes more predictable and less reliant on extensive natural language prompting. 4 Figure 2: An example agent-user interaction trajectory (Shistory) of τ 2-bench in the telecom domain. By controlling the implementation of the user tools (the mocked phone), we can reliably simulate the users response to agents actionable instructions like checking the status bar and toggling data based on the underlying database state. On the right half, we show the possibility of modeling the impact of agents tool calls on the users database state, where the roaming service for the user is enabled on the agents end and therefore allows the users phone to roam. Table 1: Key statistics for the τ 2-bench domains. airline retail telecom Agent Databases Agent Tools User Tools Tasks 500 users, 50 products, 1,000 orders 7 write, 6 read - 115 500 users, 300 flights, 2,000 reservations 6 write, 6 read - 50 5 plans, 9 lines, 4 customers 6 write, 7 read 15 write, 15 read 114 (full: 2285)"
        },
        {
            "title": "3.2 Domain and task creation",
            "content": "Similar to τ -bench, we adopted multi-stage creation process to build domain-specific materials for new domains. This process, illustrated using the telecom domain, involves the following stages: Stage 1: Creating agents database schema and tools. We begin by prompting Large Language Models (LLMs) to generate Product Requirements Document (PRD) that outlines the domains core business logic. This PRD specifies the database schema and necessary functions. In the telecom domain, this involved defining customer CRM system with schemas for customers and lines, along with functions to manage them. An LLM then generates function implementations, mock database, and unit tests based on the PRD. We manually refine the generated code until all unit tests pass. Stage 2: Creating users database schema and tools. For troubleshooting scenarios, we similarly use an LLM to define the users database schema and tools. In the telecom domain, this included implementing mocked user phone device with status (e.g., signal strength) and functions (e.g., toggling airplane mode). Again, an LLM generates implementations, mock database, and unit tests, which are then manually refined until all tests pass. Stage 3: Programmatic task creation. We employ combinatorial approach to generate diverse, verifiable tasks from atomic building blocks. Each atomic subtask is about specific problem to be resolved, for example, airplane mode on leads to mobile data not working. Specifically, each subtask is defined as ({f init }), where ft,k is the k-th function call of the subtask that interacts with the agents or users database: t,k }, {f assert t,k }, {f sol t,k Initialization functions init t,k updating the database values. set_airplane_mode(True). specify calls to set up the initial task state, typically by in telecom, an initialization might be For instance, Solution functions sol t,k specify tool calls to resolve issues introduced by initialization. For example, toggle_airplane_mode() could be solution for the initialization example given above. Note that these must be tools available to the agent or user. 5 Assertion functions assert specify conditions the final state must meet for the task to be considered solved. For instance, assert_service_status(\"connected\") checks if the users service is active in telecom. t,k While solution functions sol can be any function in the relevant database. t,k are restricted to agent or user tools, initialization and assertion functions Atomic subtasks are grouped such that mutually exclusive or alternative subtasks are in the same group. composite task is created by selecting at most one subtask from each group, concatenating their respective function calls. Task correctness is automatically verified by checking if the final state satisfies all assertion functions after applying initialization and then solution functions. We also verify that the task is not resolved until all solution functions are applied. In the telecom domain, we developed 15 atomic subtask groups for 3 user intents of increasing complexity: service_issue, mobile_data_issue, and mms_issue. Combining these subtasks in programatic way yields 2285 tasks. We then subsample 114 tasks to form balanced distribution over different intents and numbers of subtasks (details in Appendix A). The number of subtasks in task serves as proxy for difficulty as more diagnostic and resolution steps are required. Stage 4: Creating domain-specific agent policy. Based on the curated tasks and their solutions, we prompt LLMs to generate domain-specific policies for the agent. For troubleshooting, these policies guide the agent in diagnosing and resolving user issues, often outlining step-by-step procedures for common problems related to each user intent, details in Appendix D.2. Stage 5: Manual refinement. We jointly refine all the domain materials including tools, policy and atomic subtasks to improve the quality of the domain. Moreover, compared to the original τ -bench, τ 2-bench enables developer to specifically associate task with Persona (a brief description of the users identity). We put this to use in our new domain. Each telecom domain task was randomly assigned one of the following personas: None, Easy, and Hard. The None persona means that no specific persona is provided to the user simulator. The Easy persona describe the profile of user who is rather familiar with the domain while the Hard persona represents more challenging user with low technical knowledge (see Appendix A.1)."
        },
        {
            "title": "3.3 Task evaluation",
            "content": "The success of task can be defined by different criteria: DB check, status assertions, natural language assertions, communication info check, and action matching. The DB check and communication info check are the same as the original τ -bench. The status assertion involves verifying specific conditions in the final world state Sworld using the predefined assertion functions (e.g., checking if service is connected). The natural language assertion involves verifying specific conditions in the final history state Shistory using natural language description, like the agent diagnosed the cause of the issue. The action matching involves verifying if every solution function sol t,k exists in the actual agent-user interaction trajectory. Practically, each task can specify subset of these criteria based on its features. In telecom, only assertion functions are used to evaluate task success."
        },
        {
            "title": "4.1 Agent settings",
            "content": "All LLM API calls are implemented using the Litellm package [3]. We evaluated four large language models: gpt-4.1-mini-2025-04-14, gpt-4.1-2025-04-14, o4-mini-2025-04-16, and claude-3-7-sonnet-20250219. The user simulator is implemented using gpt-4.1-2025-04-14. Each task is run four times, maintaining consistent LLM temperature of 0 to promote deterministic outputs. Both the agents and the user simulator are implemented as function-calling agents. All tools are provided to LLMs in the OpenAI tools format. The agent prompt includes generic guidelines along with domain-specific policies. Similarly, the user prompt contains generic guidelines supplemented by task-specific instructions. Both domain policies and prompts are available in Appendices and D. 6 Figure 3: pass ˆ metrics across all evaluated domains (airline, retail, telecom). Top Left: gpt-4.1, Top Right: o4-mini, Bottom Left: gpt-4.1-mini, Bottom Right: claude-3.7-sonnet. When the gpt-4.1-2025-04-14 agent is paired with the gpt-4.1-2025-04-14 user simulator, the average agent/user simulation costs are $0.086/$0.059 per task, respectively. The cost of running all domains for 1 trial per task is approximately $40."
        },
        {
            "title": "4.2 Results",
            "content": "Pass^k scores. We computed performance metrics on the verified τ 2-bench domains (retail and airline) and on our new telecom domain (see Figure 3). Our findings indicate that the telecom domain presents greater challenge, exhibiting an overall lower success rate compared to other domains. gpt-4.1 passˆ1 drops from 74%/56% for retail and airline respectively to 34% for telecom. gpt-4.1-mini, o4-mini, and claude-3.7-sonnet perform better with passˆ1 of around 50% for telecom. In the case of claude-3.7-sonnet, the passˆ1 score for telecom (49%) is on par with airline. However, as increases, the passˆk scores decline more rapidly for telecom compared to airline, suggesting less consistent performance on the telecom domain. Ablation analysis. An agents success in τ 2-bench depends on two things 1) how well it can communicate and collaborate with the user at solving the issue, and 2) how well it can reason over and apply the domain guidelines specified in the policy document. In order to understand the impact of each of these componentsreasoning and communication for dual controlwe perform an ablation study. Specifically, we evaluate performance in the telecom domain across three distinct settings: Default: The default agent and user simulator configuration where the agent and user collaborate in dual-control setup. No-User: The agent is provided with ticket summarizing the users problem and success criteria. The agent controls all tools, including those typically operated by the user, and is solely responsible for solving the problem. This setting tests the agents reasoning and tool-calling capability independently of its capacity to interact with the user. Oracle Plan: The agent is provided with the sequence of tool calls required to solve the problem, encompassing actions for both the agent and the user. This setup alleviates the agents reasoning load, focusing on its ability to collaborate with the user to execute known plan. Figure 4 (left) reports performance across these settings for gpt-4.1 and o4-mini, revealing key insights. The difference between Oracle Plan and Default configurations highlights the impact of the reasoning load on agent performance. Unsurprisingly, providing the ground truth leads to better performance than the Default setting. But it is notable that this effect is larger for the o4-mini than for gpt-4.1, suggesting that o4-mini is better able to make use of the ground truth information. The comparison between No-User and Default modes illustrates the impact of dual control and the associated communication overhead on agent error rates and overall success. For both models, 7 Figure 4: passˆ1 metrics for the Telecom domain across different operational modes (Default, No-User, Oracle Plan) using the Default user simulation. Left: original policy. Right: workflowbased policy. This figure illustrates the impact of reasoning load and decentralized control on agent performance. Figure 5: passˆ1 scores across various tasks in telecom binned by the number of actions required to solve them (left) or the number of different issues that need to be addressed (right). transfer refers to the special case of task that requires to be transferred to human and cannot be solved by the agent alone. (Grey bars indicates the proportion of the tasks that fall into that bin.) shifting from no user operation (No-User) to collaborative setup (Default) where the agent must guide the user results in substantial drop in passˆ1 (18% drop for gpt-4.1 and 25% drop for o4-mini). This underscores that LLMs still face significant challenges when solving problems with an active user who shares control of the environment. Impact of policy document on performance. Figure 4 also allows us to analyze the impact of the policy document on task success. Specifically, we created an alternate policy document that provides more specific details on the workflow required to solve each type of task, with the rationale that having the workflow provides more concrete guidance to the agent (see Appendices D.2.2 and D.2.3). We observe that this is indeed the case and slightly improves agent performance using the workflow policy (right) over the original one (left) under the Default and No-User modes. Surprisingly, workflow policy document hurts performance on Oracle Plan for both gpt-4.1 and o4-mini. Our hypothesis here is that since the agent already has the ground truth action sequence, providing it the workflow might lead to confusion and hurt its performance rather than help. Impact of number of actions and sub-tasks. Figure 5 breaks down the passˆ1 scores across various tasks in telecom binned by the number of actions required to solve them (left) or the number of different sub-tasks that need to be addressed (right). transfer refers to the special case of task that requires to be transferred to human and cannot be solved by the agent alone. As expected, regardless of the base model being gpt-4.1 or o4-mini, agent performance drops as the number of actions increases, reaching close to zero for > 7 actions in Default mode. The No-User mode results in higher scores overall, although the gap reduces (from about 0.3-0.4 to <0.2) as the number of actions increases. This hints that maintaining reliability over longer-horizon tasks remains challenge under both settings and communication with the user is not the only bottleneck. Interestingly, for No-User, gpt-4.1 performs better at the tail end (10 actions or more) than o4-mini. 8 Figure 6: gpt-4.1 (top left), o4-mini (top right), gpt-4.1-mini (bottom left), and claude-3.7-sonnet (bottom right) passˆk per issue type for the telecom domain. Performance is shown for service_issue, mobile_data_issue, and mms_issue issue types, highlighting how different issue types affect success rates. We observe similar trend with increase in the number of distinct sub-tasks per task performance trends downwards for both base models, with the no-user mode generally being higher than the default mode. Both these results validate that our domain design and task creation process provide natural path to scaling complexity via increasing action length or combining different sub-tasks into single task. Impact of issue types. The telecom domain is organized around three primary user intents reflecting the three different issues that can be encountered: service_issue, mobile_data_issue, and mms_issue, each of which contains specific procedures laid out by the domain policy. These issue types are designed to have an inherent difficulty hierarchy. For instance, service_issue tasks can typically be resolved independently through straightforward sequence of actions. In contrast, successfully addressing mobile_data_issue or mms_issue often requires first checking for and potentially resolving underlying service_issue problems. This dependency creates natural ordering in task difficulty, with service_issue being the easiest, while mobile_data_issue and mms_issue represent more complex, multi-stage problems. Figure 6 provides an breakdown analysis of performance by issue type. We observe that the passˆk scores for all LLMs (gpt-4.1, o4-mini, claude-3.7-sonnet, gpt-4.1-mini) are driven by higher failure rates on more complex issue types (mobile_data_issue and mms_issue). This suggests that the multi-stage reasoning and conditional logic required for harder issue types pose substantial challenge to the agents. We also notice that the spread across issue types differs slightly by the model. For instance, claude-3.7-sonnet does better than o4-mini on mobile_data_issue but worse on service_issue. Impact of user persona. Figure 7 provides an breakdown analysis of performance by user persona. Results confirm that the agent tends to perform better on tasks associated with the Easy persona compared to those associated with the Hard one. Interestingly, the performances of the agent on tasks involving no persona information (None) tend to be be on par or lower to performances on tasks associated with the Hard persona. This highlights the critical importance of testing AI systems with well-defined user personas before real-world deployment."
        },
        {
            "title": "4.3 How does dual-control impact benchmark reliability?",
            "content": "Ensuring the reliability of conversational agent benchmarks is paramount. Three primary sources of uncertainty can impact benchmark reliability: implementation errors, task specification errors, and user simulator errors. While the user simulator is often cited as critical component requiring careful evaluation, its assessment can be confounded by issues in the benchmarks implementation or task definitions. Therefore, we first address these potential error sources before evaluating the user simulator itself. This is detailed in Appendix B. 9 Figure 7: gpt-4.1 (top left), o4-mini (top right), gpt-4.1-mini (bottom left), and claude-3.7-sonnet (bottom right) passˆk per persona type for the telecom domain. Performance is shown across different persona types, highlighting how different user characteristics affect success rates. Table 2: User simulator error count (rates) across domains. Only critical user errors prevent the agent from solving the task while benign errors do not affect task completion. New telecom domain shows much lower error rate and no critical errors were reported. (See Appendix for additional details). Domain Num Conversations Critical Errors Benign Errors Total Errors airline retail telecom 100 50 50 13 (13%) 6 (12%) 3 (6%) 34 (34%) 14 (28%) 5 (10%) 47 (47%) 20 (40%) 8 (16%) User simulator quality evaluation. Having minimized errors in the benchmark implementation and task specifications, we evaluated the user simulator quality. To assess the quality of the user simulator across domains, we manually annotated interaction traces generated using gpt-4.1 for both the User Simulator and the Agent. Each conversation was reviewed by two separate annotators tasked with identifying user simulator errors. Annotators were given the User Simulator Guidelines, the specific User Instructions for this conversation (see Appendix C.2), descriptions of the available User Tools (if any), and the complete conversation trajectory (messages and tool calls). Annotators assessed each user turn against four criteria: adherence to User Simulator Guidelines, adherence to User Instructions, correct use of User Tools, and generation of natural and consistent conversational continuation. Errors were categorized as either (1) task-critical errors: high-severity failures that preclude task completion (e.g., generating an intent that contradicts the user goal, or causing an irrecoverable state transition), or as (2) task-benign errors: Errors that do not prevent the task from being completed. Reliability of the user simulator. As shown in Table 2, our analysis of user simulator behavior reveals significant improvements in reliability for the new telecom domain. While for the retail and airline domains we recorded 40% and 47% error rate for the user simulator (with 12% and 13% being critical errors that prevent task completion), this rate is much lower for the telecom domain, only 16% with 6% critical errors reported. This substantial improvement in reliability can be attributed to the domain design, which shapes and tightly constrains user behavior through its environment and available affordances. Rather than relying heavily on natural language specifications to guide behavior, the telecom domains structured interface and clear action space naturally guide the user simulator toward correct interactions, resulting in more consistent and predictable behavior."
        },
        {
            "title": "5 Conclusion",
            "content": "We present τ 2-bench that generalizes τ -bench by introducing the dual-control setting and found substantial performance drop in LLMs due to coordination and communication requirements, highlighting these as critical bottlenecks over pure reasoning capabilities for solving user requests. Works remains to be done to improve the user simulator. Although we have shown that augmenting users with curated tools can help avoid critical errors, we have not yet investigated how this method could be applied to the existing airline and retail domains. Doing so would pave the way towards more generic solution to ensuring high quality user simulator. Extending domain coverage for the benchmark still heavily relies on human experts. For benchmarking methods to be adopted by industry, providing much needed standards, it is critical to further investigate how to automate the domain curation process. One important limitation of τ 2-bench is that it does not explicitly model the expert-novice gap inherent to most customer support tasks. When interacting with naive user, an expert must understand the users mental model and adapt explanations accordingly. Assessing and improving the AI agents abilities to bridge this gap is promising direction for future work and τ 2-bench provides strong starting point for such explorations."
        },
        {
            "title": "Acknowledgements",
            "content": "We thank Noah Shinn, Dongxu Zhou, Ola Zytek and Keshav Dhandhania for all the fruitful discussions and feedback that strengthened this work, Kevin Gao, Nate White and Kimberly Patron for helping set up the different LLM APIs for the experiments, and Clay Bavor for his unwavering support."
        },
        {
            "title": "References",
            "content": "[1] Jacob Andreas, John Bufe, David Burkett, Charles Chen, Josh Clausman, Jean Crawford, Kate Crim, Jordan DeLoach, Leah Dorner, Jason Eisner, et al. Task-oriented dialogue as dataflow synthesis. Transactions of the Association for Computational Linguistics, 8:556571, 2020. [2] Anthropic. Claude 3.7 Sonnet, 2025. Model release: 2025-02-24. [3] BerriAI. litellm, 2025. [4] Paweł Budzianowski, Tsung-Hsien Wen, Bo-Hsiang Tseng, Inigo Casanueva, Stefan Ultes, Osman Ramadan, and Milica Gašic. Multiwoza large-scale multi-domain wizard-of-oz dataset for task-oriented dialogue modelling. arXiv preprint arXiv:1810.00278, 2018. [5] Derek Chen, Howard Chen, Yi Yang, Alex Lin, and Zhou Yu. Action-based conversations dataset: corpus for building more in-depth task-oriented dialogue systems. arXiv preprint arXiv:2104.00783, 2021. [6] Izzeddin Gür, Dilek Hakkani-Tür, Gokhan Tür, and Pararth Shah. User modeling for task oriented dialogues. In 2018 IEEE Spoken Language Technology Workshop (SLT), pages 900 906, 2018. [7] He He, Derek Chen, Anusha Balakrishnan, and Percy Liang. Decoupling strategy and generation in negotiation dialogues. arXiv preprint arXiv:1808.09637, 2018. [8] Zhiyuan Hu, Yue Feng, Anh Tuan Luu, Bryan Hooi, and Aldo Lipani. Unlocking the potential of user feedback: Leveraging large language model as user simulators to enhance dialogue system. In Proceedings of the 32nd ACM International Conference on Information and Knowledge Management, CIKM 23. ACM, October 2023. [9] Yue Huang, Jiawen Shi, Yuan Li, Chenrui Fan, Siyuan Wu, Qihui Zhang, Yixin Liu, Pan Zhou, Yao Wan, Neil Zhenqiang Gong, et al. Metatool benchmark for large language models: Deciding whether to use tools and which to use. arXiv preprint arXiv:2310.03128, 2023. 11 [10] Carlos Jimenez, John Yang, Alexander Wettig, Shunyu Yao, Kexin Pei, Ofir Press, and Karthik Narasimhan. Swe-bench: Can language models resolve real-world github issues? arXiv preprint arXiv:2310.06770, 2023. [11] Taaha Kazi, Ruiliang Lyu, Sizhe Zhou, Dilek Hakkani-Tur, and Gokhan Tur. Large Language Models as User-Agents for Evaluating Task-Oriented-Dialogue Systems, November 2024. arXiv:2411.09972. [12] Elad Levi and Ilan Kadar. Intellagent: multi-agent framework for evaluating conversational ai systems. arXiv preprint arXiv:2501.11067, 2025. [13] Xiao Liu, Hao Yu, Hanchen Zhang, Yifan Xu, Xuanyu Lei, Hanyu Lai, Yu Gu, Hangliang Ding, Kaiwen Men, Kejuan Yang, et al. Agentbench: Evaluating llms as agents. arXiv preprint arXiv:2308.03688, 2023. [14] Jiarui Lu, Thomas Holleis, Yizhe Zhang, Bernhard Aumayer, Feng Nan, Felix Bai, Shuang Ma, Shen Ma, Mengyu Li, Guoli Yin, et al. Toolsandbox: stateful, conversational, interactive evaluation benchmark for llm tool use capabilities. arXiv preprint arXiv:2408.04682, 2024. [15] Frans Oliehoek, Christopher Amato, et al. concise introduction to decentralized POMDPs, volume 1. Springer, 2016. [16] OpenAI. gpt-4.1, 2025. Model release: 2025-04-14. [17] OpenAI. o4-mini, 2025. Model release: 2025-04-16. [18] Olivier Pietquin and Helen Hastie. survey on metrics for the evaluation of user simulations. The knowledge engineering review, 28(1):5973, 2013. Publisher: Cambridge University Press. [19] Akshara Prabhakar, Zuxin Liu, Weiran Yao, Jianguo Zhang, Ming Zhu, Shiyu Wang, Zhiwei Liu, Tulika Awalgaonkar, Haolin Chen, Thai Hoang, et al. Apigen-mt: Agentic pipeline for multiturn data generation via simulated agent-human interplay. arXiv preprint arXiv:2504.03601, 2025. [20] Yujia Qin, Shihao Liang, Yining Ye, Kunlun Zhu, Lan Yan, Yaxi Lu, Yankai Lin, Xin Cong, Xiangru Tang, Bill Qian, et al. Toolllm: Facilitating large language models to master 16000+ real-world apis. In ICLR, 2024. [21] Yangjun Ruan, Honghua Dong, Andrew Wang, Silviu Pitis, Yongchao Zhou, Jimmy Ba, Yann Dubois, Chris Maddison, and Tatsunori Hashimoto. Identifying the risks of lm agents with an lm-emulated sandbox. arXiv preprint arXiv:2309.15817, 2023. [22] Jost Schatzmann, Daniel Jurafsky, Michael Galley, and David Trevillian. Evaluating agendabased user simulation for reinforcement learning of dialogue management. In Speech Communication, volume 47, pages 95121, 2007. [23] Ruixuan Xiao, Wentao Ma, Ke Wang, Yuchuan Wu, Junbo Zhao, Haobo Wang, Fei Huang, and Yongbin Li. Flowbench: Revisiting and benchmarking workflow-guided planning for llm-based agents. arXiv preprint arXiv:2406.14884, 2024. [24] Fanjia Yan, Huanzhi Mao, Charlie Cheng-Jie Ji, Tianjun Zhang, Shishir G. Patil, Ion Stoica, and Joseph E. Gonzalez. Berkeley function calling leaderboard. https://gorilla.cs.berkeley. edu/blogs/8_berkeley_function_calling_leaderboard.html, 2024. [25] Shunyu Yao, Howard Chen, John Yang, and Karthik Narasimhan. Webshop: Towards scalable real-world web interaction with grounded language agents. Advances in Neural Information Processing Systems, 35:2074420757, 2022. [26] Shunyu Yao, Noah Shinn, Pedram Razavi, and Karthik Narasimhan. τ -bench: benchmark for tool-agent-user interaction in real-world domains. arXiv preprint arXiv:2406.12045, 2024. [27] Shuyan Zhou, Frank Xu, Hao Zhu, Xuhui Zhou, Robert Lo, Abishek Sridhar, Xianyi Cheng, Yonatan Bisk, Daniel Fried, Uri Alon, et al. WebArena: Realistic Web Environment for Building Autonomous Agents. arXiv preprint arXiv:2307.13854, 2023. 12 [28] Kunlun Zhu, Hongyi Du, Zhaochen Hong, Xiaocheng Yang, Shuyi Guo, Zhe Wang, Zhenhailong Wang, Cheng Qian, Xiangru Tang, Heng Ji, et al. Multiagentbench: Evaluating the collaboration and competition of llm agents. arXiv preprint arXiv:2503.01935, 2025."
        },
        {
            "title": "Broader Impact",
            "content": "The development of standardized benchmarks for Large Language Models (LLMs) and AI agents is crucial for ensuring societal control and fostering fairness amidst rapidly advancing technologies. Such benchmarks not only provide framework for transparent evaluation but also enable research groups to coordinate their efforts around common tasks, thereby accelerating the overall progress in the field. While this work itself may not have direct negative societal implications, it contributes to the development of real-world agents, which will invariably have diverse economic and societal consequences. Therefore, it is also of paramount importance that AI agents are designed to collaborate effectively and safely with human users, prerequisite for their responsible integration into commercial settings and everyday life."
        },
        {
            "title": "A Telecom Domain",
            "content": "The number of tasks spanning different user intents and number of tasks are shown in Table 3. Table 3: Number of tasks sampled for each intent and number of subtasks."
        },
        {
            "title": "Number of subtasks",
            "content": "service_issue mobile_data_issue mms_issue total 2 3 4 5 6 7 8 9 total 9 9 9 2 - - - - 29 8 8 6 6 5 3 - - 36 8 9 6 5 6 5 4 6 25 26 21 13 11 8 4 49 114 There are 3 different intents in the telecom domain: service_issue, mobile_data_issue, and mms_issue. How the number of actions required to solve the issues varies between intents is shown in Table 4. Table 4: Number of actions required to solve the issues."
        },
        {
            "title": "Std Min Max",
            "content": "service_issue mobile_data_issue mms_issue 2.31 4.31 6.00 2.25 1.79 2.85 1 2 2 8 8 12 A.1 User Persona We define two distinct user personas to represent different levels of technical expertise and comfort with technology: Persona 1: Easy As 41-year-old office administrator, you use your cellphone daily for both work and personal tasks. While youre familiar with common phone functions, you wouldnt call yourself tech enthusiast. Your technical skills are average - you handle standard smartphone features like calls, texts, email, and basic apps with ease. You understand the fundamental settings, but prefer clear, step-by-step guidance when trying something new. 14 In interactions, youre naturally friendly and patient. When receiving help, you listen attentively and arent afraid to ask questions. You make sure to confirm your understanding and provide detailed feedback on each instruction you receive. Persona 2: Hard At 64 years old, youre retired librarian who keeps your phone use simple - mainly for calls, texts, and capturing photos of your grandchildren. Technology in general makes you feel uneasy and overwhelmed. Your technical knowledge is quite limited. Step-by-step instructions often confuse you, and technical terms like \"VPN\" or \"APN\" might as well be foreign language. You only share information when specifically asked. When dealing with technology, you tend to get flustered quickly. You need constant reassurance and often interrupt with anxious questions. Simple requests like \"reboot the phone\" can trigger worries about losing precious photos. A.2 Example Task # Task Details ## ID [service_issue]airplane_mode_onunseat_sim_card ## Description - **Purpose**: Test resolution path: No Service/Connection Issues. ## User Scenario - **Instructions**: - **Domain**: telecom - **Reason for call**: Your phone has been showing 'No Service' for the past few hours. - **Known info**: You are John Smith with phone number 555-123-2002. - **Unknown info**: null - **Task instructions**: If the agent suggests actions that don't immediately fix the issue, follow their guidance but express mild frustration after the first unsuccessful attempt. You will consider the issue resolved when the status bar shows that you have signal. If the tool call does not return updated status information, you might need to perform another tool call to get the updated status. ## Ticket The user is experiencing issues with their phone service. They are unable to make or receive calls, and the status bar shows 'No Service'. Customer name: John Smith, phone number: 555-123-2002. They will consider the issue resolved when the status bar shows that they have signal. ## Initial State - **Initialization Data**: null - **Initialization Actions**: 1. **Action**: set_user_info - **Env Type**: user - **Arguments**: - name: John Smith - phone_number: 555-123-2002 2. **Action**: turn_airplane_mode_on - **Env Type**: user - **Arguments**: {} 3. **Action**: unseat_sim_card 15 - **Env Type**: user - **Arguments**: {} ## Evaluation Criteria ### Actions 1. **Action ID**: toggle_airplane_mode_0 - **Requestor**: user - **Name**: toggle_airplane_mode - **Arguments**: {} 2. **Action ID**: reseat_sim_card_1 - **Requestor**: user - **Name**: reseat_sim_card - **Arguments**: {} ### Environment Assertions - **Env Type**: user - **Function**: assert_service_status - **Arguments**: - expected_status: connected - **Assert Value**: true A.3 Example Trajectory 1: Default mode Trajectory for the task in Appendix A.2 in the Default mode. Assistant: Hi! How can help you today? User: Hi there! My phone has been showing \"No Service\" for the past few hours. Im unable to make calls or use mobile data. Can you help me fix this? Assistant: To assist you with your \"No Service\" issue, need to identify your account first. Could you please provide one of the following: The phone number associated with your account Your customer ID Your full name and date of birth Once have this information, can begin troubleshooting your issue. User: Sure! My phone number is 555-123-2002, and my name is John Smith. Let me know if you need anything else to proceed. Assistant: [System retrieves customer information] Tool: \"555-123-2002\")] [Tool call: get_customer_by_phone(phone_number: { \"customer_id\": \"C1001\", \"full_name\": \"John Smith\", \"date_of_birth\": \"1985-06-15\", \"email\": \"john.smith@example.com\", \"phone_number\": \"555-123-2002\", \"address\": { \"street\": \"123 Main St\", \"city\": \"Anytown\", \"state\": \"CA\", \"zip_code\": \"90210\" }, \"account_status\": \"Active\", \"payment_methods\": [{ 16 \"method_type\": \"Credit Card\", \"account_number_last_4\": \"1235\", \"expiration_date\": \"12/2026\" }], \"line_ids\": [\"L1001\", \"L1002\", \"L1003\"], \"bill_ids\": [\"B1001\", \"B1002\", \"B1003\"], \"created_at\": \"2025-01-15 10:30:00\", \"last_extension_date\": null, \"goodwill_credit_used_this_year\": 25.0 } Assistant: Thank you for providing your information. To begin troubleshooting your \"No Service\" issue, could you please check your phones connection status? Specifically, let me know: Is Airplane Mode currently ON or OFF? Do you see any signal bars or network name displayed? This will help determine the next steps to resolve your issue. User: [System checks network status] Tool: [Tool call: get_network_status()] Airplane Mode: ON SIM Card Status: invalid Cellular Connection: no_service Cellular Signal: none Cellular Network Type: none Mobile Data Allowed: Yes Roaming: No Data Roaming Allowed: No Wi-Fi Radio: OFF Wi-Fi Connected: No User: It seems like Airplane Mode is currently ON, and there are no signal bars or network names displayed. What should do next? Assistant: Please turn Airplane Mode OFF on your phone. Once you have done that, check if your network connectivity is restored (look for signal bars or your carriers name appearing). Let me know if this resolves the issue or if you still see \"No Service.\" User: [System toggles airplane mode] Tool: [Tool call: toggle_airplane_mode()] Airplane Mode is now OFF. Status Bar: [No Signal] [Battery 80% User: Ive turned Airplane Mode OFF, but my phone still shows \"No Signal\" on the status bar. What should try next? Assistant: Thank you for checking. Next, please check your SIM card status on your phone. This will help us determine if the SIM card is being recognized or if there are any issues such as it being missing, invalid, or locked. Can you check your SIM status and let me know what it says? User: [System checks SIM status] Tool: [Tool call: get_sim_status()] The SIM card is invalid or not recognized. User: It looks like the SIM card is invalid or not being recognized by the phone. What should we do to address this? Assistant: Please try removing your SIM card from the phone and then reinserting it securely. After you have done this, check if your phone now recognizes the SIM card and if the network signal returns. Let me know if this improves the SIM status or if the issue persists. User: [System reseats SIM card] Tool: [Tool call: reseat_sim_card()] SIM card re-seated successfully. Status Bar: [Signal 4] Excellent 5G [Data] Enabled [Battery 80% User: re-seated the SIM card, and now the status bar shows full signal strength with 5G connection. It looks like the issue is resolved! Thank you! Assistant: Im glad to hear that reseating the SIM card resolved your issue and your phone now has full signal strength with 5G connection. If you experience any further issues or have other questions, feel free to reach out. Have great day! User: Thank you so much for your help! Everything seems to be working perfectly now. Have wonderful day! [STOP] A.4 Example Trajectory 2: No-User mode Trajectory for the task in Appendix A.2 in the No-User mode. Assistant: [System retrieves customer information] Tool: \"555-123-2002\")] [Tool call: get_customer_by_phone(phone_number: { } \"customer_id\": \"C1001\", \"full_name\": \"John Smith\", \"date_of_birth\": \"1985-06-15\", \"email\": \"john.smith@example.com\", \"phone_number\": \"555-123-2002\", \"address\": { \"street\": \"123 Main St\", \"city\": \"Anytown\", \"state\": \"CA\", \"zip_code\": \"90210\" }, \"account_status\": \"Active\", \"payment_methods\": [{ \"method_type\": \"Credit Card\", \"account_number_last_4\": \"1235\", \"expiration_date\": \"12/2026\" }], \"line_ids\": [\"L1001\", \"L1002\", \"L1003\"], \"bill_ids\": [\"B1001\", \"B1002\", \"B1003\"], \"created_at\": \"2025-01-15 10:30:00\", \"last_extension_date\": null, \"goodwill_credit_used_this_year\": 25.0 Assistant: [System retrieves line details] Tool: [Tool call: get_details_by_id(id: \"L1001\")] { } \"line_id\": \"L1001\", \"phone_number\": \"555-123-2001\", \"status\": \"Active\", \"plan_id\": \"P1001\", \"device_id\": \"D1001\", \"data_used_gb\": 3.2, \"data_refueling_gb\": 0.0, \"roaming_enabled\": false, \"contract_end_date\": \"2026-12-31\", \"last_plan_change_date\": \"2025-01-10\", \"last_sim_replacement_date\": null, \"suspension_start_date\": null Assistant: [System retrieves additional line details] Tool: [Tool call: get_details_by_id(id: \"L1002\")] { } \"line_id\": \"L1002\", \"phone_number\": \"555-123-2002\", \"status\": \"Active\", \"plan_id\": \"P1002\", \"device_id\": \"D1002\", \"data_used_gb\": 8.7, \"data_refueling_gb\": 0.0, \"roaming_enabled\": true, \"contract_end_date\": \"2026-12-31\", \"last_plan_change_date\": \"2024-12-15\", \"last_sim_replacement_date\": \"2025-01-20\", \"suspension_start_date\": null Assistant: [System retrieves device details] Tool: [Tool call: get_details_by_id(id: \"D1002\")] { } \"device_id\": \"D1002\", \"device_type\": \"phone\", \"model\": \"Smartphone Pro Max\", \"imei\": \"234567890123456\", \"is_esim_capable\": true, \"activated\": true, \"activation_date\": \"2025-02-15 11:45:00\", \"last_esim_transfer_date\": \"2025-01-20 09:30:00\" Assistant: [System checks network status] Tool: [Tool call: get_network_status()] Airplane Mode: ON SIM Card Status: invalid Cellular Connection: no_service Cellular Signal: none Cellular Network Type: none Mobile Data Allowed: Yes Roaming: No Data Roaming Allowed: No 19 Wi-Fi Radio: OFF Wi-Fi Connected: No Assistant: [System toggles airplane mode] Tool: [Tool call: toggle_airplane_mode()] Airplane Mode is now OFF. Status Bar: [No Signal] [Battery 80% Assistant: [System checks SIM status] Tool: [Tool call: get_sim_status()] The SIM card is invalid or not recognized. Assistant: [System reseats SIM card] Tool: [Tool call: reseat_sim_card()] SIM card re-seated successfully. Status Bar: [Signal 4] Excellent 5G [Data] Enabled [Battery 80% Assistant: [STOP] Verifying Original τ 2-bench B.1 Verifying Implementation To minimize implementation errors, we (1) provide unified tool formalism across all domains, ensuring consistency in how agent capabilities are represented, (2) we ensure that each domain environment specifies data model, and (3) introduced mock domain specifically designed for unit testing, allowing for isolated verification of core benchmark functionalities. B.2 Verifying Tasks Task clarity and correctness are crucial for meaningful evaluation. We improved task specifications through several measures: Structured Task Data: We enriched task descriptions with metadata detailing the purpose of each task (i.e., the specific capabilities being tested). User instructions were structured along dimensions such as intent, specific instructions, and known/unknown information. Initialization options were introduced to allow finer control over starting states while maintaining the option to build each task on top of the common data base state. Categorized Evaluation: Task evaluation criteria were augmented and split into distinct categories: environment assertions (e.g., database state checks), communication assertions (verifying information conveyed by the agent), natural language assertions (allowing fine-grained checks specified in natural language for easier debugging), and action assertions (confirming required agent actions). Iterative Review Process: We implemented an iterative review process anchored in simulation results. For each task, simulation is run. Reviewers can intervene to fix transient agent or user simulator errors that might otherwise halt the simulation prematurely, allowing for complete exploration of the task. The simulation results are then reviewed to check for issues such as underspecification, overspecification, or non-unique solutions. Based on the review, task instructions are refined. Programmatic Task Generation: For our newly introduced domain, we employ programmatic task generation coupled with automatic verification, ensuring correctness by design."
        },
        {
            "title": "C Prompts",
            "content": "C.1 Agent system prompt <instructions> You are customer service agent that helps the user according to the <policy> provided below. In each turn you can either: - Send message to the user. - Make tool call. You cannot do both at the same time. Try to be helpful and always follow the policy. Always make sure you generate valid JSON only. </instructions> <policy> {domain_policy} </policy>"
        },
        {
            "title": "Agent system prompt template",
            "content": "The policies for the domains are provided in the Appendix section. C.2 User system prompt Here is the user prompt template for the user simulation task. Mention of the tools is ommited if the environment does not provide any user actions. # User Simulation Guidelines You are playing the role of customer contacting customer service representative agent. Your goal is to simulate realistic customer interactions while following specific scenario instructions. You have some tools to perform the actions on your end that might be requested by the agent to resolve your issue. ## Core Principles - Generate one message at time, maintaining natural conversation flow. - At each turn you can either: - Send message to the agent. - Make tool call to perform an action requested by the agent. - You cannot do both at the same time. - Strictly follow the scenario instructions you have received. - Never make up or hallucinate information not provided in the scenario instructions. Information that is not provided in the scenario instructions should be considered unknown or unavailable. - Never make up the results of tool calls that the agent has requested, you must ground your responses based on the results of tool calls if the agent has requested. - Avoid repeating the exact instructions verbatim. Use paraphrasing and natural language to convey the same information - Disclose information progressively. Wait for the agent to ask for specific information before providing it. - Only call tool if the agent has requested it. Ask clarifying questions if you do not know what tools to call. - If the agent asks multiple actions to perform, state that you cannot perform multiple actions at once, and ask the agent to instruct you one action at time. - Your messages when performing tool calls will not be displayed to the agent, only the messages without tool calls will be displayed to the agent. 21 ## Task Completion - The goal is to continue the conversation until the task is complete. - If the instruction goal is satisified, generate the '###STOP###' token to end the conversation. - If you are transferred to another agent, generate the '###TRANSFER###' token to indicate the transfer. - If you find yourself in situation in which the scenario does not provide enough information for you to continue the conversation, generate the '###OUT-OF-SCOPE###' token to end the conversation. Remember: The goal is to create realistic, natural conversations while strictly adhering to the provided instructions and maintaining character consistency. <scenario> {instructions} </scenario>"
        },
        {
            "title": "User system prompt template",
            "content": "Example of task instruction Here are examples of task instructions that will be included for given task. Domain: airline Reason for call: You want to book one-way flight from ORD to PHL on May 26. Known info: Your name is Sophia Silva. Your user id is sophia_silva_7557. Unknown info: You do not know the flight number of your May 10 flight from ORD to PHL Task instructions: You want to book the exact same flight as your recent May 10 flight from ORD to PHL. You do not want any other flight. You don't have any baggages, but want to add an extra passenger Kevin Smith, DOB 2001-04-12. You are ok with economy and want aisle and middle seat together. You are willing to pay up to $500 for the purchase. If and only if the price is above $500, drop the second passenger and book only for yourself. If the agent asks, you only want one-way ticket, not roundtrip. You don't need any travel insurance. You want to pay using only one of your certificates. You do not accept any other mode of payment. Domain: retail Reason for call: You want to know the delivery status of your order W4284542. If it has not shipped, you want to cancel the air purifier from the order. If that is not possible, you want to cancel the whole order and get refund to gift card. If refunding to gift card is not possible, you do not want to cancel. Known info: You are Ivan Hernandez. Your user id is ivan_hernandez_6923. You live in San Diego, 92133. Unknown info: You do not know the current shipping status of your order. You do not know if partial cancellations or gift card refunds are allowed. You do not remember your email address. Task instructions: Start by asking when your order W4284542 will arrive. If the agent says it has not shipped yet, ask to cancel the air purifier from the order. If the agent says you cannot cancel just the air purifier, ask to cancel the entire order instead. If the agent says the refund cannot be issued to gift card, say you do not want to cancel at all. Remain polite, brief, and firm 22 throughout the conversation. Domain: telecom Reason for call: You mobile data is not working properly. It either stops working or is very slow. You want to fix it and get excellent internet speed on your phone. You do not have access to wifi. Known info: You are John Smith with phone number 555-123-2002. You are currently at home in the United States. Task instructions: If the agent suggests actions that don't immediately fix the issue, follow their guidance but express mild frustration after the first unsuccessful attempt. You will consider the issue resolved when speed test returns excellent internet speed. You are willing to refuel 2.0 GB of data if necessary, but you do not want to change your mobile data plan."
        },
        {
            "title": "D Domain Policies",
            "content": "D.1 Verified Airline and Retail policies D.1.1 Retail policy # Retail agent policy As retail agent, you can help users: - **cancel or modify pending orders** - **return or exchange delivered orders** - **modify their default user address** - **provide information about their own profile, orders, and related products** At the beginning of the conversation, you have to authenticate the user identity by locating their user id via email, or via name + zip code. This has to be done even when the user already provides the user id. Once the user has been authenticated, you can provide the user with information about order, product, profile information, e.g. help the user look up order id. You can only help one user per conversation (but you can handle multiple requests from the same user), and must deny any requests for tasks related to any other user. Before taking any action that updates the database (cancel, modify, return, exchange), you must list the action details and obtain explicit user confirmation (yes) to proceed. You should not make up any information or knowledge or procedures not provided by the user or the tools, or give subjective recommendations or comments. You should at most make one tool call at time, and if you take tool call, you should not respond to the user at the same time. If you respond to the user, you should not make tool call at the same time. You should deny user requests that are against this policy. You should transfer the user to human agent if and only if the request cannot be handled within the scope of your actions. To transfer, first make tool call to transfer_to_human_agents, and then send the message 'YOU ARE BEING TRANSFERRED TO HUMAN AGENT. PLEASE HOLD ON.' to the user. 23 ## Domain basic - All times in the database are EST and 24 hour based. For example \"02:30:00\" means 2:30 AM EST. ### User Each user has profile containing: - unique user id - email - default address - payment methods. There are three types of payment methods: **gift card**, **paypal account**, **credit card**. ### Product Our retail store has 50 types of products. For each **type of product**, there are **variant items** of different **options**. For example, for 't-shirt' product, there could be variant item with option 'color blue size M', and another variant item with option 'color red size L'. Each product has the following attributes: - unique product id - name - list of variants Each variant item has the following attributes: - unique item id - information about the value of the product options for this item. - availability - price Note: Product ID and Item ID have no relations and should not be confused! ### Order Each order has the following attributes: - unique order id - user id - address - items ordered - status - fullfilments info (tracking id and item ids) - payment history The status of an order can be: **pending**, **processed**, **delivered**, or **cancelled**. Orders can have other optional attributes based on the actions that have been taken (cancellation reason, which items have been exchanged, what was the exchane price difference etc) ## Generic action rules Generally, you can only take action on pending or delivered orders. Exchange or modify order tools can only be called once per order. Be sure that all items to be changed are collected into list before making the tool call!!! ## Cancel pending order An order can only be cancelled if its status is 'pending', and you should check its status before taking the action. The user needs to confirm the order id and the reason (either 'no longer needed' or 'ordered by mistake') for cancellation. Other reasons are not acceptable. After user confirmation, the order status will be changed to 'cancelled', and the total will be refunded via the original payment method immediately if it is gift card, otherwise in 5 to 7 business days. ## Modify pending order An order can only be modified if its status is 'pending', and you should check its status before taking the action. For pending order, you can take actions to modify its shipping address, payment method, or product item options, but nothing else. ### Modify payment The user can only choose single payment method different from the original payment method. If the user wants the modify the payment method to gift card, it must have enough balance to cover the total amount. After user confirmation, the order status will be kept as 'pending'. The original payment method will be refunded immediately if it is gift card, otherwise it will be refunded within 5 to 7 business days. ### Modify items This action can only be called once, and will change the order status to 'pending (items modifed)'. The agent will not be able to modify or cancel the order anymore. So you must confirm all the details are correct and be cautious before taking this action. In particular, remember to remind the customer to confirm they have provided all the items they want to modify. For pending order, each item can be modified to an available new item of the same product but of different product option. There cannot be any change of product types, e.g. modify shirt to shoe. The user must provide payment method to pay or receive refund of the price difference. If the user provides gift card, it must have enough balance to cover the price difference. ## Return delivered order An order can only be returned if its status is 'delivered', and you should check its status before taking the action. The user needs to confirm the order id and the list of items to be returned. The user needs to provide payment method to receive the refund. The refund must either go to the original payment method, or an existing gift card. 25 After user confirmation, the order status will be changed to 'return requested', and the user will receive an email regarding how to return items. ## Exchange delivered order An order can only be exchanged if its status is 'delivered', and you should check its status before taking the action. In particular, remember to remind the customer to confirm they have provided all items to be exchanged. For delivered order, each item can be exchanged to an available new item of the same product but of different product option. There cannot be any change of product types, e.g. modify shirt to shoe. The user must provide payment method to pay or receive refund of the price difference. If the user provides gift card, it must have enough balance to cover the price difference. After user confirmation, the order status will be changed to 'exchange requested', and the user will receive an email regarding how to return items. There is no need to place new order. D.1.2 Airline policy # Airline Agent Policy The current time is 2024-05-15 15:00:00 EST. As an airline agent, you can help users **book**, **modify**, or **cancel** flight reservations. You also handle **refunds and compensation**. Before taking any actions that update the booking database (booking, modifying flights, editing baggage, changing cabin class, or updating passenger information), you must list the action details and obtain explicit user confirmation (yes) to proceed. You should not provide any information, knowledge, or procedures not provided by the user or available tools, or give subjective recommendations or comments. You should only make one tool call at time, and if you make tool call, you should not respond to the user simultaneously. If you respond to the user, you should not make tool call at the same time. You should deny user requests that are against this policy. You should transfer the user to human agent if and only if the request cannot be handled within the scope of your actions. To transfer, first make tool call to transfer_to_human_agents, and then send the message 'YOU ARE BEING TRANSFERRED TO HUMAN AGENT. PLEASE HOLD ON.' to the user. ## Domain Basic ### User Each user has profile containing: - user id - email - addresses - date of birth - payment methods - membership level - reservation numbers 26 There are three types of payment methods: **credit card**, **gift card**, **travel certificate**. There are three membership levels: **regular**, **silver**, **gold**. ### Flight Each flight has the following attributes: - flight number - origin - destination - scheduled departure and arrival time (local time) flight can be available at multiple dates. For each date: - If the status is **available**, the flight has not taken off, available seats and prices are listed. - If the status is **delayed** or **on time**, the flight has not taken off, cannot be booked. - If the status is **flying**, the flight has taken off but not landed, cannot be booked. There are three cabin classes: **basic economy**, **economy**, **business**. **basic economy** is its own class, completely distinct from **economy**. Seat availability and prices are listed for each cabin class. ### Reservation Each reservation specifies the following: - reservation id - user id - trip type - flights - passengers - payment methods - created time - baggages - travel insurance information There are two types of trip: **one way** and **round trip**. ## Book flight The agent must first obtain the user id from the user. The agent should then ask for the trip type, origin, destination. Cabin: - Cabin class must be the same across all the flights in reservation. Passengers: - Each reservation can have at most five passengers. - The agent needs to collect the first name, last name, and date of birth for each passenger. - All passengers must fly the same flights in the same cabin. Payment: - Each reservation can use at most one travel certificate, at most one credit card, and at most three gift cards. - The remaining amount of travel certificate is not refundable. - All payment methods must already be in user profile for safety reasons. Checked bag allowance: - If the booking user is regular member: - 0 free checked bag for each basic economy passenger 27 - 1 free checked bag for each economy passenger - 2 free checked bags for each business passenger - If the booking user is silver member: - 1 free checked bag for each basic economy passenger - 2 free checked bag for each economy passenger - 3 free checked bags for each business passenger - If the booking user is gold member: - 2 free checked bag for each basic economy passenger - 3 free checked bag for each economy passenger - 4 free checked bags for each business passenger - Each extra baggage is 50 dollars. Do not add checked bags that the user does not need. Travel insurance: - The agent should ask if the user wants to buy the travel insurance. - The travel insurance is 30 dollars per passenger and enables full refund if the user needs to cancel the flight given health or weather reasons. ## Modify flight First, the agent must obtain the user id and reservation id. - The user must provide their user id. - If the user doesn't know their reservation id, the agent should help locate it using available tools. Change flights: - Basic economy flights cannot be modified. - Other reservations can be modified without changing the origin, destination, and trip type. - Some flight segments can be kept, but their prices will not be updated based on the current price. - The API does not check these for the agent, so the agent must make sure the rules apply before calling the API! Change cabin: - Cabin cannot be changed if any flight in the reservation has already been flown. - In other cases, all reservations, including basic economy, can change cabin without changing the flights. - Cabin class must remain the same across all the flights in the same reservation; changing cabin for just one flight segment is not possible. - If the price after cabin change is higher than the original price, the user is required to pay for the difference. - If the price after cabin change is lower than the original price, the user is should be refunded the difference. Change baggage and insurance: - The user can add but not remove checked bags. - The user cannot add insurance after initial booking. Change passengers: - The user can modify passengers but cannot modify the number of passengers. - Even human agent cannot modify the number of passengers. Payment: - If the flights are changed, the user needs to provide single gift card or credit card for payment or refund method. The payment method must already be in user profile for safety reasons. ## Cancel flight First, the agent must obtain the user id and reservation id. - The user must provide their user id. - If the user doesn't know their reservation id, the agent should help locate it using available tools. 28 The agent must also obtain the reason for cancellation (change of plan, airline cancelled flight, or other reasons) If any portion of the flight has already been flown, the agent cannot help and transfer is needed. Otherwise, flight can be cancelled if any of the following is true: - The booking was made within the last 24 hrs - The flight is cancelled by airline - It is business flight - The user has travel insurance and the reason for cancellation is covered by insurance. The API does not check that cancellation rules are met, so the agent must make sure the rules apply before calling the API! Refund: - The refund will go to original payment methods within 5 to 7 business days. ## Refunds and Compensation Do not proactively offer compensation unless the user explicitly asks for one. Do not compensate if the user is regular member and has no travel insurance and flies (basic) economy. Always confirms the facts before offering compensation. Only compensate if the user is silver/gold member or has travel insurance or flies business. - If the user complains about cancelled flights in reservation, the agent can offer certificate as gesture after confirming the facts, with the amount being $100 times the number of passengers. - If the user complains about delayed flights in reservation and wants to change or cancel the reservation, the agent can offer certificate as gesture after confirming the facts and changing or cancelling the reservation, with the amount being $50 times the number of passengers. Do not offer compensation for any other reason than the ones listed above. D.2 Telecom policy Telecom policy is composed of two parts: Generic policy Appendix D.2.1 Technical support policy (default and workflow) Appendices D.2.2 and D.2.3 D.2.1 Generic telecom policy # Telecom Agent Policy The current time is 2025-02-25 12:08:00 EST. As telecom agent, you can help users with bill payment**, **line suspension**, and **plan options**. **technical support**, **overdue You should not provide any information, knowledge, or procedures not provided by the user or available tools, or give subjective recommendations or comments. 29 You should only make one tool call at time, and if you make tool call, you should not respond to the user simultaneously. If you respond to the user, you should not make tool call at the same time. You should deny user requests that are against this policy. You should transfer the user to human agent if and only if the request cannot be handled within the scope of your actions. To transfer, first make tool call to transfer_to_human_agents, and then send the message 'YOU ARE BEING TRANSFERRED TO HUMAN AGENT. PLEASE HOLD ON.' to the user. You should try your best to resolve the issue for the user before transferring the user to human agent. ## Domain Basics ### Customer Each customer has profile containing: - customer ID - full name - date of birth - email - phone number - address (street, city, state, zip code) - account status - created date - payment methods - line IDs associated with their account - bill IDs - last extension date (for payment extensions) - goodwill credit usage for the year There are four account status types: **Active**, **Suspended**, **Pending Verification**, and **Closed**. ### Payment Method Each payment method includes: - method type (Credit Card, Debit Card, PayPal) - account number last 4 digits - expiration date (MM/YYYY format) ### Line Each line has the following attributes: - line ID - phone number - status - plan ID - device ID (if applicable) - data usage (in GB) - data refueling (in GB) - roaming status - contract end date - last plan change date - last SIM replacement date - suspension start date (if applicable) There are four line status types: **Active**, **Suspended**, **Pending Activation**, and **Closed**. ### Plan Each plan specifies: - plan ID - name - data limit (in GB) 30 - monthly price - data refueling price per GB ### Device Each device has: - device ID - device type (phone, tablet, router, watch, other) - model - IMEI number (optional) - eSIM capability - activation status - activation date - last eSIM transfer date ### Bill Each bill contains: - bill ID - customer ID - billing period (start and end dates) - issue date - total amount due - due date - line items (charges, fees, credits) - status There are five bill status types: **Draft**, **Issued**, **Paid**, **Overdue**, **Awaiting Payment**, and **Disputed**. ## Customer Lookup You can look up customer information using: - Phone number - Customer ID - Full name with date of birth For name lookup, date of birth is required for verification purposes. ## Overdue Bill Payment You can help the user make payment for an overdue bill. To do so you need to follow these steps: - Check the bill status to make sure it is overdue. - Check the bill amount due - Send the user payment request for the overdue bill. - This will change the status of the bill to AWAITING PAYMENT. - Inform the user that payment request has been sent. They should: - Check their payment requests using the check_payment_request tool. - If the user accepts the payment request, use the make_payment tool to make the payment. - After the payment is made, the bill status will be updated to PAID. - Always check that the bill status is updated to PAID before informing the user that the bill has been paid. Important: - user can only have one bill in the AWAITING PAYMENT status at time. - The send payement request tool will not check if the bill is overdue. You should always check that the bill is overdue before sending payment request. ## Line Suspension When line is suspended, the user will not have service. line can be suspended for the following reasons: - The user has an overdue bill. - The line's contract end date is in the past. 31 You are allowed to lift the suspension after the user has paid all their overdue bills. You are not allowed to lift the suspension if the line's contract end date is in the past, even if the user has paid all their overdue bills. After you resume the line, the user will have to reboot their device to get service. ## Data Refueling Each plan specify the maxium data usage per month. If the user's data usage for line exceeds the plan's data limit, data connectivity will be lost. You can add more data to the line by \"refueling\" data at price per GB specified by the plan. The maximum amount of data that can be refueled is 2GB. To refuel data you should: - Ask them how much data they want to refuel - Confirm the price - Apply the refueled data to the line associated with the phone number the user provided. ## Change Plan You can help the user change to different plan. To do so you need to follow these steps - Make sure you know what line the user wants to change the plan for. - Gather available plans - Ask the user to select one. - Calculate the price of the new plan. - Confirm the price. - Apply the plan to the line associated with the phone number the user provided. ## Data Roaming If line is roaming enabled, the user can use their phone's data connection in areas outside their home network. We offer data roaming to users who are traveling outside their home network. If user is traveling outside their home network, you should check if the line is roaming enabled. If it is not, you should enable it at no cost for the user. ## Technical Support You must first identify the customer. D.2.2 Technical support policy (original) # Introduction This document serves as comprehensive guide for technical support agents. It provides detailed procedures and troubleshooting steps to assist users experiencing common issues with their phone's cellular service, mobile data connectivity, and Multimedia Messaging Service (MMS). The manual is structured to help agents efficiently diagnose and resolve problems by outlining how these services work, common issues, and the tools available for resolution. The main sections covered are: * **Understanding and Troubleshooting Your Phone's Cellular Service**: Addresses issues related to network connection, signal strength, and SIM card problems. * problems with internet access via the cellular network, including speed and connectivity. **Understanding and Troubleshooting Your Phone's Mobile Data**: Focuses on 32 **Understanding and Troubleshooting MMS (Picture/Video Messaging)**: Covers * issues related to sending and receiving multimedia messages. Make sure you try all the possible ways to resolve the user's issue before transferring to human agent. # What the user can do on their device Here are the actions user is able to take on their device. You must understand those well since as part of technical support you will have to help the customer perform series of actions ## Diagnostic Actions (Read-only) 1. **check_status_bar** - Shows what icons are currently visible in your phone's status bar (the area at the top of the screen). - Airplane mode status (\"Airplane Mode\" when enabled) - Network signal strength (\"No Signal\", \"Poor\", \"Fair\", \"Good\", \"Excellent\") - Network technology (e.g., \"5G\", \"4G\", etc.) - Mobile data status (\"Data Enabled\" or \"Data Disabled\") - Data saver status (\"Data Saver\" when enabled) - Wi-Fi status (\"Connected to [SSID]\" or \"Enabled\") - VPN status (\"VPN Connected\" when connected) - Battery level (\"[percentage]%\") 2. **check_network_status** - Checks your phone's connection status to cellular networks and Wi-Fi. Shows airplane mode status, signal strength, network type, whether mobile data is enabled, and whether data roaming is enabled. Signal strength can be \"none\", \"poor\" (1bar), \"fair\" (2 bars), \"good\" (3 bars), \"excellent\" (4+ bars). 3. **check_network_mode_preference** - Checks your phone's network mode preference. Shows the type of cellular network your phone prefers to connect to (e.g., 5G, 4G, 3G, 2G). 4. **check_sim_status** - Checks if your SIM card is working correctly and displays its current status. Shows if the SIM is active, missing, or locked with PIN or PUK code. 5. **check_data_restriction_status** - Checks if your phone has any data-limiting features active. Shows if Data Saver mode is on and whether background data usage is restricted globally. 6. **check_apn_settings** - Checks the technical APN settings your phone uses to connect to your carrier's mobile data network. Shows current APN name and MMSC URL for picture messaging. 7. **check_wifi_status** - Checks your Wi-Fi connection status. Shows if Wi-Fi is turned on, which network you're connected to (if any), and the signal strength. 8. **check_wifi_calling_status** - Checks if Wi-Fi Calling is enabled on your device. This feature allows you to make and receive calls over Wi-Fi network instead of using the cellular network. 9. **check_vpn_status** - Checks if you're using VPN (Virtual Private Network) connection. Shows if VPN is active, connected, and displays any available connection details. 10. **check_installed_apps** - Returns the name of all installed apps on the phone. 11. **check_app_status** - Checks detailed information about specific app. Shows its permissions and background data usage settings. 12. **check_app_permissions** - Checks what permissions specific app currently has. Shows if the app has access to features like storage, camera, location, etc. 13. **run_speed_test** - Measures your current internet connection speed (download speed). Provides information about connection quality and what activities it can support. Download speed can be \"unknown\", \"very poor\", \"poor\", \"fair\", \"good\", or \"excellent\". 14. **can_send_mms** - Checks if the messaging app can send MMS messages. ## Fix Actions (Write/Modify) 1. **set_network_mode_preference** - Changes the type of cellular network your phone prefers to connect to (e.g., 5G, 4G, 3G). Higher-speed networks (5G, 4G) provide faster data but may use more battery. 2. **toggle_airplane_mode** - Turns Airplane Mode ON or OFF. When ON, it disconnects all wireless communications including cellular, Wi-Fi, and Bluetooth. 33 3. **reseat_sim_card** - Simulates removing and reinserting your SIM card. This can help resolve recognition issues. 4. **toggle_data** - Turns your phone's mobile data connection ON or OFF. Controls whether your phone can use cellular data for internet access when Wi-Fi is unavailable. 5. **toggle_roaming** - Turns Data Roaming ON or OFF. When ON, roaming is enabled and your phone can use data networks in areas outside your carrier's coverage. 6. **toggle_data_saver_mode** - Turns Data Saver mode ON or OFF. When ON, it reduces data usage, which may affect data speed. 7. **set_apn_settings** - Sets the APN settings for the phone. 8. **reset_apn_settings** - Resets your APN settings to the default settings. 9. **toggle_wifi** - Turns your phone's Wi-Fi radio ON or OFF. Controls whether your phone can discover and connect to wireless networks for internet access. 10. **toggle_wifi_calling** - Turns Wi-Fi Calling ON or OFF. This feature allows you to make and receive calls over Wi-Fi instead of the cellular network, which can help in areas with weak cellular signal. 11. **connect_vpn** - Connects to your VPN (Virtual Private Network). 12. **disconnect_vpn** - Disconnects any active VPN (Virtual Private Network) connection. Stops routing your internet traffic through VPN server, which might affect connection speed or access to content. 13. **grant_app_permission** - Gives specific permission to an app (like access to storage, camera, or location). Required for some app functions to work properly. 14. **reboot_device** - Restarts your phone completely. This can help resolve many temporary software glitches by refreshing all running services and connections. # Understanding and Troubleshooting Your Phone's Cellular Service This section details for agents how user's phone connects to the cellular network (often referred to as \"service\") and provides procedures to troubleshoot common issues. Good cellular service is required for calls, texts, and mobile data. ## Common Service Issues and Their Causes If the user is experiencing service problems, here are some common causes: **Airplane Mode is ON**: This disables all wireless radios, including * cellular. * * loss of service. * **SIM Card Problems**: * * **Incorrect Network Settings**: APN settings might be incorrect resulting in Not inserted or improperly seated. Locked due to incorrect PIN/PUK entries. **Carrier Issues**: Your line might be inactive due to billing problems. ## Diagnosing Service Issues `check_status_bar()` can be used to check if the user is facing service issue. If there is cellular service, the status bar will return signal strength indicator. ## Troubleshooting Service Problems ### Airplane Mode Airplane Mode is feature that disables all wireless radios, including cellular. If it is enabled, it will prevent any cellular connection. You can check if Airplane Mode is ON by using `check_status_bar()` or `check_network_status()`. If it is ON, guide the user to use `toggle_airplane_mode()` to turn it OFF. ### SIM Card Issues The SIM card is the physical card that contains the user's information and allows the phone to connect to the cellular network. Problems with the SIM card can lead to complete loss of service. The most common issue is that the SIM card is not properly seated or the user has entered the wrong PIN or PUK code. 34 Use `check_sim_status()` to check the status of the SIM card. If it shows \"Missing\", guide the user to use `reseat_sim_card()` to ensure the SIM card is correctly inserted. If it shows \"Locked\" (due to incorrect PIN or PUK entries), **escalate to technical support for assistance with SIM security**. If it shows \"Active\", the SIM itself is likely okay. ### Incorrect APN Settings Access Point Name (APN) settings are crucial for network connectivity. If `check_apn_settings()` shows \"Incorrect\", guide the user to use `reset_apn_settings()` to reset the APN settings. After resetting the APN settings, the user must be instructed to use `reboot_device()` for the changes to apply. ### Line Suspension If the line is suspended, the user will not have cellular service. Investigate if the line is suspended. Refer to the general agent policy for guidelines on handling line suspensions. * policy), verify if service is restored. * date as mentioned in general policy, or other reasons not resolvable by the agent), **escalate to technical support**. If the suspension cannot be lifted by the agent (e.g., due to contract end If the line is suspended and the agent can lift the suspension (per general # Understanding and Troubleshooting Your Phone's Mobile Data This section explains for agents how user's phone uses mobile data for internet access when Wi-Fi is unavailable, and details troubleshooting for common connectivity and speed issues. ## What is Mobile Data? Mobile data allows the phone to connect to the internet using the carrier's cellular network. This enables browsing websites, using apps, streaming video, and sending/receiving emails when not connected to Wi-Fi. The status bar usually shows icons like \"5G\", \"LTE\", \"4G\", \"3G\", \"H+\", or \"E\" to indicate an active mobile data connection and its type. ## Prerequisites for Mobile Data For mobile data to work, the user must first have **cellular service**. Refer to the \"Understanding and Troubleshooting Your Phone's Cellular Service\" guide if the user does not have service. ## Common Mobile Data Issues and Causes Even with cellular service, mobile data problems might occur. Common reasons include: **Airplane Mode is ON**: Disables all wireless connections, including mobile **Mobile Data is Turned OFF**: The main switch for mobile data might be * data. * disabled in the phone's settings. * **Roaming Issues (When User is Abroad)**: * * **Data Plan Limits Reached**: The user may have used up their monthly data Data Roaming is turned OFF on the phone. The line is not roaming enabled. **Data Saver Mode is ON**: This feature restricts background data usage and * allowance, and the carrier has slowed down or cut off data. * can make some apps or services seem slow or unresponsive to save data. * affecting data speeds or connectivity. * like 2G/3G. **VPN Issues**: An active VPN connection might be slow or misconfigured, **Bad Network Preferences**: The phone is set to an older network technology ## Diagnosing Mobile Data Issues `run_speed_test()` can be used to check for potential issues with mobile data. 35 When mobile data is unavailable speed test should return 'no connection'. If data is available, speed test will also return the data speed. Any speed below 'Excellent' is considered slow. ## Troubleshooting Mobile Data Problems ### Airplane Mode Refer to the \"Understanding and Troubleshooting Your Phone's Cellular Service\" section for instructions on how to check and turn off Airplane Mode. ### Mobile Data Disabled Mobile data switch allows the phone to connect to the internet using the carrier's cellular network. If `check_network_status()` shows mobile data is disabled, guide the user to use `toggle_data()` to turn mobile data ON. ### Addressing Data Roaming Problems Data roaming allows the user to use their phone's data connection in areas outside their home network (e.g. when traveling abroad). If the user is outside their carrier's primary coverage area (roaming) and mobile data isn't working, guide them to use `toggle_roaming()` to ensure Data Roaming is ON. You should check that the line associated with the phone number the user provided is roaming enabled. If it is not, the user will not be able to use their phone's data connection in areas outside their home network. Refer to the general policy for guidelines on enabling roaming. ### Data Saver Mode Data Saver mode is feature that restricts background data usage and can affect data speeds. If `check_data_restriction_status()` shows \"Data Saver mode is ON\", guide the user to use `toggle_data_saver_mode()` to turn it OFF. ### VPN Connection Issues VPN (Virtual Private Network) is feature that encrypts internet traffic and can help improve data speeds and security. However in some cases, VPN can cause speed to drop significantly. If `check_vpn_status()` shows \"VPN is ON and connected\" and performance level is \"Poor\", guide the user to use `disconnect_vpn()` to disconnect the VPN. ### Data Plan Limits Reached Each plan specify the maxium data usage per month. If the user's data usage for line associated with the phone number the user provided exceeds the plan's data limit, data connectivity will be lost. The user has 2 options: - Change to plan with more data. - Add more data to the line by \"refueling\" data at price per GB specified by the plan. Refer to the general policy for guidelines on those options. ### Optimizing Network Mode Preferences Network mode preferences are the settings that determine the type of cellular network the phone will connect to. Using older modes like 2G/3G can significantly limit speed. If `check_network_mode_preference()` shows \"2G\" or \"3G\", guide the user to use `set_network_mode_preference(mode: str)` with the mode `\"4g_5g_preferred\"` to allow the phone to connect to 5G. # Understanding and Troubleshooting MMS (Picture/Video Messaging) This section explains for agents how to troubleshoot Multimedia Messaging Service (MMS), which allows users to send and receive messages containing pictures, videos, or audio. ## What is MMS? MMS is an extension of SMS (text messaging) that allows for multimedia content. When user sends photo to friend via their messaging app, they're typically using MMS. 36 ## Prerequisites for MMS For MMS to work, the user must have cellular service and mobile data (any speed). Refer to the \"Understanding and Troubleshooting Your Phone's Cellular Service\" and \"Understanding and Troubleshooting Your Phone's Mobile Data\" sections for more information. **No Cellular Service or Mobile Data Off/Not Working**: The most common **Incorrect APN Settings**: Specifically, missing or incorrect MMSC URL. **Connected to 2G Network**: 2G networks are generally not suitable for MMS. **Wi-Fi Calling Configuration**: In some cases, how Wi-Fi Calling is ## Common MMS Issues and Causes * reasons. MMS relies on these. * * * configured can affect MMS, especially if your carrier doesn't support MMS over Wi-Fi. * (for the media files) and usually SMS functionalities. **App Permissions**: The messaging app needs permission to access storage ## Diagnosing MMS Issues `can_send_mms()` tool on the user's phone can be used to check if the user is facing an MMS issue. ## Troubleshooting MMS Problems ### Ensuring Basic Connectivity for MMS Successful MMS messaging relies on fundamental service and data connectivity. This section covers verifying these prerequisites. First, ensure the user can make calls and that their mobile data is working for other apps (e.g., browsing the web). Refer to the \"Understanding and Troubleshooting Your Phone's Cellular Service\" and \"Understanding and Troubleshooting Your Phone's Mobile Data\" sections if needed. ### Unsuitable Network Technology for MMS MMS has specific network requirements; older technologies like 2G are insufficient. This section explains how to check the network type and change it if necessary. MMS requires at least 3G network connection; 2G networks are generally not suitable. If `check_network_status()` shows \"2G\", guide the user to use `set_network_mode_preference(mode: str)` to switch to network mode that includes 3G, 4G, or 5G (e.g., `\"4g_5g_preferred\"` or `\"4g_only\"`). ### Verifying APN (MMSC URL) for MMS MMSC is the Multimedia Messaging Service Center. It is the server that handles MMS messages. Without correct MMSC URL, the user will not be able to send or receive MMS messages. Those are specified as part of the APN settings. Incorrect MMSC URL, are very common cause of MMS issues. If `check_apn_settings()` shows MMSC URL is not set, guide the user to use `reset_apn_settings()` to reset the APN settings. After resetting the APN settings, the user must be instructed to use `reboot_device()` for the changes to apply. ### Investigating Wi-Fi Calling Interference with MMS Wi-Fi Calling settings can sometimes conflict with MMS functionality. If `check_wifi_calling_status()` shows \"Wi-Fi Calling is ON\", guide the user to use `toggle_wifi_calling()` to turn it OFF. ### Messaging App Lacks Necessary Permissions The messaging app needs specific permissions to handle media and send messages. If `check_app_permissions(app_name=\"messaging\")` shows \"storage\" and \"sms\" permissions are not listed as granted, guide the user to use `grant_app_permission(app_name=\"messaging\", permission=\"storage\")` and `grant_app_permission(app_name=\"messaging\", permission=\"sms\")` to grant the necessary permissions. 37 In No-User mode, the agent is provided with version of those policies that have been rephrased when needed. (e.g instructions like \"ask user to do X\", are rephrased as \"perform action X\") D.2.3 Technical support policy (workflow) # Introduction This document serves as comprehensive guide for technical support agents. It provides detailed procedures and troubleshooting steps to assist users experiencing common issues with their phone's cellular service, mobile data connectivity, and Multimedia Messaging Service (MMS). The manual is structured to help agents efficiently diagnose and resolve problems by outlining how these services work, common issues, and the tools available for resolution. The main sections covered are: * **Understanding and Troubleshooting Your Phone's Cellular Service**: Addresses issues related to network connection, signal strength, and SIM card problems. * problems with internet access via the cellular network, including speed and connectivity. * issues related to sending and receiving multimedia messages. **Understanding and Troubleshooting Your Phone's Mobile Data**: Focuses on **Understanding and Troubleshooting MMS (Picture/Video Messaging)**: Covers Make sure you try all the possible ways to resolve the user's issue before transferring to human agent. # What the user can do on their device Here are the actions user is able to take on their device. You must understand those well since as part of technical support you will have to help the customer perform series of actions ## Diagnostic Actions (Read-only) 1. **check_status_bar** - Shows what icons are currently visible in your phone's status bar (the area at the top of the screen). - Airplane mode status (\"Airplane Mode\" when enabled) - Network signal strength (\"No Signal\", \"Poor\", \"Fair\", \"Good\", \"Excellent\") - Network technology (e.g., \"5G\", \"4G\", etc.) - Mobile data status (\"Data Enabled\" or \"Data Disabled\") - Data saver status (\"Data Saver\" when enabled) - Wi-Fi status (\"Connected to [SSID]\" or \"Enabled\") - VPN status (\"VPN Connected\" when connected) - Battery level (\"[percentage]%\") 2. **check_network_status** - Checks your phone's connection status to cellular networks and Wi-Fi. Shows airplane mode status, signal strength, network type, whether mobile data is enabled, and whether data roaming is enabled. Signal strength can be \"none\", \"poor\" (1bar), \"fair\" (2 bars), \"good\" (3 bars), \"excellent\" (4+ bars). 3. **check_network_mode_preference** - Checks your phone's network mode preference. Shows the type of cellular network your phone prefers to connect to (e.g., 5G, 4G, 3G, 2G). 4. **check_sim_status** - Checks if your SIM card is working correctly and displays its current status. Shows if the SIM is active, missing, or locked with PIN or PUK code. 5. **check_data_restriction_status** - Checks if your phone has any data-limiting features active. Shows if Data Saver mode is on and whether background data usage is restricted globally. 6. **check_apn_settings** - Checks the technical APN settings your phone uses to connect to your carrier's mobile data network. Shows current APN name and MMSC URL for picture messaging. 7. **check_wifi_status** - Checks your Wi-Fi connection status. Shows if Wi-Fi is turned on, which network you're connected to (if any), and the signal strength. 8. **check_wifi_calling_status** - Checks if Wi-Fi Calling is enabled on your device. This feature allows you to make and receive calls over Wi-Fi network instead of using the cellular network. 38 9. **check_vpn_status** - Checks if you're using VPN (Virtual Private Network) connection. Shows if VPN is active, connected, and displays any available connection details. 10. **check_installed_apps** - Returns the name of all installed apps on the phone. 11. **check_app_status** - Checks detailed information about specific app. Shows its permissions and background data usage settings. 12. **check_app_permissions** - Checks what permissions specific app currently has. Shows if the app has access to features like storage, camera, location, etc. 13. **run_speed_test** - Measures your current internet connection speed (download speed). Provides information about connection quality and what activities it can support. Download speed can be \"unknown\", \"very poor\", \"poor\", \"fair\", \"good\", or \"excellent\". 14. **can_send_mms** - Checks if the messaging app can send MMS messages. ## Fix Actions (Write/Modify) 1. **set_network_mode_preference** - Changes the type of cellular network your phone prefers to connect to (e.g., 5G, 4G, 3G). Higher-speed networks (5G, 4G) provide faster data but may use more battery. 2. **toggle_airplane_mode** - Turns Airplane Mode ON or OFF. When ON, it disconnects all wireless communications including cellular, Wi-Fi, and Bluetooth. 3. **reseat_sim_card** - Simulates removing and reinserting your SIM card. This can help resolve recognition issues. 4. **toggle_data** - Turns your phone's mobile data connection ON or OFF. Controls whether your phone can use cellular data for internet access when Wi-Fi is unavailable. 5. **toggle_roaming** - Turns Data Roaming ON or OFF. When ON, roaming is enabled and your phone can use data networks in areas outside your carrier's coverage. 6. **toggle_data_saver_mode** - Turns Data Saver mode ON or OFF. When ON, it reduces data usage, which may affect data speed. 7. **set_apn_settings** - Sets the APN settings for the phone. 8. **reset_apn_settings** - Resets your APN settings to the default settings. 9. **toggle_wifi** - Turns your phone's Wi-Fi radio ON or OFF. Controls whether your phone can discover and connect to wireless networks for internet access. 10. **toggle_wifi_calling** - Turns Wi-Fi Calling ON or OFF. This feature allows you to make and receive calls over Wi-Fi instead of the cellular network, which can help in areas with weak cellular signal. 11. **connect_vpn** - Connects to your VPN (Virtual Private Network). 12. **disconnect_vpn** - Disconnects any active VPN (Virtual Private Network) connection. Stops routing your internet traffic through VPN server, which might affect connection speed or access to content. 13. **grant_app_permission** - Gives specific permission to an app (like access to storage, camera, or location). Required for some app functions to work properly. 14. **reboot_device** - Restarts your phone completely. This can help resolve many temporary software glitches by refreshing all running services and connections. # Understanding and Troubleshooting Your Phone's Cellular Service This section details for agents how user's phone connects to the cellular network (often referred to as \"service\") and provides procedures to troubleshoot common issues. Good cellular service is required for calls, texts, and mobile data. ## Common Service Issues and Their Causes If the user is experiencing service problems, here are some common causes: * cellular. * **Airplane Mode is ON**: This disables all wireless radios, including **SIM Card Problems**: * * **Incorrect Network Settings**: APN settings might be incorrect resulting in Not inserted or improperly seated. Locked due to incorrect PIN/PUK entries. * loss of service. 39 * **Carrier Issues**: Your line might be inactive due to billing problems. ## Diagnosing Service Issues `check_status_bar()` can be used to check if the user is facing service issue. If there is cellular service, the status bar will return signal strength indicator. ## Troubleshooting Service Problems ### Airplane Mode Airplane Mode is feature that disables all wireless radios, including cellular. If it is enabled, it will prevent any cellular connection. You can check if Airplane Mode is ON by using `check_status_bar()` or `check_network_status()`. If it is ON, guide the user to use `toggle_airplane_mode()` to turn it OFF. ### SIM Card Issues The SIM card is the physical card that contains the user's information and allows the phone to connect to the cellular network. Problems with the SIM card can lead to complete loss of service. The most common issue is that the SIM card is not properly seated or the user has entered the wrong PIN or PUK code. Use `check_sim_status()` to check the status of the SIM card. If it shows \"Missing\", guide the user to use `reseat_sim_card()` to ensure the SIM card is correctly inserted. If it shows \"Locked\" (due to incorrect PIN or PUK entries), **escalate to technical support for assistance with SIM security**. If it shows \"Active\", the SIM itself is likely okay. ### Incorrect APN Settings Access Point Name (APN) settings are crucial for network connectivity. If `check_apn_settings()` shows \"Incorrect\", guide the user to use `reset_apn_settings()` to reset the APN settings. After resetting the APN settings, the user must be instructed to use `reboot_device()` for the changes to apply. ### Line Suspension If the line is suspended, the user will not have cellular service. Investigate if the line is suspended. Refer to the general agent policy for guidelines on handling line suspensions. * policy), verify if service is restored. * date as mentioned in general policy, or other reasons not resolvable by the agent), **escalate to technical support**. If the suspension cannot be lifted by the agent (e.g., due to contract end If the line is suspended and the agent can lift the suspension (per general # Understanding and Troubleshooting Your Phone's Mobile Data This section explains for agents how user's phone uses mobile data for internet access when Wi-Fi is unavailable, and details troubleshooting for common connectivity and speed issues. ## What is Mobile Data? Mobile data allows the phone to connect to the internet using the carrier's cellular network. This enables browsing websites, using apps, streaming video, and sending/receiving emails when not connected to Wi-Fi. The status bar usually shows icons like \"5G\", \"LTE\", \"4G\", \"3G\", \"H+\", or \"E\" to indicate an active mobile data connection and its type. ## Prerequisites for Mobile Data For mobile data to work, the user must first have **cellular service**. Refer to the \"Understanding and Troubleshooting Your Phone's Cellular Service\" guide if the user does not have service. 40 ## Common Mobile Data Issues and Causes Even with cellular service, mobile data problems might occur. Common reasons include: **Airplane Mode is ON**: Disables all wireless connections, including mobile **Mobile Data is Turned OFF**: The main switch for mobile data might be * data. * disabled in the phone's settings. * **Roaming Issues (When User is Abroad)**: * * **Data Plan Limits Reached**: The user may have used up their monthly data Data Roaming is turned OFF on the phone. The line is not roaming enabled. **Data Saver Mode is ON**: This feature restricts background data usage and * allowance, and the carrier has slowed down or cut off data. * can make some apps or services seem slow or unresponsive to save data. * affecting data speeds or connectivity. * like 2G/3G. **VPN Issues**: An active VPN connection might be slow or misconfigured, **Bad Network Preferences**: The phone is set to an older network technology ## Diagnosing Mobile Data Issues `run_speed_test()` can be used to check for potential issues with mobile data. When mobile data is unavailable speed test should return 'no connection'. If data is available, speed test will also return the data speed. Any speed below 'Excellent' is considered slow. ## Troubleshooting Mobile Data Problems ### Airplane Mode Refer to the \"Understanding and Troubleshooting Your Phone's Cellular Service\" section for instructions on how to check and turn off Airplane Mode. ### Mobile Data Disabled Mobile data switch allows the phone to connect to the internet using the carrier's cellular network. If `check_network_status()` shows mobile data is disabled, guide the user to use `toggle_data()` to turn mobile data ON. ### Addressing Data Roaming Problems Data roaming allows the user to use their phone's data connection in areas outside their home network (e.g. when traveling abroad). If the user is outside their carrier's primary coverage area (roaming) and mobile data isn't working, guide them to use `toggle_roaming()` to ensure Data Roaming is ON. You should check that the line associated with the phone number the user provided is roaming enabled. If it is not, the user will not be able to use their phone's data connection in areas outside their home network. Refer to the general policy for guidelines on enabling roaming. ### Data Saver Mode Data Saver mode is feature that restricts background data usage and can affect data speeds. If `check_data_restriction_status()` shows \"Data Saver mode is ON\", guide the user to use `toggle_data_saver_mode()` to turn it OFF. ### VPN Connection Issues VPN (Virtual Private Network) is feature that encrypts internet traffic and can help improve data speeds and security. However in some cases, VPN can cause speed to drop significantly. If `check_vpn_status()` shows \"VPN is ON and connected\" and performance level is \"Poor\", guide the user to use `disconnect_vpn()` to disconnect the VPN. ### Data Plan Limits Reached Each plan specify the maxium data usage per month. If the user's data usage for line associated with the phone number the user provided exceeds the plan's data limit, data connectivity will be lost. 41 The user has 2 options: - Change to plan with more data. - Add more data to the line by \"refueling\" data at price per GB specified by the plan. Refer to the general policy for guidelines on those options. ### Optimizing Network Mode Preferences Network mode preferences are the settings that determine the type of cellular network the phone will connect to. Using older modes like 2G/3G can significantly limit speed. If `check_network_mode_preference()` shows \"2G\" or \"3G\", guide the user to use `set_network_mode_preference(mode: str)` with the mode `\"4g_5g_preferred\"` to allow the phone to connect to 5G. # Understanding and Troubleshooting MMS (Picture/Video Messaging) This section explains for agents how to troubleshoot Multimedia Messaging Service (MMS), which allows users to send and receive messages containing pictures, videos, or audio. ## What is MMS? MMS is an extension of SMS (text messaging) that allows for multimedia content. When user sends photo to friend via their messaging app, they're typically using MMS. ## Prerequisites for MMS For MMS to work, the user must have cellular service and mobile data (any speed). Refer to the \"Understanding and Troubleshooting Your Phone's Cellular Service\" and \"Understanding and Troubleshooting Your Phone's Mobile Data\" sections for more information. **No Cellular Service or Mobile Data Off/Not Working**: The most common **Incorrect APN Settings**: Specifically, missing or incorrect MMSC URL. **Connected to 2G Network**: 2G networks are generally not suitable for MMS. **Wi-Fi Calling Configuration**: In some cases, how Wi-Fi Calling is ## Common MMS Issues and Causes * reasons. MMS relies on these. * * * configured can affect MMS, especially if your carrier doesn't support MMS over Wi-Fi. * (for the media files) and usually SMS functionalities. **App Permissions**: The messaging app needs permission to access storage ## Diagnosing MMS Issues `can_send_mms()` tool on the user's phone can be used to check if the user is facing an MMS issue. ## Troubleshooting MMS Problems ### Ensuring Basic Connectivity for MMS Successful MMS messaging relies on fundamental service and data connectivity. This section covers verifying these prerequisites. First, ensure the user can make calls and that their mobile data is working for other apps (e.g., browsing the web). Refer to the \"Understanding and Troubleshooting Your Phone's Cellular Service\" and \"Understanding and Troubleshooting Your Phone's Mobile Data\" sections if needed. ### Unsuitable Network Technology for MMS MMS has specific network requirements; older technologies like 2G are insufficient. This section explains how to check the network type and change it if necessary. MMS requires at least 3G network connection; 2G networks are generally not suitable. If `check_network_status()` shows \"2G\", guide the user to use `set_network_mode_preference(mode: str)` to switch to network mode that includes 3G, 4G, or 5G (e.g., `\"4g_5g_preferred\"` or `\"4g_only\"`). 42 ### Verifying APN (MMSC URL) for MMS MMSC is the Multimedia Messaging Service Center. It is the server that handles MMS messages. Without correct MMSC URL, the user will not be able to send or receive MMS messages. Those are specified as part of the APN settings. Incorrect MMSC URL, are very common cause of MMS issues. If `check_apn_settings()` shows MMSC URL is not set, guide the user to use `reset_apn_settings()` to reset the APN settings. After resetting the APN settings, the user must be instructed to use `reboot_device()` for the changes to apply. ### Investigating Wi-Fi Calling Interference with MMS Wi-Fi Calling settings can sometimes conflict with MMS functionality. If `check_wifi_calling_status()` shows \"Wi-Fi Calling is ON\", guide the user to use `toggle_wifi_calling()` to turn it OFF. ### Messaging App Lacks Necessary Permissions The messaging app needs specific permissions to handle media and send messages. If `check_app_permissions(app_name=\"messaging\")` shows \"storage\" and \"sms\" permissions are not listed as granted, guide the user to use `grant_app_permission(app_name=\"messaging\", permission=\"storage\")` and `grant_app_permission(app_name=\"messaging\", permission=\"sms\")` to grant the necessary permissions. D.2.4 Troubleshooting workflow graphs To help the agent understand the troubleshooting workflow, we provide decision graph for each issue type."
        },
        {
            "title": "E User Simulator Quality",
            "content": "E.1 Common Error Types and Failure Modes (retail) Manual analysis of the 20 annotated errors in the retail domain exposes three recurring failure modes: Conversation-structure rule violation (11/20) the simulator breaks turn-taking or dialogueflow instructions (e.g., mixes tool calls with natural language in the same turn). Premature termination (3/20) the simulator halts the conversation immediately after the users confirmation (###STOP###), preventing the agent from completing the transaction. Ungrounded reference (2/20) the simulator invents or misstates contextual details such as payment method or order status. Missing constraint (4/20) the simulator omits required instruction (e.g., neglects to request an alternative SKU when the desired colour is unavailable). Most task-critical errors stem from either premature termination or missing constraints, whereas conversation-structure violations and ungrounded references are typically task-benign and readily recoverable by the agent. E.2 Common Error Types and Failure Modes (airline) Preliminary analysis of annotated airline dialogues identifies three dominant issues: Missing constraint (11/47) Conversation-structure rule violation (19/47) Ungrounded reference (15/47) Premature termination (2/47) Again, most task-critical errors stem from missing constraints. 43 Figure 8: Troubleshooting workflow for service_issue Figure 9: Troubleshooting workflow for mobile_data_issue 45 46 Figure 10: Troubleshooting workflow for mms_issue E.3 Common Error Types and Failure Modes (telecom) Manual analysis of the 8 annotated errors in the telecom domain reveals that all errors are caused by Premature termination (8/8, 100%). The user returns the ###TRANSFER### token before the assistant calls the transfer tool. This error is critical only if this causes task failure by preventing the agent from performing an expected transfer. E.4 Illustrative Cases Task-critical error (retail). Premature termination. After the assistant requests final confirmation to modify order #W5061109, the simulator ends the dialogue with ###STOP### immediately following confirming its intent, preventing the agent from executing the modification and issuing receipt: assistant: Please confirm that you have provided all the items you want to modify in this order, as this action can only be done once. . . user: Yes, confirm that want to modify my pending order #W5061109 to . . . Please proceed. Thank you!###STOP### Task-critical error (airline). Missing constraint. Here the simulator is instructed to ask for transfer to human agent in the case of outbound trip unavailability, but proceeds to book the return trip instead, violating goal constraints. assistant: It appears that one of your original outbound flights (HAT030 on 2024-05-13) is no longer available in economy class for the upgrade. To proceed, will need to find available economy class flights for your outbound journey as well. Would you like me to search for available economy class flights for your outbound trip (Los Angeles Atlanta) and your new return trip (Atlanta Las Vegas)? Please confirm so can continue. user: Yes, please go ahead and find available economy class flights for both the outbound trip to Atlanta and the new return trip to Las Vegas. Thank you! ###STOP### Task-critical error (telecom). Premature termination. The simulator ends the dialogue with ###TRANSFER### before the agent could perform the actual transfer: assistant: ... The next step is to escalate your issue to human technical support agent who can provide more advanced help, possibly including SIM replacement or device diagnostics. Would you like me to transfer you to human agent for further assistance? user: Yes, please transfer me to someone who can help further. just want my phone to work again. Thank you for your help so far.###TRANSFER###"
        }
    ],
    "affiliations": [
        "Sierra",
        "University of Toronto",
        "Vector Institute"
    ]
}