{
    "paper_title": "QuantAgent: Price-Driven Multi-Agent LLMs for High-Frequency Trading",
    "authors": [
        "Fei Xiong",
        "Xiang Zhang",
        "Aosong Feng",
        "Siqi Sun",
        "Chenyu You"
    ],
    "sections": [
        {
            "title": "Abstract",
            "content": "Recent advances in Large Language Models (LLMs) have demonstrated impressive capabilities in financial reasoning and market understanding. Multi-agent LLM frameworks such as TradingAgent and FINMEM augment these models to long-horizon investment tasks, leveraging fundamental and sentiment-based inputs for strategic decision-making. However, such systems are ill-suited for the high-speed, precision-critical demands of High-Frequency Trading (HFT). HFT requires rapid, risk-aware decisions based on structured, short-horizon signals, including technical indicators, chart patterns, and trend-based features, distinct from the long-term semantic reasoning typical of traditional financial LLM applications. To this end, we introduce QuantAgent, the first multi-agent LLM framework explicitly designed for high-frequency algorithmic trading. The system decomposes trading into four specialized agents, Indicator, Pattern, Trend, and Risk, each equipped with domain-specific tools and structured reasoning capabilities to capture distinct aspects of market dynamics over short temporal windows. In zero-shot evaluations across ten financial instruments, including Bitcoin and Nasdaq futures, QuantAgent demonstrates superior performance in both predictive accuracy and cumulative return over 4-hour trading intervals, outperforming strong neural and rule-based baselines. Our findings suggest that combining structured financial priors with language-native reasoning unlocks new potential for traceable, real-time decision systems in high-frequency financial markets."
        },
        {
            "title": "Start",
            "content": "5 2 0 2 2 1 ] . [ 1 5 9 9 9 0 . 9 0 5 2 : r QuantAgent: Price-Driven Multi-Agent LLMs for High-Frequency Trading Fei Xiong1,2,, Xiang Zhang3,, Aosong Feng4, Siqi Sun5, Chenyu You1 1Stony Brook University, 2Carnegie Mellon University, 3University of British Columbia, 4Yale University, 5Fudan University Equal contribution Recent advances in Large Language Models (LLMs) have demonstrated impressive capabilities in financial reasoning and market understanding. Multi-agent LLM frameworks such as TradingAgent and FINMEM augment these models to long-horizon investment tasks, leveraging fundamental and sentiment-based inputs for strategic decision-making. However, such systems are ill-suited for the high-speed, precision-critical demands of High-Frequency Trading (HFT). HFT requires rapid, risk-aware decisions based on structured, short-horizon signals, including technical indicators, chart patterns, and trend-based features, distinct from the long-term semantic reasoning typical of traditional financial LLM applications. To this end, we introduce QuantAgent, the first multi-agent LLM framework explicitly designed for high-frequency algorithmic trading. The system decomposes trading into four specialized agents, Indicator, Pattern, Trend, and Risk, each equipped with domain-specific tools and structured reasoning capabilities to capture distinct aspects of market dynamics over short temporal windows. In zero-shot evaluations across ten financial instruments, including Bitcoin and Nasdaq futures, QuantAgent demonstrates superior performance in both predictive accuracy and cumulative return over 4-hour trading intervals, outperforming strong neural and rule-based baselines. Our findings suggest that combining structured financial priors with language-native reasoning unlocks new potential for traceable, real-time decision systems in high-frequency financial markets. Github: https://github.com/Y-Research-SBU/QuantAgent Website: https://Y-Research-SBU.github.io/QuantAgent/ Corresponding Authors: chenyu.you@stonybrook.edu, siqisun@fudan.edu.cn"
        },
        {
            "title": "Introduction",
            "content": "It takes 20 years to build reputation and five minutes to ruin it. Warren Buffett Technical analysis views historical price data as the most immediate and information-dense reflection of market conditions (Pring, 1991). The core idea is that price movements embed company fundamentals, macroeconomic events, institutional flows, and collective sentiment (Murphy, 1999). Each trading interval, whether minute, an hour, or day, can be summarized by four key values: opening, highest, lowest, and closing price (OHLC). This universal representation enables analysts to apply well-established algorithms and heuristics across diverse assets, from equities and commodities to cryptocurrencies, for detecting trends, reversals, breakouts, and momentum shifts (Moskowitz et al., 2012). Under the efficient market hypothesis, asset prices rapidly incorporate all publicly available information (Fama, 1970), making patterns and trends within OHLC data sufficient basis for short-term prediction without requiring auxiliary text or news inputs. Meanwhile, Large Language Models (LLMs) have recently demonstrated advanced capabilities in multi-step reasoning, tool use, code synthesis, and interpretable explanation (OpenAI et al., 2024; Zhang et al., 2025b). These strengths position LLMs as promising candidates for quantitative finance (Yang et al., 2023), where reasoning over rules (Zhang et al., 2025a), integrating signals, and applying risk controls are essential. Yet, most LLM-based financial systems to date rely heavily on textual inputs, such as news, social media, or earnings reports (Nguyen et al., 2015; Xiao et al., 2025; Zhang et al., 2023a; Zakir et al., 2025). This design suffers from two limitations: (i) textual signals often lag market movements (Chordia et al., 2013), and (ii) textual data is noisy, unstructured, and unreliable (Liu et al., 2022). Since price itself frequently encodes sufficient 1 information for short-horizon trading, there is compelling opportunity to directly align LLM reasoning with structured price-based signals. However, to the best of our knowledge, no prior system has explored LLM-driven high-frequency trading (HFT) directly over OHLC data. We propose QuantAgent, the first multi-agent LLM framework tailored to high-frequency algorithmic trading. QuantAgent decomposes trading into four specialized agents, IndicatorAgent, PatternAgent, TrendAgent, and RiskAgent each designed to capture complementary dimension of technical analysis. IndicatorAgent condenses raw OHLC inputs into robust technical indicators, providing noise-resistant summary. PatternAgent identifies geometric formations such as peaks, troughs, and consolidations, leveraging the multi-modal reasoning abilities of LLMs (Nison, 2001; Yin et al., 2023; Zhang et al., 2023b). TrendAgent assesses directional momentum across multiple horizons, while RiskAgent synthesizes all signals into balanced riskreward profile. The final decision integrates these structured perspectives into transparent, human-readable trading actions (Schick et al., 2023). We evaluate QuantAgent on diverse benchmark spanning commodities (crude oil, gold), equities (S&P 500, QQQ ETF), and cryptocurrencies (Bitcoin), each with approximately three years of historical OHLC data. Using 4-hour trading resolution, our system consistently outperforms both rule-based and neural baselines, with particularly strong gains in equity markets. Rolling validation experiments demonstrate robust generalization, achieving up to 80% directional accuracy in predicting price movements (Dixon et al., 2020). Beyond raw performance, QuantAgent produces traceable, language-native explanations of its decisions, offering level of transparency absent from traditional algorithmic trading pipelines. Finally, we develop local, browser-based interface that enables users to select assets, visualize market dynamics, and interact with LLM-generated analyses. This design emphasizes transparency and interpretability, departing from opaque, monolithic trading systems. By grounding decisions in price-driven signals and structured reasoning, QuantAgent represents step toward LLM-based frameworks that are not only effective in high-frequency markets but also explainable and risk-aware."
        },
        {
            "title": "2.1 Agent-Based LLMs for Financial Decision-Making",
            "content": "The design of QuantAgent builds on rapidly growing line of research exploring how LLMs can be organized into agent-based systems for financial decision-making. FINMEM (Yu et al., 2023) augments trading agent with layered working and long-term memory, allowing it to integrate heterogeneous temporal signals, ranging from macroeconomic indicators to corporate earnings reports, into reflective summaries that improve interpretability and decision quality (Yang et al., 2023). Similarly, FINCON (Yu et al., 2024) introduces manageranalyst hierarchy trained with verbal reinforcement learning, where role-specific agents collaborate across asset classes to coordinate reasoning. Both frameworks are designed for long-horizon forecasting and context-rich strategies, in contrast to sentiment-driven pipelines such as MarketBERT (Sousa et al., 2019) and FinBERT (Yang et al., 2020), which target reactive, short-term responses to textual sentiment. Beyond this perspective, TradingAgents (Xiao et al., 2025) models the collaborative workflow of institutional trading desks. Distinct agents, technical analysts, news analysts, risk managers, and portfolio traders, communicate through structured messages, collectively shaping trade decisions. By incorporating both market data and public news sources (Tumarkin and Whitelaw, 2001), the system demonstrates that certain textual signals retain informational value for decision-making. However, the primary design goal in TradingAgents is interpretability in fast-moving, information-rich contexts, rather than the microsecond-level execution and price-driven reasoning required for high-frequency trading."
        },
        {
            "title": "2.2 Quantitative Trading Based on Indicators and Patterns",
            "content": "Prior to the advent of LLM-based agents, quantitative trading systems primarily relied on structured numerical indicators, such as price trends, volatility measures, and momentum, to guide intraday decisions. Early work by Lo et al. (2000) demonstrated that certain nonlinear price patterns, when identified over short histories, carry statistically significant predictive power. Subsequent research exposed key limitations of these approaches, including their overemphasis on single-step accuracy and susceptibility to researcher bias (Chen and Chen, 2 2016), motivating the development of more robust pattern-matching techniques capable of adapting to evolving market dynamics. Momentum-based strategies (Jegadeesh and Titman, 1993; Moskowitz et al., 2012) remain among the most widely studied, exploiting the empirical tendency of past winners and losers to persist in their trajectories. Beyond linear indicators, frameworks such as Elliott wave theory (Prechter, 2005) and curated chart pattern libraries seek to capture higher-order geometric regularities in raw K-line sequences. More recently, advances in machine vision have enabled automatic detection of such formations, with convolutional neural networks achieving recognition performance comparable to, or surpassing, human experts in live trading environments (Duong et al., 2025). While these methods offer interpretability and computational efficiency, they often degrade in volatile or noisy regimes. Our LLM-based multi-agent framework builds on this line of work by enabling flexible, language-native reasoning over indicators, patterns, and trends. By combining structured technical signals with the adaptive reasoning capacity of LLMs, QuantAgent improves robustness and adaptability in dynamic, high-frequency markets."
        },
        {
            "title": "3 QuantAgent",
            "content": "To bridge the gap between traditional high-frequency quantitative trading and recent advances in multi-agent LLM systems, we introduce QuantAgent, collaborative framework for low-latency market decision-making. QuantAgent integrates classical technical analysis with prompt-structured LLM reasoning, enabling modular and interpretable financial intelligence. Built on LangGraph (LangChain, 2025), the system simulates the workflow of institutional trading desks, where specialized agents execute distinct analytical roles to support rapid and coordinated decision-making. In contrast to prior LLM-based frameworks that incorporate external sources such as news or social media sentiment, QuantAgent operates solely on price-derived market signals. This design choice reflects the efficient market hypothesis, which posits that asset prices incorporate available information by aggregating the actions and beliefs of market participants over time (Murphy, 1999). By grounding analysis exclusively in OHLC data and technical indicators, QuantAgent avoids the latency, noise, and unpredictability of textual sources, while remaining fast, interpretable, and directly aligned with the demands of high-frequency trading. The system decomposes trading into four specialized agent, IndicatorAgent, PatternAgent, TrendAgent, and DecisionAgent, that communicate through structured prompts. Each agent captures complementary perspective on short-horizon market dynamics: numerical indicators, geometric patterns, directional momentum, and integrated decision-making. In the following subsections, we describe the design of each agent in detail and formalize the technical components underlying our framework."
        },
        {
            "title": "3.1.1 IndicatorAgent Design",
            "content": "IndicatorAgent constitutes the initial analytical module of our framework, responsible for transforming raw OHLC sequences into structured quantitative signals (Figure 1). In high-frequency trading (HFT), where decisions must be executed under strict latency constraints, technical indicators provide compact representations that highlight shifts in market momentum and sentiment. Formally, this process can be viewed as mapping from price tuples to an interpretable signal space, (O, H, L, C) (cid:55) S, where denotes set of derived features summarizing short-horizon market dynamics (Lo et al., 2000). By abstracting low-level price data into higher-level features, IndicatorAgent enables fast and interpretable downstream reasoning. IndicatorAgent is the first agent of our system that simulates the workflow in professional trading settings, focusing on extracting quantitative signals from raw price data (Figure 1). In high-frequency trading (HFT) environments, where decisions must be both fast and data-driven, technical indicators offer compact way to highlight changes in market movement and sentiment. Indicators help reveal subtle changes in market movement and sentiment by transforming Open, High, Low, Close (OHLC) data into signals, (O, H, L, C) (cid:55) S, where denotes interpretable trading signals (Lo et al., 2000). IndicatorAgent supports decision-making by summarizing the technical landscape in fast and interpretable way. 3 Figure 1 Workflow of IndicatorAgent. An upstream LLM invokes analytical tools to compute standard technical indicators (MACD, RSI, RoC, and Williams %R), each classified as Bullish (Green), Neutral (Grey), or Bearish (Red) according to predefined thresholds. The resulting signal set is passed to downstream LLM, which consolidates the information into three structured outputs, Forecast, Evidence, and Trigger, used to support real-time trading decisions. Specifically, IndicatorAgent draws on diverse set of five widely used technical indicators to extract actionable signals from market data. The Relative Strength Index (RSI) quantifies momentum and highlights potential overbought or oversold conditions, which can indicate potential reversal (Wilder, 1978). The Moving Average Convergence Divergence (MACD) tracks how shortand long-term price trends are aligning or diverging, revealing possible momentum shifts (Appel, 2005). The Rate of Change (RoC) shows how fast the price is moving up or down, helping to spot changes in speed or direction (Murphy, 1999). The Stochastic Oscillator (STOCH) identifies potential market turning points by checking whether the current price is near its recent high or low (Investopedia, n.d.). Finally, Williams %R (WILLR) measures how far the current price has fallen from its recent high, helping identify when the market might decline or be preparing for reversal (Williams, 2011). Among the selected indicators, MACD is particularly representative due to its strengths in trend-following. MACD is designed to indicate momentum shifts by analyzing the divergence between two exponential moving averages (EMAs). It is calculated as: Et = α Pt + (1 α) Et1 Mt = (f ) (s) St = EMt The exponential moving average (EMA), denoted as Et, is weighted average of past prices that assigns greater significance to more recent observations, thereby making it more responsive to recent price changes. Specifically, Pt represents the current price at time t, Et1 is the EMA value from previous timestep, and α (0, 1) is the smoothing factor that determines the relative weight of the current price versus past EMA values. The factor α is typically computed as α = 2 +1 where is the number of time periods (Murphy, 1999). Overall, EMA offers smoothed representation of price trends, emphasizing recent movements while retaining historical context. In our system, we define fast EMA (f ) with = 26. The momentum signal Mt is then computed as the difference: Mt = (f ) The signal line St is constructed as 9-period EMA over the MACD sequence EMt: St = EMt. bullish signal occurs when Mt crosses above St, indicating upward momentum, whereas downward crossover suggests growing bearish pressure. This formulation makes Mt effective for capturing mid-term trend shifts (e.g., on 4-hour charts), while filtering out high-frequency price noise (Appel, 2005; Murphy, 1999). with = 12 and slow EMA (s) (s) Together, these indicators capture range of market behaviors, from short-term price volatility to longer-term momentum trends. IndicatorAgent integrates these signals into clear, structured summary that reflects current market conditions. Instead of following fixed rules, it interprets each signal in the context of recent price action, highlighting key dynamics such as emerging momentum, overbought or oversold conditions, and abrupt directional shifts (Murphy, 1999). By delivering timely and contextualized insights, IndicatorAgent equips the 4 Decision Agent with actionable information. This layered reasoning enhances the systems responsiveness and reliability, which is particularly important in high-frequency trading scenarios where rapid market interpretation is critical (Lo et al., 2000). Figure 2 Workflow of PatternAgent. An upstream LLM invokes tools to transform raw price action into an annotated sketch highlighting key movements (e.g., sharp decline followed by recovery). downstream LLM then matches this pattern graph against library of canonical formations, such as double bottom, double top, V-shaped reversal, and bearish flag, to identify the closest formation. The recognized pattern, together with its analysis, is forwarded to subsequent modules to complement numerical indicators."
        },
        {
            "title": "3.1.2 PatternAgent Design",
            "content": "While IndicatorAgent offers useful signals, these numerical indicators can become unclearespecially when price movement stalls or enters new regime (Murphy, 1999; Lo et al., 2000). To address these limitations, our PatternAgent introduces more visual and structural multi-modal reasoning perspective (Figure 2). Upon receiving request to analyze market patterns, PatternAgent first utilizes LLM-binded tools to generate clear, simplified candlestick charts directly from raw price data. These visualizations present recent market behavior without explicitly highlighting specific geometric shapes or details. Our agent, instead, automatically detects essential visual features from price movements, such as significant high and low points, the general direction of price changes, and key turning areas, effectively extracting the overall shape of the market directly from the data (Wang et al., 2023; Zhang et al., 2024). Using this information, PatternAgent compares the current market structure to an extensive library of wellknown patterns described in clear language. Each pattern in this library includes concise yet detailed descriptions of its visual form and the market behaviors it typically signals. Through this comparison, PatternAgent identifies the most plausible match and evaluates its relevance to the current context, enabling more informed decisions. This process blends visual understanding with language-based reasoning to help uncover patterns that often precede major price moves (Lo et al., 2000). This approach reduces noise and helps the system focus on core market structures that are more stable and interpretable than individual price fluctuations. For instance, to detect V-shaped reversal (Figure 2), PatternAgent looks for sharp drop in price followed by quick recovery, forming clear shape on the chart. Instead of applying fixed thresholds or rigid rules, the agent evaluates whether the movements before and after the lowest point are steep and balanced enough. This indicates how such patterns are commonly interpreted by human analysts in traditional chart-based analysis (Pring, 1991). After identifying pattern with high confidence, PatternAgent generates clear and accessible explanation of what the pattern might indicate about current market behavior. For example, V-shaped reversal often suggests that strong selling was quickly replaced by aggressive buying, signaling potential shift in market direction (Murphy, 1999). By translating complex visual signals into concise and interpretable summaries, PatternAgent plays key role in bridging raw chart data and high-level reasoning, allowing the system to integrate visual structure into its overall market understanding (Lo et al., 2000). Figure 3 Workflow of TrendAgent. LLM-bound sketching tools transform recent candlestick data into trend graph with annotated support and resistance lines (e.g., K-lines oscillating within downward-sloping channel before breaking support). The resulting graph is then processed by the LLM, which distills the pattern into three structured outputs, Prediction, Reasoning, and Signals, for downstream trading logic."
        },
        {
            "title": "3.1.3 TrendAgent Design",
            "content": "Canonical chart patterns, such as double bottoms or flags, are only meaningful when evaluated within the context of well-defined trend (Pring, 1991). By tracking both the direction and steepness of price movements over time, the TrendAgent provides structural representation of trend dynamics, clarifying whether detected pattern is consistent with the prevailing trend, signals potential reversal, or indicates phase of sideways consolidation (Lo et al., 2000). Algorithm 1: Slope-aware trend detection over candlestick sequence P0:T 1, where each Pt = (Ot, Ht, Lt, Ct) represents the open, high, low, and close prices (Murphy, 1999). The algorithm slides window of size and performs linear regression on the high/low series (Sezer and Ozbayoglu, 2018) to infer trend direction via slope averaging. Input: P0:T 1, N, τ 1 for = 1 to 1 do 2 3 4 Fit OLS on highs/lows to get mr, ms; κt (mr + ms)/2; if κt > τ then Trend Uptrend; else if κt < τ then Trend Downtrend; else Trend Sideways; 6 7 end for 8 Render chart Kt(Pt, κt, Trend); To improve interpretability, TrendAgent generates an annotated K-line chart Kt using tool-assisted charting. This chart includes trend channel Ct, which captures the price trajectory through two fitted lines: the upper resistance line Rt(x) = mrx + br, drawn through recent local highs, and the lower support line St(x) = msx + bs, drawn through recent local lows (Lo et al., 2000). This structure provides the LLM with visual reference to reason about trend direction, strength, and possible breakout zones in real time (Pring, 1991). To capture the directional structure of recent price movements, TrendAgent analyzes local subwindows of the input price sequence by extracting recent highs and lows and fitting two lines, the resistance line Rt and the support line St, using ordinary least squares (OLS) regression. From their respective slopes mr and ms, it computes an average slope κt = mr+ms , which provides smoothed estimate of directional drift within the price channel (Sezer and Ozbayoglu, 2018). While the sign of κt offers coarse view of trend direction, positive for upward movement, negative for downward, it does not fully determine the classification. Markets are noisy, and similar slope values can arise in very different structural contexts. 2 To address this, the agent incorporates additional geometric cues from the fitted channel lines. For example, in well-defined upward trend, both Rt and St slope upward in parallel, suggesting persistent buying interest and higher lows, condition often, but not always, reflected in κt > 0 (Pring, 1991). Conversely, downward channel forms when both lines slope downward, indicating sustained selling pressure (Murphy, 1999). More nuanced structures such as triangular compressions arise when Rt descends while St ascends, producing wedge where the slope magnitude diminishes over time (κt 0). These patterns signal potential accumulation, indecision, or transition zones, features that cannot be resolved by thresholding alone. Rather than relying on rule-based comparisons, TrendAgent uses these structural signals to infer not just the likely direction, but also the confidence and stability of that directional bias. This enables more robust reasoning under uncertainty, especially in ambiguous or transitional market phases, and provides richer inputs for downstream decision-making modules. By modeling these formations, TrendAgent introduces structural layer of reasoning that complements both PatternAgent and IndicatorAgent. While the latter capture shape-based signals and momentum dynamics, TrendAgent contextualizes them within broader trend structure. This improves decision stability under uncertainty and strengthens signal coherence when other views conflict (Lo et al., 2000). Figure 4 Workflow of RiskAgent. radar chart aggregates inputs from upstream agents, Trend, Indicator, and Pattern, across multiple risk dimensions, including momentum strength, trend certainty, pattern reliability, breakout likelihood, support/resistance robustness, and volatility exposure. These dimensions jointly capture the multidimensional nature of market uncertainty, balancing directional conviction against potential instability. DecisionAgent then integrates these signals to compute coherent riskreward ratio with supporting reasoning, which is translated into zone chart specifying take-profit and stop-loss levels to guide execution."
        },
        {
            "title": "3.1.4 RiskAgent Design",
            "content": "Similar to professional trading scenarios where risk managements are always necessary, we introduce RiskAgent, illustrated in Figure 4. Built on the foundational principle that risk control is critical to capital preservation, RiskAgent translates market analysis into actionable trade boundaries (Murphy, 1999). Unlike agents focused on signal generation, RiskAgent combines the outputs of the IndicatorAgent, PatternAgent, and TrendAgent, each offering distinct perspectives, into unified risk-reward framework (Lo et al., 2000; Wei et al., 2025). Specifically, RiskAgent uses fixed stop-loss value ρ = 0.0005 to reflect short-term price volatility, and computes take-profit level = ρ, where [1.2, 1.8] is predicted by the LLM based on context. This results in bounded region for each trade, defined by three levels: Stop Loss, Entry Price, and Take Profit. Within this structure, the final decision emerges from reasoning over signal quality and predefined risk exposure. As shown in the diagram, this reasoning step plays critical role in bridging technical interpretation with real-time trading decisions. By integrating structured reasoning, domain knowledge, and real-world constraints, RiskAgent ensures that high-level insights are translated into consistent, risk-aware actions in uncertain and fast-moving market conditions. 7 Figure 5 Workflow of DecisionAgent. The LLM first summarizes key upstream evidence, e.g., MACD bullish crossover with stabilizing histogram, rising rate-of-change curve, and double-bottom breakout above resistance. It then consolidates these inputs into structured outputs: directional decision, detailed justification, trade setup with entry and protection levels, and post-trade reflection guideline. Finally, the LLM formulates an executable order (e.g., long signal for gold futures with horizon and rationale), ready for immediate market submission."
        },
        {
            "title": "3.1.5 DecisionAgent Design",
            "content": "The final stage of the framework is the DecisionAgent, which functions as the reasoning and execution layer. As illustrated in Figure 5, it integrates the outputs of upstream agents to decide between LONG or SHORT position. Since holding is not permitted, the agent forecasts short-term market direction over the next three candlesticks and generates execution-ready decisions aligned with the overall system view (Kissell, 2013). Specifically, the DecisionAgent takes in an aggregated signal state from IndicatorAgent, PatternAgent, and TrendAgent, and outputs structured trading decision comprising the predicted direction (LONG or SHORT), concise justification, and riskreward ratio conditioned on market context (Kissell, 2013). The agent integrates heterogeneous evidence and evaluates the consistency across upstream signals, proceeding only when the majority align and are reinforced by confirmations such as indicator crossovers, completed breakout formations, or price interactions with major trend boundaries. This layered reasoning filters out noisy or conflicting inputs and yields confident, high-quality decisions. Consequently, the outputs are not only optimized for execution in high-frequency settings but also more robust and interpretable than those produced by traditional rule-based systems."
        },
        {
            "title": "4 Experiments",
            "content": "We evaluate our QuantAgent framework in fair and comprehensive manner, with trading decisions generated autonomously without prior demonstrations or supervised fine-tuning. Building on the structured reasoning provided by upstream agents, our system uses only recent candlestick data and basic context, such as the asset type and time interval, to predict short-term market direction. It then generates clear trade suggestions with human-readable explanations, allowing us to evaluate its performance in realistic settings. The experiment is designed to test the frameworks effectiveness in realistic, data-limited environments where fast, adaptive decision-making is required."
        },
        {
            "title": "4.1 Benchmark Construction and Evaluation Protocol",
            "content": "To support evaluation, we construct benchmark comprising multiple widely traded financial assets using 4-hour OHLC candlestick data. The selected assets span several key market categories, including cryptocurrencies (e.g., BTC/USD), equity indices (e.g., NQ Nasdaq-100 Futures, ES S&P 500 E-mini Futures), and commodities (e.g., GC Gold Futures, CL Crude Oil Futures) and others. For each asset, we collect 5,000 historical candlesticks using the public tvdatafeed API (rongardF). Details of benchmark are illustrated in Appendix 6. From this dataset, we randomly sample 100 evaluation segments per asset. Each segment contains 100 8 consecutive candlesticks, with the final three withheld to avoid revealing future market outcomes during test-time prompting. The system processes the remaining input to generate structured trade report containing directional prediction (LONG or SHORT), brief textual rationale, and an estimated riskreward ratio. Among these outputs, the directional decision and riskreward estimate are used for quantitative evaluation. As baseline for comparison, we include random policy that selects between LONG and SHORT, using the same evaluation segments and output format. Results for both QuantAgent and the baseline are evaluated using consistent metrics and presented in Table 1 in the results section."
        },
        {
            "title": "4.2.1 Directional Accuracy Evaluation",
            "content": "To assess prediction correctness, we compare the LLMs directional forecast against future market movement using the next 3 candlesticks after the sampled input window. Specifically, for LONG decision, each of the next three candlesticks that closes above the last close in the sampled segment is counted as correct hit (maximum of three per signal). For SHORT decision, each of the next three candlesticks that closes below the final sampled close is similarly counted as hit. The accuracy α is computed as α = where is the number of correctly predicted candlestick outcomes, and is the total number of evaluated candlesticks. Each test case yields score from 0 to 3, where 3/3 indicates perfect short-term directional accuracy. The overall average accuracy is calculated from an average of all test cases from the same sample group. This approach is analogous to the concept of Mean Directional Accuracy used widely in forecasting applications (Pesaran and Timmermann, 2004)."
        },
        {
            "title": "4.2.2 Rate of Return (RoR) Evaluation",
            "content": "We also evaluate trade outcomes based on multiple Rate of Return (RoR) estimators (Fama and MacBeth, 1973), each designed to quantify the profitability of trade by measuring the relative gain or loss between the entry price and various possible exit scenarios, depending on the LLM-issued decision and associated market behavior. : Rcc = (cid:40) Closet+3 1 Closet 1 Closet+3 Closet if LONG if SHORT Rsim = (cid:40) Pexit 1 Closet 1 Pexit Closet if LONG if SHORT The Close-to-Close RoR Rcc quantifies realized gain or loss by comparing the closing price of the final candlestick in the prediction window to the initial input close, offering direct measure of short-term price movement (Fama and MacBeth, 1973). By contrast, the Risk-Constrained Reward-Based RoR Rsim incorporates risk management by simulating stop-loss and take-profit behavior, where Pexit is the first price among the next three candles that hits the stop-loss or reward target. It assumes fixed stop-loss threshold ρ = 0.0005 and uses the LLM-generated riskreward ratio = ρ , where denotes the profit target, to determine the corresponding take-profit level. The value ρ = 0.0005 (i.e., 0.05%) is selected to reflect the relatively small price fluctuations typically observed within three-candlestick prediction window and serves primarily as simulation constant rather than calibrated risk parameterbehavior modeled after stop-loss/take-profit simulation approaches in algorithmic backtesting (Kissell, 2013). When both the stop-loss and take-profit levels are reached within the same candlestick, the default behavior is to trigger the stop-loss. During the experiment, the two handling policies (prioritizing stop-loss or take-profit) produced the same outcome in most cases, so they are merged under this default. This metric reflects more realistic trading conditions by accounting for both risk exposure and reward potential in constrained setting."
        },
        {
            "title": "We define the upper and lower bounds of return realizable within the prediction window as",
            "content": "Rmax = (cid:40) max(Hight+1:t+3) Closet 1 1 min(Lowt+1:t+3) Closet if LONG if SHORT Rmin = 9 (cid:40) min(Lowt+1:t+3) Closet 1 1 max(Hight+1:t+3) Closet if LONG if SHORT Here, Rmax represents the best-case rate of return (RoR) achievable over the next three candlesticks under the current LLM-issued trading decision (either LONG or SHORT). It assumes the optimal exit occurs at the most favorable intra-candle price point, i.e., the maximum high for long position or the minimum low for short position. Conversely, Rmin denotes the worst-case RoR under the same decision, capturing the most adverse price movement during the same interval. These two metrics form bounded range of potential outcomes for post-decision profit or loss under extreme but plausible market behavior (Lo, 2001). All evaluations are conducted without hyperparameter tuning or prompt engineering beyond initial agent design. The results reflect the systems inherent ability to generalize across volatile assets and provide interpretable, risk-managed trading insights in zero-shot regime."
        },
        {
            "title": "Method",
            "content": "Accuracy α % α (% ) Rcc Rmax Rmin Rsim"
        },
        {
            "title": "BTC",
            "content": "CL"
        },
        {
            "title": "DJI",
            "content": "ES GC NQ"
        },
        {
            "title": "Baseline\nOur",
            "content": "44.3 50.7 49.0 57.7 49.0 51.0 41.3 55.0 47.7 51.3 41.3 53. 39.7 59.7 39.0 62.0 +14.5% +17.8% +4.1% +33.2% +8.4% +29.1% +50.4% +59.0% -0.259 0.081 -0.312 -0. -0.096 0.159 0.006 0.179 0.018 0.727 -0.033 0.078 -0.265 0.189 -0.108 0. 1.115 1.232 0.999 1.181 0.770 0.804 0.560 0.613 0.502 0.517 0.717 0. 0.966 1.052 0.789 0.917 -1.366 -1.249 -1.384 -1.202 -0.792 -0.758 -0.539 -0. -0.449 -0.434 -0.736 -0.705 -1.038 -0.952 -0.846 -0.717 -0.277 0.004 -0.255 -0. -0.131 0.121 0.006 0.179 0.018 0.027 -0.033 0.078 -0.252 0.193 -0.090 0. Table 1 Performance comparison across trading symbols. Results are shown for random baseline and our method (highlighted in Green). Bold values indicate improvements, and upward arrows denote metrics where higher values are better. Table 1 compares our agent-based LLM trader to random baseline across eight widely traded markets. These include commodities such as crude oil (CL) and gold (GC); equity indices and ETFs like the Dow Jones Industrial Average (DJI), S&P 500 E-mini Futures (ES), Nasdaq-100 Futures (NQ), S&P 500 Index (SPX), and Nasdaq-100 ETF (QQQ); and major cryptocurrency, Bitcoin (BTC). We report multiple metrics: how often the direction was predicted correctly (hit rate α), the improvement over random guessing (α), actual close-to-close returns (Rcc), maximum and minimum returns observed within each candlestick (Rmax, Rmin), and simulated profits under fixed risk settings (Rsim). Our system performs better than random on every asset. The largest improvements in accuracy are seen on SPX (+23 percentage points), QQQ (+20 pp), and ES (+14 pp). Even on highly efficient markets like DJI, the system still shows measurable gain (from 49.0% to 51.0%). Better predictions lead to stronger returns. Close-to-close profits turn positive on six out of eight markets. For example, SPX improves from small loss to solid gain (0.108 to 0.207), and DJI turns around from 0.096 to 0.159. This shows that the systems predictions are not only accurate but also lead to profitable outcomes. When applying the same stop-loss and take-profit settings to both systems, our method reduces risk and improves outcomes. It turns big losses into gains on QQQ (0.252 to 0.193) and SPX (0.090 to 0.197), and cuts losses in half on volatile assets like crude oil (CL). Finally, our model captures more upside while limiting downside. On BTC, for example, the best-case return improves (1.115 to 1.232) and the worst-case loss becomes smaller. This shows that the system can adapt well to different types of marketseven without being tuned for each one. Figure 6 Sample-based verification accuracy on SPX (2025). Within the highlighted window, the LLM generated ten directional signals. Correct forecasts are marked with green Buy or red Sell badges, while mispredictions are shown in grey. Eight of the ten signals aligned with subsequent price movements, yielding an 80% hit rate for this segment."
        },
        {
            "title": "4.3.1 Sample-Based Verification Accuracy",
            "content": "To assess short-horizon prediction consistency, we evaluate the LLMs directional accuracy over fixed sample group of 100 bars from randomly sample groups. For each index = 0, 1, . . . , 9, we extract partial segment ending at position 45 + 5i, Using the preceding context window as model input, the predicted decision is then verified against the subsequent trend in price movement. This sampling procedure produces 10 partially overlapping test windows, each spaced every 5 bars (Qin et al., 2017). The final LLM decision is reflected on Figure 6 which reflects the proportion of correct directional forecasts across the 10 segments, yielding an overall accuracy of 80%. Successful sells (indices 0 and 3). In both cases the price had rallied into familiar ceiling and then stalled. Momentum gauges flipped negative, so the system advised selling; the very next bar fell, validating the decision. Successful buys (indices 1, 4, 5, 6, 8, 9). Here the momentum readings had just turned positive and price was either bouncing off floor or reclaiming lost ground. The pattern detector also spotted supportive structures, quick recoveries, rounded bases, or inverse head-and-shoulders outlines, while the trend analyzer confirmed that the broader move still pointed higher. With all three strands agreeing and no sign of the market being overheated, the buy signals were rewarded by immediate gains. Missed calls (grey buys at indices 2 and 7). At index 2 the model trusted an unfinished double-bottom and ignored that price remained capped by strong resistance and already looked stretched; buyers ran out of steam almost at once and the market slipped. At index 7 momentum was barely positive but candles had shrunk under yet another well-defended ceiling, classic hint of exhaustion. The system overlooked that warning, issued buy, and was caught by quick pull-back. Both errors share theme: the model gave too much credit to emerging chart patterns and early momentum, and not enough to signs that move was running out of energy near resistance. Refining those weightings could be the next logical improvement."
        },
        {
            "title": "4.3.2 Case Studies",
            "content": "Figure 7 Case sample of the PatternAgent on CL (2024). The agent extracts swing pivots, fits declining resistance line through lower highs, and identifies flat support near 78. As the gap narrows, it classifies the formation as descending triangle and generates three structured summaries: Structure (lower highs vs. flat support), Trend (bearish breakdown bias), and Symmetry (triangular convergence). Dashed edges and EMA overlays are visual aids only; the classification is derived solely from bar geometry. When presented with the unannotated K-line window in Fig. 7, the Pattern Agent first extracts swing pivots from recent bars and ranks successive local highs. The resulting pivot sequence forms monotonic decline; least-squares fit through those highs yields negatively sloped resistance trajectory. In parallel, repeated lows cluster within narrow tolerance band near the 78 price mark, producing an effectively horizontal support shelf. The vertical distance between the declining highs and flat support narrows over time, flagging range compression characteristic of Descending Triangle. From these primitives the agent composes its three summaries: the Structure Summary reports lower highs over relatively flat support; the Trend Summary maps the recognized class to its empirical bearish bias, heightened breakdown probability once support is retested multiple times; and the Symmetry Summary abstracts the converging lines into triangular shape descriptor used downstream for trigger/invalid level setting. The post-figure callouts (Lower Highs, dashed triangle edges, EMA overlays) are illustrative aids added for the reader; the pattern classification itself arises strictly from the bar-geometry analysis described above. When the Trend Agent ingests the recent close-anchored K-line window in Fig. 8, it fits two-sided price channel to the rolling closes: positively sloped upper boundary (resistance) and relatively flat lower boundary (support). Repeated touches and near-touch rejections along the upper fit, combined with long gap since the last interaction with support, signal that price action is tracking the upper rail of an advancing channel rather than oscillating symmetrically about its midline. The agent also tallies successive swing highs and lows; the resulting sequence is net higher, reinforcing an upward trend classification. These geometric diagnostics are distilled into the three text panels shown beneath the chart: (1) the Resistance Line summary notes recent probe above the red boundary and its upward slope; (2) the Support Line summary records that price is far from relatively flat blue base, implying untested downside room; and (3) the Price Behavior summary highlights the cluster of higher highs/higher lows and pullback after resistance contact. The green Bullish Signal callout in the figure reflects this composite assessment: trend up, price extended near resistance, watch 12 Figure 8 Case sample of the TrendAgent on DJI (2022). The agent fits an upward-sloping resistance line and flat support to recent closes, confirming successive higher highs and higher lows. It then generates three structured summaries: Resistance Line (upward slope), Support Line (untested flat base), and Price Behavior (higher highs/lows with pullback). The green Bullish Signal badge denotes the agents final bullish assessment. for either breakout continuation or tactical pullback entry toward support. Indicator-Agent Case Sample Context: Latest OHLC snapshot (past time frame). Relative Strength Index (RSI). The RSI values are mostly above 50, indicating generally bullish trend. However, the RSI has been fluctuating, with recent values around 68.49, suggesting the market is approaching overbought conditions. Moving Average Convergence Divergence (MACD). The MACD line is above the signal line, particularly in the recent data, indicating bullish momentum. The MACD histogram is positive, which supports the bullish sentiment. Rate of Change (ROC). The ROC values are positive, indicating upward momentum. The recent ROC value of 0.94 suggests continued bullish momentum. Stochastic Oscillator. The %K and %D lines are both above 80, indicating overbought conditions. This suggests that while the market is bullish, it may be due for correction or consolidation. Williams %R. The Williams %R values are mostly above -20, indicating overbought conditions. This aligns with the Stochastic Oscillator, suggesting caution as the market may be overextended. Conclusion. The overall sentiment is bullish, with several indicators suggesting strong upward momentum. However, the overbought conditions indicated by the Stochastic Oscillator and Williams %R suggest that traders 13 should be cautious of potential pullbacks or consolidations. It may be prudent to monitor for any signs of reversal or weakening momentum before making significant trading decisions. Figure 9 Case sample of the IndicatorAgent on DJI (20192020). From top to bottom, the panels show: (i) the four-hour RSI with neutral (50) and overbought thresholds, (ii) the MACD line and its signal line with histogram, (iii) the Stochastic %K/%D oscillator, (iv) the RoC rate-of-change, and (v) Williams %R. This multi-panel visualization presents the raw indicator series that define the momentum and oscillator primitives underlying the agents bullish but extended assessment. Given the latest OHLCV window, the Indicator Agent applies its momentum/oscillator transform suite (RSI, MACD, ROC, Stochastic, Williams %R) and aggregates the resulting state vector into concise risk read. RSI has held above the neutral 50 line for most of the lookback and is presently in the high60s ( 68), signaling sustained upside participation but proximity to the classic overbought band. MACD remains above its signal line with positive histogram bulge, confirming that upside momentum is still in force. ROC readings are modestly positive ( 1%), reinforcing persistent upward rate of change rather than an exhausted spike. At the same time, fast oscillators cluster in warning territory: both Stochastic %K/%D and Williams %R sit in overbought zones (80 and -20, respectively), indicating that the advance is stretched and vulnerable to pause or mean reversion (Murphy, 1999). The agent therefore issues composite summary of bullish but extended: upside bias intact, yet tactical entries should respect exhaustion risk, tighten stops, scale position size, or await reset toward support before adding exposure."
        },
        {
            "title": "5 Conclusion",
            "content": "This work presents QuantAgent, novel multi-agent trading framework designed for high-frequency environments by integrating classical quantitative analysis with language model-based reasoning. Inspired by the division of labor in institutional trading desks, QuantAgent decomposes the trading decision pipeline into specialized agents, Indicator, Pattern, Trend, and Risk, that analyze market behavior through structured prompts, technical tools, and contextual reasoning. These agents operate semi-autonomously within LangGraph-based architecture, collaborating to generate latency-aware, interpretable trade recommendations without reliance on social media, news, or external sentiment feeds. The system is grounded in the belief that price action alone encapsulates all available market information, enabling efficient and noise-resistant decision-making. Empirical evaluations across ten diverse financial instruments using 4-hour OHLC data demonstrate that QuantAgent consistently outperforms random baselines in directional accuracy and multiple rate-of-return (RoR) metrics. Even in volatile market conditions, the system remains robust by simulating realistic trading constraints such as stop-loss and reward thresholds. Importantly, QuantAgent operates entirely in zero-shot setting, requiring no supervised fine-tuning. These results highlight the viability of combining structured technical signals with modular LLM-based workflows to bridge the gap between traditional quantitative trading methods and modern language-driven reasoning under high-frequency constraints."
        },
        {
            "title": "6 Limitations and Future Work",
            "content": "QuantAgents key constraints center on speed and micro-horizon accuracy. First, its predictive precision drops on ultra-short candles ( 115 min). The price series at this scale are dominated by noise and rapid regime shifts, making it difficult for the current zero-shot LLM ensemble to separate transient spikes from tradable signals; empirical tests show sizable degradation in hit-rate relative to 30min4h bars. Second, the architecture is not truly real-time. Each inference cycle involves an LLM call plus several bound indicator/pattern tools, introducing latencies that can exceed the window in which 1-minute opportunity remains exploitable. Streamlining tool orchestration, caching intermediate features, or moving critical logic to lighter-weight models on the edge are promising directions to close this gap (Hasbrouck and Saar, 2013)."
        },
        {
            "title": "References",
            "content": "Gerald Appel. Technical Analysis: Power Tools for Active Investors. FT Press, reprint edition, 2005. ISBN 9780132930048. Rishi Bommasani, Drew A. Hudson, Ehsan Adeli, Russ B. Altman, Simran Arora, Sydney von Arx, Michael S. Bernstein, Jeannette Bohg, Antoine Bosselut, Emma Brunskill, Erik Brynjolfsson, Shyamal Buch, Dallas Card, Rodrigo Castellon, Niladri S. Chatterji, Annie S. Chen, Kathleen Creel, Jared Quincy Davis, Dorottya Demszky, Chris Donahue, Moussa Doumbouya, Esin Durmus, Stefano Ermon, John Etchemendy, Kawin Ethayarajh, Li Fei-Fei, Chelsea Finn, Trevor Gale, Lauren E. Gillespie, Karan Goel, Noah D. Goodman, Shelby Grossman, Neel Guha, Tatsunori Hashimoto, Peter Henderson, John Hewitt, Daniel E. Ho, Jenny Hong, Kyle Hsu, Jing Huang, Thomas Icard, Saahil Jain, Dan Jurafsky, Pratyusha Kalluri, Siddharth Karamcheti, Geoff Keeling, Fereshte Khani, Omar Khattab, Pang Wei Koh, Mark S. Krass, Ranjay Krishna, Rohith Kuditipudi, and et al. On the opportunities and risks of foundation models. CoRR, abs/2108.07258, 2021. URL https://arxiv.org/abs/2108.07258. Sugato Chakravarty, Asani Sarkar, and Lifan Wu. Information asymmetry, market segmentation and the pricing of cross-listed shares: theory and evidence from chinese and shares. Journal of International Financial Markets, Institutions and Money, 8(3):325356, 1998. ISSN 1042-4431. doi: https://doi.org/10.1016/S1042-4431(98)00041-9. URL https://www.sciencedirect.com/science/article/pii/S1042443198000419. Tai-liang Chen and Feng-yu Chen. An intelligent pattern recognition model for supporting investment decisions in stock market. Information Sciences, 346347:261274, 2016. doi: 10.1016/j.ins.2016.01.060. Tarun Chordia, Amit Goyal, Bruce N. Lehmann, and Gideon Saar. High-frequency trading. Journal of Financial ISSN 1386-4181. doi: https://doi.org/10.1016/j.finmar.2013.06.004. URL https: Markets, 16(4):637645, 2013. //www.sciencedirect.com/science/article/pii/S1386418113000268. High-Frequency Trading. Matthew F. Dixon, Igor Halperin, and Paul Bilokon. Machine Learning in Finance: From Theory to Practice. Springer, 1st edition, 2020. ISBN 978-3030410674. Thanh Nam Duong, Trung Kien Hoang, Quoc Khanh Duong, Quoc Dat Dinh, Duc Hoan Le, Huy Tuan Nguyen, Xuan Bach Nguyen, and Quy Ban Tran. Investigating market strength prediction with cnns on candlestick chart images, 2025. URL https://arxiv.org/abs/2501.12239. Eugene F. Fama. Efficient capital markets: review of theory and empirical work. The Journal of Finance, 25(2): 383417, 1970. doi: 10.2307/2325486. URL https://doi.org/10.2307/2325486. Eugene F. Fama and James D. MacBeth. Risk, return, and equilibrium: Empirical tests. Journal of Political Economy, 81(3):607636, 1973. ISSN 00223808, 1537534X. URL http://www.jstor.org/stable/1831028. Joel Hasbrouck and Gideon Saar. Low-latency trading. Journal of Financial Markets, 16(4):646679, 2013. doi: 10.1016/j.finmar.2013.05.003. Investopedia. Stochastic oscillator: What it is, how it works, how to . . . . https://www.investopedia.com/terms/s/ stochasticoscillator.asp, n.d. Accessed: 2025-08-14. Narasimhan Jegadeesh and Sheridan Titman. Returns to buying winners and selling losers: Implications for stock market efficiency. The Journal of Finance, 48(1):6591, 1993. doi: 10.2307/2328882. URL https://doi.org/10.2307/2328882. Robert Kissell. The Science of Algorithmic Trading and Portfolio Management. Academic Press, San Diego, 1st edition, 2013. ISBN 978-0124016897. Inc. LangChain. Langgraph: low-level orchestration framework for building, managing, and deploying long-running, stateful agents. https://langchain-ai.github.io/langgraph/, 2025. Accessed: 2025-07-01. Xiao-Yang Liu, Ziyi Xia, Jingyang Rui, Jiechao Gao, Hongyang Yang, Ming Zhu, Christina Dan Wang, Zhaoran Wang, and Jian Guo. Finrl-meta: Market environments and benchmarks for data-driven financial reinforcement learning, 2022. URL https://arxiv.org/abs/2211.03107. Andrew W. Lo. Risk management for hedge funds: Introduction and overview. Financial Analysts Journal, 57(6):1633, 2001. ISSN 0015198X. URL http://www.jstor.org/stable/4480353. Andrew W. Lo, Harry Mamaysky, and Jiang Wang. Foundations of technical analysis: Computational algorithms, statistical inference, and empirical implementation. NBER Working Paper 7613, National Bureau of Economic Research, March 2000. URL https://ssrn.com/abstract=228099. Available at SSRN. Tobias Moskowitz, Yao Hua Ooi, and Lasse Heje Pedersen. Time series momentum. Journal of financial economics, 104(2):228250, 2012. John Murphy. Technical analysis of the financial markets: comprehensive guide to trading methods and applications. Penguin, 1999. Thien Hai Nguyen, Kiyoaki Shirai, and Julien Velcin. Sentiment analysis on social media for stock movement prediction. Expert Systems with Applications, 42(24):96039611, 2015. ISSN 0957-4174. doi: https://doi.org/10.1016/j.eswa.2015. 07.052. URL https://www.sciencedirect.com/science/article/pii/S0957417415005126. Steve Nison. Japanese Candlestick Charting Techniques. Prentice Hall Press, New York, 2nd edition, October 2001. OpenAI, Josh Achiam, Steven Adler, Sandhini Agarwal, and et al. Gpt-4 technical report, 2024. URL https://arxiv. org/abs/2303.08774. M.Hashem Pesaran and Allan Timmermann. How costly is it to ignore breaks when forecasting the direction of time series? International Journal of Forecasting, 20(3):411425, 2004. ISSN 0169-2070. doi: https://doi.org/10.1016/ S0169-2070(03)00068-2. URL https://www.sciencedirect.com/science/article/pii/S0169207003000682. Robert R. Prechter. Elliott Wave Principle: Key to Market Behavior. New Classics Library, Gainesville, GA, February 2005. Martin Pring. Technical analysis explained: The successful investors guide to spotting investment trends and turning points. (No Title), 1991. Yao Qin, Dongjin Song, Haifeng Chen, Wei Cheng, Guofei Jiang, and Garrison Cottrell. dual-stage attention-based recurrent neural network for time series prediction, 2017. URL https://arxiv.org/abs/1704.02971. rongardF. tvdatafeed: simple tradingview historical data downloader (github repository). https://github.com/ rongardF/tvdatafeed. Accessed: 2025-08-16. Timo Schick, Jane Dwivedi-Yu, Roberto Dess`ı, Roberta Raileanu, Maria Lomeli, Luke Zettlemoyer, Nicola Cancedda, and Thomas Scialom. Toolformer: Language models can teach themselves to use tools, 2023. URL https://arxiv.org/ abs/2302.04761. Omer Berat Sezer and Ahmet Murat Ozbayoglu. Algorithmic financial trading with deep convolutional neural networks: Time series to image conversion approach. Applied Soft Computing, 70:525538, 2018. ISSN 1568-4946. doi: https: //doi.org/10.1016/j.asoc.2018.04.024. URL https://www.sciencedirect.com/science/article/pii/S1568494618302151. Matheus Gomes Sousa, Kenzo Sakiyama, Lucas de Souza Rodrigues, Pedro Henrique Moraes, Eraldo Rezende Fernandes, and Edson Takashi Matsubara. Bert for stock market sentiment analysis. In 2019 IEEE 31st International Conference on Tools with Artificial Intelligence (ICTAI), pages 15971601, 2019. doi: 10.1109/ICTAI.2019.00231. Robert Tumarkin and Robert F. Whitelaw. News or noise? internet postings and stock prices. Financial Analysts Journal, 57(3):4151, 2001. URL http://www.jstor.org/stable/4480315. Ziao Wang, Yuhang Li, Junda Wu, Jaehyeon Soon, and Xiaofeng Zhang. Finvis-gpt: multimodal large language model for financial chart analysis, 2023. URL https://arxiv.org/abs/2308.01430. Jiaqi Wei, Hao Zhou, Xiang Zhang, Di Zhang, Zijie Qiu, Wei Wei, Jinzhe Li, Wanli Ouyang, and Siqi Sun. Alignrag: An adaptable framework for resolving misalignments in retrieval-aware reasoning of rag. arXiv e-prints, pages arXiv2504, 2025. Welles Wilder. New Concepts in Technical Trading Systems. Trend Research, 1978. Larry Williams. The Long-Term Secrets to Short-Term Trading. Wiley, 2nd edition, 2011. ISBN 9780470915738. Yijia Xiao, Edward Sun, Di Luo, and Wei Wang. Tradingagents: Multi-agents llm financial trading framework, 2025. URL https://arxiv.org/abs/2412.20138. 16 Hongyang Yang, Xiao-Yang Liu, and Christina Dan Wang. Fingpt: Open-source financial large language models, 2023. URL https://arxiv.org/abs/2306.06031. Yi Yang, Mark Christopher Siy UY, and Allen Huang. Finbert: pretrained language model for financial communications, 2020. URL https://arxiv.org/abs/2006.08097. Yuwei Yin, Jean Kaddour, Xiang Zhang, Yixin Nie, Zhenguang Liu, Lingpeng Kong, and Qi Liu. Ttida: Controllable generative data augmentation via text-to-text and text-to-image models. arXiv preprint arXiv:2304.08821, 2023. Yangyang Yu, Haohang Li, Zhi Chen, Yuechen Jiang, Yang Li, Denghui Zhang, Rong Liu, Jordan W. Suchow, and Khaldoun Khashanah. Finmem: performance-enhanced llm trading agent with layered memory and character design. arXiv preprint arXiv:2311.13743, 2023. Yangyang Yu, Zhiyuan Yao, Haohang Li, Zhiyang Deng, Yuechen Jiang, Yupeng Cao, Zhi Chen, Jordan W. Suchow, Zhenyu Cui, Rong Liu, Zhaozhuo Xu, Denghui Zhang, Koduvayur Subbalakshmi, Guojun Xiong, Yueru He, Jimin Huang, Dong Li, and Qianqian Xie. Fincon: synthesized llm multi-agent system with conceptual verbal reinforcement for enhanced financial decision making. In Proceedings of the 38th Conference on Neural Information Processing Systems (NeurIPS), 2024. To appear. Umair Zakir, Evan Daykin, Amssatou Diagne, and Jacob Faile. Advanced deep learning techniques for analyzing earnings call transcripts: Methodologies and applications, 2025. URL https://arxiv.org/abs/2503.01886. Xiang Zhang, Senyu Li, Bradley Hauer, Ning Shi, and Grzegorz Kondrak. Dont trust chatgpt when your question is not in english: study of multilingual abilities and types of llms. arXiv preprint arXiv:2305.16339, 2023a. Xiang Zhang, Ning Shi, Bradley Hauer, and Grzegorz Kondrak. Bridging the gap between babelnet and hownet: Unsupervised sense alignment and sememe prediction. In Proceedings of the 17th Conference of the European Chapter of the Association for Computational Linguistics, pages 27892798, 2023b. Xiang Zhang, Senyu Li, Ning Shi, Bradley Hauer, Zijun Wu, Grzegorz Kondrak, Muhammad Abdul-Mageed, and Laks VS Lakshmanan. Cross-modal consistency in multimodal large language models. arXiv preprint arXiv:2411.09273, 2024. Xiang Zhang, Juntai Cao, Jiaqi Wei, Yiwei Xu, and Chenyu You. Tokenization constraints in llms: study of symbolic and arithmetic reasoning limits. arXiv preprint arXiv:2505.14178, 2025a. Xiang Zhang, Juntai Cao, Jiaqi Wei, Chenyu You, and Dujian Ding. Why prompt design matters and works: complexity analysis of prompt search space in llms. arXiv preprint arXiv:2503.10084, 2025b."
        },
        {
            "title": "Appendix",
            "content": "Appendix A: Why Technical Analysis Alone Can Suffice for Trading QuantAgent is multi-modal, multi-agent high-frequency trading LLM framework that provides market prediction based solely on price data, disregarding other information such as news, social media, etc. This strategy is referred to as technical analysis (Murphy, 1999). Technical analysis is based on the premise that price alone is enough for capturing market movement and predicting future trends, and has been extensively studied by previous research (Murphy, 1999). In this section, we present in detail why technical analysis alone can suffice for trading. The first principle of technical analysis is that all relevant information, whether economic, political, psychological, or otherwise, is already reflected in market prices (Fama, 1970). In other words, prices adjust quickly to new developments because people act on the information they receive by buying or selling (Murphy, 1999). These actions are recorded in price changes (Lo et al., 2000). Therefore, by observing how prices move, it is possible to indirectly understand how the market as whole is reacting to both public and private information, without needing to process that information explicitly (Murphy, 1999). Our system therefore also follows this principle and has each of its agents perform analysis solely based on price data. Technical analysis assumes that price movements are not entirely random (Lo et al., 2000). Instead, they tend to follow patterns over time. When prices begin to rise, they often continue to rise for some period, and similarly, downward trends can persist before reversing. These trends often reflect collective human behavior, such as fear during declines or optimism during rallies. By identifying such trends early, technical traders aim to make decisions that align with the general direction of the market (Murphy, 1999). QuantAgent operates such that it captures market patterns and leverages this price movement assumption. Notably, many existing technical analysis methods are based on the observation that certain price patterns tend to appear repeatedly. This repetition is attributed to stable behavioral tendencies in market participants. For example, traders often react similarly to price increases or decreases, leading to recurring patterns such as peaks, dips, and reversals. Recognizing and responding to these familiar structures allows technical systems to make predictions without needing to understand the specific causes of each movement (Murphy, 1999). Such observable repetition is natural fit for an agentic framework, as LLM agents have shown strong capability in reasoning over patterns and trends, achieving human-like capabilities (Bommasani et al., 2021). Occasionally, price changes occur well before any official information is made available to the public (Chakravarty et al., 1998). For example, stocks price might begin rising days or even weeks before company announces strong earnings (Murphy, 1999). This can happen because certain investorssuch as employees, suppliers, or professional analystsmay already have insights into the companys performance, such as increased sales activity or unusually high production volumes. Similarly, prices may fall before news of scandal becomes public. If there are rumors of legal investigations or unusual management behavior, informed traders might start selling early, causing the price to decline in advance. In both cases, the price moves ahead of the news because the market collectively reacts to early signals, expectations, or private information (Chakravarty et al., 1998). Technical analysis captures these movements directly through price behavior, without requiring access to the underlying cause (Murphy, 1999). This allows trading systems to respond to changes as soon as they appear in the market, rather than waiting for delayed or incomplete public disclosures (Lo et al., 2000). In summary, our agent works under the principles of technical analysis, which offers practical and self-contained approach to understanding market behavior. By assuming that all available information is already incorporated into price data, and that human reactions to price movements tend to follow consistent patterns, it becomes possible for our agent to forecast future price directions without relying on external inputs (Murphy, 1999). 18 Appendix B: Agent Design B.1 Indicator Agent To operationalize the role of IndicatorAgent, we design task-specific prompt that guides the agent to extract and interpret technical indicators under strict latency constraints."
        },
        {
            "title": "Prompt",
            "content": "You are high-frequency trading (HFT) analyst assistant working under strict latency constraints. You must analyze technical indicators to support fast-paced trading execution. You have access to tools: compute rsi compute macd compute roc compute stoch compute willr Use them by providing appropriate arguments like kline data and the respective periods. The OHLC data provided is from {{time frame}} interval, reflecting recent market behavior. You must interpret this data quickly and accurately. Here is the OHLC data: {{kline data}}. Call necessary tools, and analyze the results. Prompt for IndicatorAgent in our multi-agent LLM framework. The agent receives recent OHLC data as input and interprets it through tool-assisted analysis. Variables such as kline data and time frame are dynamically instantiated, enabling the agent to extract meaningful price movements and adapt its outputs across diverse market conditions. 19 B.2 Pattern Agent To instantiate the PatternAgent, we construct prompt that directs the agent to identify geometric formations (e.g., peaks, troughs, consolidations) from OHLC sequences, leveraging the LLMs multi-modal reasoning capacity for candlestick and chart-pattern analysis."
        },
        {
            "title": "Prompt",
            "content": "You are trading-pattern recognition assistant tasked with identifying classical high-frequency trading patterns. You have access to tool: generate kline image. Use it by providing appropriate arguments like kline data. Once the chart is generated, compare it to classical pattern descriptions and determine if any known pattern is present. ... Prompt for PatternAgent in our multi-agent LLM framework. The agent receives OHLC data as input, transforms it into visual representation, and analyzes the sequence from pattern-recognition perspective."
        },
        {
            "title": "Prompt",
            "content": "This is timeframe candlestick chart generated from recent OHLC market data. Please refer to the following classic candlestick patterns: 1. Inverse Head and Shoulders: Three lows with the middle one being the lowest; symmetrical structure, typically precedes an upward trend. 2. Double Bottom: Two similar lows with rebound in between, forming W. 3. Rounded Bottom: Gradual decline followed by gradual rise (U-shape). 4. Hidden Base: Horizontal consolidation followed by sudden up-break. 5. Falling Wedge: Range narrows downward, often resolves upward. 6. Rising Wedge: Range narrows upward, often resolves downward. 7. Ascending Triangle: Rising support, flat resistance; breakout usually up. 8. Descending Triangle: Falling resistance, flat support; breakout usually down. 9. Bullish Flag: Sharp rise then brief downward channel before continuation. 10. Bearish Flag: Sharp drop then brief upward channel before continuation. 11. Rectangle: Sideways range between horizontal support/resistance. 12. Island Reversal: Two gaps in opposite directions forming an island. 13. V-shaped Reversal: Sharp decline followed by sharp recovery (or vice versa). 14. Rounded Top / Bottom: Gradual peaking or bottoming, arc-shaped. 15. Expanding Triangle: Highs and lows spread wider, volatile swings. 16. Symmetrical Triangle: Highs and lows converge; breakout after apex. Determine whether the chart matches any of these patterns. Name the detected pattern(s) and justify your choice based on structure, trend, and symmetry. Graph-analysis prompt for PatternAgent in our multi-agent LLM framework. The agent is provided with tool-generated chart and textual library of canonical structural patterns (e.g., shapes, shapes, triangles). It automatically evaluates whether the chart matches any of these patterns and explains its reasoning along three dimensions: structure, direction, and symmetry. 20 B.3 Trend Agent For the TrendAgent, we provide prompt that emphasizes detection of directional momentum across multiple horizons, enabling the agent to reason about mediumto long-term trends while remaining responsive to short-horizon signals."
        },
        {
            "title": "Prompt",
            "content": "You are K-line trend-pattern recognition assistant operating in high-frequency trading context. You must first call the tool generate trend image using the provided kline data. Once the chart is generated, analyze the image for support/resistance trendlines and known candlestick patterns. Only then should you proceed to make prediction about the short-term trend (upward, downward, or sideways). Do not make any predictions before generating and analyzing the image. Prompt for TrendAgent in our multi-agent LLM framework. The agent converts time-series OHLC data into tool-generated chart and performs trend analysis on the visualization to identify directional momentum and potential breakouts."
        },
        {
            "title": "Prompt",
            "content": "You are K-line trend-pattern recognition assistant in high-frequency trading context. The following timeframe candlestick chart includes two automated trendlines: blue line is support, red line is resistance, both derived from recent closing prices. Analyze how price..., are candles bouncing off, breaking through, or compressing between them? Based on trendline slope..., predict the likely short-term trend: upward, downward, or sideways. Support your prediction with respect to prediction, reasoning, signals. Graph-based prompt for TrendAgent in our multi-agent LLM framework. The agent is provided with tool-generated chart containing two reference lines: blue support line and red resistance line. It analyzes how price action interacts with these lines and produces short-term trend prediction (upward, downward, or sideways), accompanied by structured outputs covering prediction, reasoning, and signals. 21 B.4 Decision Agent To implement the DecisionAgent, we design prompt that compels the DecisionAgent to integrate signals from all specialized agents into coherent trading actions, balancing profitability, risk, and interpretability in high-frequency market settings."
        },
        {
            "title": "Prompt",
            "content": "You are high-frequency quantitative trading (HFT) analyst reviewing the current {{time frame}} K-line chart for {{stock name}}. Issue an immediate execution order: LONG or SHORT. (HOLD is prohibited.) Forecast horizon. Predict price direction for the next 3 candlesticks (e.g. 15-min chart next 15 minutes; 4-hour chart next 4 hours). Here is LaTeX-style refactored version of your original decision guideline, following the concise structure and tone you provided: Base your decision on three reports: 1. Technical Indicator Report Evaluate momentum (MACD, ROC) and oscillators (RSI, Stochastic, Williams %R). Prioritize strong signals (e.g., MACD cross, RSI divergence, extreme levels). Down-weight mixed or neutral indicators unless aligned across types. 2. Pattern Report Act only on clearly formed bullish/bearish patterns with breakout or breakdown confirmation (e.g., strong wick, volume spike, engulfing). Ignore early-stage or consolidating setups without support from other reports. 3. Trend Report Analyze price interaction with trendlines: Up-sloping support = buying interest; downsloping resistance = selling pressure. For compression zones, act only with clear candle or indicator confluence. Do not assume breakout direction from geometry alone. Decision Strategy: Act only on confirmed, aligned signals across all three reports. Favour strong momentum and decisive price action (e.g., MACD crossover, rejection wick, breakout candle). If reports conflict, choose the side with stronger, more recent confirmation. In consolidation or unclear setups, defer to dominant trendline slope (e.g., short in descending channel). Do not speculate choose the more defensible side. Suggest risk-reward ratio between 1.2 and 1.8, adjusting for volatility and trend strength. Let me know if you want this formatted directly in LaTeX code or exported to PDF. Output JSON: e t i : d i e c l i e i u f t i e d i : 1 . 2 - 1 . 8 : LONG SHORT , : c c i d s n , ( c ) , Prompt for DecisionAgent in our multi-agent LLM framework. The agent integrates three upstream perspectives, indicator signals, structural patterns, and trend interactions, and outputs short-term directional decision (LONG or SHORT). The prompt instructs the agent to prioritize consistent evidence, avoid speculative outputs, and provide structured justification, including an estimated riskreward ratio. 22 B.5 Pattern Tool Sample Output Figure 10 Tool-generated chart for PatternAgent on NQ (2025). Raw intraday candlesticks from the July 78 window are shown prior to overlaying reference lines. The sequence of lower highs and higher lows indicates contracting trading range, suggesting latent pressure that often precedes breakout once boundary is breached. 23 B.6 Trend Tool Sample Output Figure 11 Tool-generated chart for TrendAgent on NQ (2025). Intraday candlesticks compress between an upward-sloping support line (blue) and downward-sloping resistance line (red), forming symmetrical-triangle wedge. The converging boundaries indicate consolidation phase where buying pressure gradually builds while sellers cap rallies, often preceding decisive breakout once boundary is breached. 24 Appendix C: Web Demo Figure 12 User interface of QuantAgent. The configuration panel enables selection of trading asset (e.g., AAPL), timeframe, and analysis window. It supports live data input, fine-grained control over historical candlestick ranges, and secure local execution. By default, the system optimizes context using the most recent 4050 price bars to balance relevance and computational efficiency. 25 Figure 13 Trading decision interface of QuantAgent. The system produces final directional decision along with the forecast horizon, riskreward ratio, and textual justification grounded in pattern recognition (e.g., Rounded Bottom reversal). 26 Figure 14 IndicatorAgent interface of QuantAgent. structured IndicatorAgent report is displayed, summarizing key technical indicators, MACD, RoC, Stochastic Oscillator, and Williams %R, to support interpretability and validate the decision process. 27 Figure 15 Pattern and trend report generated by QuantAgent. The top panel presents detected Double Bottom pattern, supported by structural symmetry, preceding downtrend, and subsequent rebound. The accompanying chart overlay highlights the pattern geometry. The bottom panel provides trend diagnostics, including ADX, RSI divergence, and volume analysis, alongside visualization of support and resistance levels. Together, the pattern and trend modules offer complementary perspectives on potential trend reversal and market recovery. 28 Appendix D: Benchmark Detail D.1 Benchmark Construction To evaluate the proposed QuantAgent framework, we design benchmark composed of diverse, well-known financial assets. This benchmark allows us to systematically test the systems ability to generalize across asset classes and trading environments. The benchmark also facilitates controlled comparisons across different decision-making models and enables reproducibility. D.2 Data Collection and Asset Selection All historical price data used in the benchmark are obtained via the publicly available tvdatafeed API, which provides access to TradingViews historical market data (rongardF). We use 4-hour OHLC (Open, High, Low, Close) candlestick data for all assets to maintain consistency in time resolution. The benchmark covers diverse mix of asset types, including cryptocurrency (BTC/USD), commodities (CL and GC), equity index futures (ES and NQ), and exchange-traded or spot indices (QQQ, SPX, and DJI). Each asset is widely traded and highly liquid, helping avoid noise from low trading activity and making sure the price movements reflect real market behavior. Besides, the selected assets include both relatively stable, trend-following instruments such as SPX and ES, which often exhibit smoother directional movement, and more volatile assets such as BTC/USD, which are known for rapid swings and high short-term variability. For each asset, we collect 5,000 historical 4-hour bars, which corresponds to approximately three years of data for assets that trade 24 hours day, five days week. To ensure fairness and consistency across assets, we apply the same fixed bar count to all instrumentsincluding those with limited trading hours, such as QQQ. As result, assets with lower intraday trading frequency span longer historical period (up to ten years), reflecting the reduced density of available candlestick intervals. From this data, we randomly sample 100 evaluation segments per asset. Each segment consists of 100 consecutive candlesticks, with the final 3 candlesticks removed during inference to ensure the system does not observe the true market outcome during prediction. The final three candlesticks are reserved for validating the correctness of the LLMs prediction. D.3 Benchmark Asset Properties Asset Market Type Start Date End Date Total Bars BTC/USD CL (Crude Oil) DJI ES (S&P 500) GC (Gold) NQ (Nasdaq) QQQ SPX Cryptocurrency Commodity Futures Equity Index (Spot) Equity Index Futures Commodity Futures Equity Index Futures Equity ETF Equity Index (Spot) 2023-04-01 2022-04-25 2015-08-26 2022-04-19 2022-04-25 2022-04-19 2015-08-24 2015-08-25 2025-06-23 2025-06-19 2025-05-16 2025-06-19 2025-06-19 2025-06-19 2025-05-16 2025-05-16 5000 5000 5000 5000 5000 5000 5000 Table 2 Overview of benchmark asset properties. Each asset is characterized by its name, market type, the start and end dates of the data collection window, and the total number of bars sampled. All assets are sampled using 4-hour OHLC intervals, with fixed total of 5,000 bars per asset to ensure comparability D.4 Benchmark Assets Detail We evaluate our models on diverse set of eight benchmark assets drawn from major areas of the global financial markets. BTC/USD (Bitcoin) shows how much one Bitcoin is worth in U.S. dollars. It represents the broader cryptocurrency market and operates continuously with high trading volume. CL (Crude Oil) tracks the price of West Texas Intermediate crude oil, key benchmark for U.S. energy prices and global indicator influenced by supply, demand, and geopolitical factors. ES (E-mini S&P 500) is futures contract tied to the S&P 500 Index, which includes 500 large publicly traded U.S. companies. It gives broad picture of the U.S. stock markets performance. GC (Gold) reflects the market price of gold, commodity often used by investors to preserve value during uncertain economic times. NQ (E-mini Nasdaq-100) follows the Nasdaq-100 Index, which focuses on large non-financial companies listed on the Nasdaq exchange, especially in the technology and innovation sectors. QQQ is an exchange-traded fund (ETF) that aims to match the performance of the Nasdaq-100 Index. It offers simple way for investors to gain exposure to major U.S. tech and growth stocks. SPX (S&P 500 Index) directly tracks the S&P 500 Index and is widely used as benchmark for measuring the overall performance of U.S. equities. DJI (Dow Jones Industrial Average) includes 30 large and well-known U.S. companies across different industries. It is commonly used as an indicator of the broader U.S. economy. D.5 Conclusion This benchmark offers consistent and comprehensive setting for evaluating trading systems across range of asset classes. By standardizing the data resolution and segment format, it ensures fair and reproducible comparisons while still capturing the variety found in real-world markets. The inclusion of both stable, trendfollowing assets and more volatile instruments enables meaningful stress testing of model performance within multi-agent high-frequency trading frameworks like QuantAgent."
        }
    ],
    "affiliations": [
        "Carnegie Mellon University",
        "Fudan University",
        "Stony Brook University",
        "University of British Columbia",
        "Yale University"
    ]
}