{
    "paper_title": "Depth Pro: Sharp Monocular Metric Depth in Less Than a Second",
    "authors": [
        "Aleksei Bochkovskii",
        "AmaÃ«l Delaunoy",
        "Hugo Germain",
        "Marcel Santos",
        "Yichao Zhou",
        "Stephan R. Richter",
        "Vladlen Koltun"
    ],
    "sections": [
        {
            "title": "Abstract",
            "content": "We present a foundation model for zero-shot metric monocular depth estimation. Our model, Depth Pro, synthesizes high-resolution depth maps with unparalleled sharpness and high-frequency details. The predictions are metric, with absolute scale, without relying on the availability of metadata such as camera intrinsics. And the model is fast, producing a 2.25-megapixel depth map in 0.3 seconds on a standard GPU. These characteristics are enabled by a number of technical contributions, including an efficient multi-scale vision transformer for dense prediction, a training protocol that combines real and synthetic datasets to achieve high metric accuracy alongside fine boundary tracing, dedicated evaluation metrics for boundary accuracy in estimated depth maps, and state-of-the-art focal length estimation from a single image. Extensive experiments analyze specific design choices and demonstrate that Depth Pro outperforms prior work along multiple dimensions. We release code and weights at https://github.com/apple/ml-depth-pro"
        },
        {
            "title": "Start",
            "content": "4 2 0 2 2 ] . [ 1 3 7 0 2 0 . 0 1 4 2 : r a"
        },
        {
            "title": "Preprint",
            "content": "D H : R N L E C T L T A O D"
        },
        {
            "title": "Aleksei Bochkovskii",
            "content": "Amael Delaunoy"
        },
        {
            "title": "Yichao Zhou",
            "content": "Stephan R. Richter"
        },
        {
            "title": "A B S T R A C T",
            "content": "We present foundation model for zero-shot metric monocular depth estimation. Our model, Depth Pro, synthesizes high-resolution depth maps with unparalleled sharpness and high-frequency details. The predictions are metric, with absolute scale, without relying on the availability of metadata such as camera intrinsics. And the model is fast, producing 2.25-megapixel depth map in 0.3 seconds on standard GPU. These characteristics are enabled by number of technical contributions, including an efficient multi-scale vision transformer for dense prediction, training protocol that combines real and synthetic datasets to achieve high metric accuracy alongside fine boundary tracing, dedicated evaluation metrics for boundary accuracy in estimated depth maps, and state-of-the-art focal length estimation from single image. Extensive experiments analyze specific design choices and demonstrate that Depth Pro outperforms prior work along multiple dimensions. We release code & weights at https://github.com/apple/ml-depth-pro"
        },
        {
            "title": "I N T R O D U C T I O N",
            "content": "Zero-shot monocular depth estimation underpins growing variety of applications, such as advanced image editing, view synthesis, and conditional image generation. Inspired by MiDaS (Ranftl et al., 2022) and many follow-up works (Ranftl et al., 2021; Ke et al., 2024; Yang et al., 2024a; Piccinelli et al., 2024; Hu et al., 2024), applications increasingly leverage the ability to derive dense pixelwise depth map for any image. Our work is motivated in particular by novel view synthesis from single image, an exciting application that has been transformed by advances in monocular depth estimation (Hedman et al., 2017; Shih et al., 2020; Jampani et al., 2021; Khan et al., 2023). Applications such as view synthesis imply number of desiderata for monocular depth estimation. First, the depth estimator should work zero-shot on any image, not restricted to specific domain (Ranftl et al., 2022; Yang et al., 2024a). Furthermore, the method should ideally produce metric depth maps in this zero-shot regime, to accurately reproduce object shapes, scene layouts, and absolute scales (Guizilini et al., 2023; Hu et al., 2024). For the broadest applicability in the wild, the method should produce metric depth maps with absolute scale even if no camera intrinsics (such as focal length) are provided with the image (Piccinelli et al., 2024). This enables view synthesis scenarios such as Synthesize view of this scene from 63 mm away for essentially arbitrary single images (Dodgson, 2004). Second, for the most compelling results, the monocular depth estimator should operate at high resolution and produce fine-grained depth maps that closely adhere to image details such as hair, fur, and other fine structures (Miangoleh et al., 2021; Ke et al., 2024; Li et al., 2024a). One benefit of producing sharp depth maps that accurately trace intricate details is the elimination of flying pixels, which can degrade image quality in applications such as view synthesis (Jampani et al., 2021). Third, for many interactive application scenarios, the depth estimator should operate at low latency, processing high-resolution image in less than second to support interactive view synthesis queries on demand. Low latency is common characteristic of methods that reduce zeroshot monocular depth estimation to single forward pass through neural network (Ranftl et al.,"
        },
        {
            "title": "Preprint",
            "content": "t I h D g M 2 i n p 2 3 t M Figure 1: Results on images from the AM-2k (Li et al., 2022a) (1st & 3rd column) and DIS-5k (Qin et al., 2022) (2nd column) datasets. Input image on top, estimated depth maps from Depth Pro, Marigold (Ke et al., 2024), Depth Anything v2 (Yang et al., 2024b), and Metric3D v2 (Hu et al., 2024) below. Depth Pro produces zero-shot metric depth maps with absolute scale at 2.25-megapixel native resolution in 0.3 seconds on V100 GPU. 2021; Yang et al., 2024a; Piccinelli et al., 2024), but it is not always shared by methods that employ more computationally demanding machinery at test time (Ke et al., 2024; Li et al., 2024a). In this work, we present foundation model for zero-shot metric monocular depth estimation that meets all of these desiderata. Our model, Depth Pro, produces metric depth maps with absolute scale on arbitrary images in the wild without requiring metadata such as camera intrinsics. It operates at high resolution, producing 2.25-megapixel depth maps (with native output resolution of 1536 1536 before optional further upsampling) in 0.3 seconds on V100 GPU. Fig. 1 shows some representative results. Depth Pro dramatically outperforms all prior work in sharp delineation of object boundaries, including fine structures such as hair, fur, and Figure 2: Boundary recall versus runtime. Depth Pro outperforms prior work by multiplicative factor in boundary accuracy while being orders of magnitude faster than works focusing on finegrained predictions (e.g., Marigold, PatchFusion)."
        },
        {
            "title": "Preprint",
            "content": "vegetation. As shown in Fig. 2, Depth Pro offers unparalleled boundary tracing, outperforming all prior work by multiplicative factor in boundary recall. (See Sec. 4 for additional detail.) Compared to the prior state of the art in boundary accuracy (Ke et al., 2024; Li et al., 2024a), Depth Pro is one to two orders of magnitude faster, yields much more accurate boundaries, and provides metric depth maps with absolute scale. Depth Pro is enabled by number of technical contributions. First, we design an efficient multi-scale ViT-based architecture for capturing the global image context while also adhering to fine structures at high resolution. Second, we derive new set of metrics that enable leveraging highly accurate matting datasets for quantifying the accuracy of boundary tracing in evaluating monocular depth maps. Third, we devise set of loss functions and training curriculum that promote sharp depth estimates while training on real-world datasets that provide coarse and inaccurate supervision around boundaries, along with synthetic datasets that offer accurate pixelwise ground truth but limited realism. Fourth, we contribute zero-shot focal length estimation from single image that dramatically outperforms the prior state of the art."
        },
        {
            "title": "2 R E L AT E D W O R K",
            "content": "Early work on monocular depth estimation focused on training on individual datasets recorded with single camera (Saxena et al., 2009; Eigen et al., 2014; Eigen & Fergus, 2015). Although this setup directly enabled metric depth predictions, it was limited to single datasets and narrow domains. Zero-shot depth estimation. MegaDepth (Li & Snavely, 2018) demonstrated that training on diverse dataset allows generalizing monocular depth prediction beyond specific domain. MiDaS (Ranftl et al., 2022) advanced this idea by training on large mix of diverse datasets with scale-and-shift-invariant loss. Follow-up works applied this recipe to transformer-based architectures (Ranftl et al., 2021; Birkl et al., 2023) and further expanded the set of feasible datasets through self-supervision (Spencer et al., 2023; Yang et al., 2024a). line of work uses self-supervision to learn from unlabeled image and video data (Petrovai & Nedevschi, 2022; Yang et al., 2024a). number of recent approaches (Ke et al., 2024; Gui et al., 2024) harness diffusion models to synthesize relative depth maps. Although some of these methods demonstrated excellent generalization, their predictions are ambiguous in scale and shift, which precludes downstream applications that require accurate shapes, sizes, or distances. Zero-shot metric depth. line of work sought to improve metric depth prediction through global distribution of depth values (Fu et al., 2018; Bhat et al., 2021; 2022; Li et al., 2024b) and further conditioning on scene type (Bhat et al., 2023). different approach directly takes into account camera intrinsics. Cam-Convs (Facil et al., 2019) conditioned convolutions on the camera intrinsics. LeReS (Yin et al., 2021) trains separate network for undistorting point clouds to recover scale and shift, Metric3D (Yin et al., 2023) scales images or depth maps to canonical space and remaps estimated depth given the focal length, and ZeroDepth (Guizilini et al., 2023) learns camera-specific embedddings in variational framework. DMD (Saxena et al., 2023) conditions diffusion model on the field of view. Metric3D v2 (Hu et al., 2024) leverages surface normals as an auxilliary output to improve metric depth. All of these methods require the camera intrinsics to be known and accurate. More recent works attempt to reason about unknown camera intrinsics either through separate network (Spencer et al., 2024) or by predicting camera embedding for conditioning its depth predictions in spherical space (Piccinelli et al., 2024). Akin to these recent approaches, our method does not require the focal length to be provided as input. We propose to directly estimate the field of view from intermediate features of the depth prediction network, and show that this substantially outperforms the prior state of the art in the task of cross-domain focal length estimation. Sharp occluding contours. SharpNet (Ramamonjisoa & Lepetit, 2019) incorporates normals and occluding contour constraints, but requires additional contour and normal supervision during training. BoostingDepth (Miangoleh et al., 2021) obtains detailed predictions from low-resolution network by applying it independently to image patches. Since the patches lack global context, BoostingDepth fuses them through sophisticated multi-step pipeline. PatchFusion (Li et al., 2024a) refines this concept through image-adaptive patch sampling and tailored modules that enable end-to-end training. recent line of work leverages diffusion priors to enhance the sharpness of occlusion boundaries (Gui et al., 2024; Ke et al., 2024). These approaches predominantly focus on predicting relative (rather"
        },
        {
            "title": "Preprint",
            "content": "than metric) depth. We propose simpler architecture without task-specific modules or diffusion priors and demonstrate that even sharper and more accurate results can be obtained while producing metric depth maps and reducing runtime by more than two orders of magnitude. Guided depth super-resolution uses the input image to upsample low-resolution depth predictions (Metzger et al., 2023; Zhong et al., 2023). SMDNet (Tosi et al., 2021) predicts bimodal mixture densities to sharpen occluding contours. And Ramamonjisoa et al. (Ramamonjisoa et al., 2020) introduce module for learning to sharpen depth boundaries of pretrained network. These works are orthogonal to ours and could be applied to further upsample our high-resolution predictions. To evaluate boundary tracing in predicted depth maps, Koch et al. (2018) introduce the iBims dataset with manual annotations of occluding contours and corresponding metrics. The need for manual annotation and highly accurate depth ground truth constrain the benchmark to small set of indoor scenes. We contribute metrics based on segmentation and matting datasets that provide complementary view by enabling evaluation on complex, dynamic environments or scenes with exceedingly fine detail for which ground-truth depth is impossible to obtain. Multi-scale vision transformers. Vision transformers (ViTs) have emerged as the dominant generalpurpose architecture for perception tasks, but operate at low resolution (Dosovitskiy et al., 2021). NaÄ±vely scaling the architecture to higher resolutions is prohibitive due to the computational complexity. Several works identified the attention layers as the main obstacle to scaling up ViT and have proposed alternatives (Zhu et al., 2021; Liu et al., 2021; Li et al., 2022c; Chu et al., 2021; Liu et al., 2022a; 2023; Cai et al., 2023; Jaegle et al., 2022). Another line of work modified the ViT architecture to produce hierarchy of features (Fan et al., 2021; Xie et al., 2021; Yuan et al., 2021; Ranftl et al., 2021; Chen et al., 2021; Lee et al., 2022). Rather than modifying the ViT architecture, which requires computationally expensive retraining, we propose network architecture that applies plain ViT backbone at multiple scales and fuses predictions into single high-resolution output. This architecture benefits from ongoing improvements in ViT pretraining, as new variants can be easily swapped in (Oquab et al., 2024; Peng et al., 2022b; Sun et al., 2023). Pretrained vision transformers have been adapted for semantic segmenation and object detection. ViT-Adapter (Chen et al., 2023) and ViT-CoMer (Xia et al., 2024) supplement pretrained ViT with convolutional network for dense prediction, whereas ViT-Det (Li et al., 2022b) builds feature pyramid on top of pretrained ViT. Distinct from these, we fuse features from the ViT applied at multiple scales to learn global context together with local detail."
        },
        {
            "title": "3 M E T H O D",
            "content": "3 . 1 W The key idea of our architecture is to apply plain ViT encoders (Dosovitskiy et al., 2021) on patches extracted at multiple scales and fuse the patch predictions into single high-resolution dense prediction in an end-to-end trainable model. Fig. 3 illustrates the architecture. For predicting depth, we employ two ViT encoders, patch encoder and an image encoder. The patch encoder is applied on patches extracted at multiple scales. Intuitively, this may allow learning representations that are scale-invariant as weights are shared across scales. The image encoder anchors the patch predictions in global context. It is applied to the whole input image, downsampled to the base input resolution of the chosen encoder backbone (in our case 384384). The whole network operates at fixed resolution of 15361536, which was chosen as multiple of the ViTs 384384. This guarantees sufficiently large receptive field and constant runtimes for any image while preventing out-of-memory errors (which we repeatedly observed for variable-resolution approaches on large images). Confirming this design choice, the results we report in Sec. 4 and Tab. 5 demonstrate that Depth Pro is consistently orders of magnitude faster than variable-resolution approaches while being more accurate and producing sharper boundaries. key benefit of assembling our architecture from plain ViT encoders over custom encoders is the abundance of pretrained ViTbased backbones that can be harnessed (Oquab et al., 2024; Peng et al., 2022b; Sun et al., 2023)."
        },
        {
            "title": "Preprint",
            "content": "Figure 3: Overview of the network architecture. An image is downsampled at several scales. At each scale, it is split into patches, which are processed by ViT-based patch encoder, with weights shared across scales. Patches are merged into feature maps, upsampled, and fused via DPT decoder. Predictions are anchored by separate image encoder that provides global context. We evaluate several pretrained backbones and compare our architecture to other high-resolution architectures in the appendices (Tab. 8 and Sec. B.2). After downsampling to 15361536, the input image is split into patches of 384 384. For the two finest scales, we let patches overlap to avoid seams. At each scale, the patches are fed into the patch encoder, which produces feature tensor at resolution 24 24 per input patch (features 3 6 in Fig. 3). At the finest scale we further extract intermediate features (features 1 & 2 in Fig. 3) to capture finer-grained details. We merge the feature patches into maps, which are fed into the decoder module, which resembles the DPT decoder (Ranftl et al., 2021). In addition to sharing representations across scales, the patch-based application of the encoder network allows trivial parallelization as patches can be processed independently. Another source of computational efficiency comes from the lower computational complexity of patch-based processing in comparison to scaling up the ViT to higher resolutions. The reason is multi-head selfattention (Vaswani et al., 2017), whose computational complexity scales quadratically with the number of input pixels, and thus quartically in image dimension. 3 ."
        },
        {
            "title": "S H A R P M O N O C U L A R D E P T H E S T I M AT I O N",
            "content": "Training objectives. For each input image I, our network predicts canonical inverse depth image = (I). To obtain dense metric depth map Dm, we scale by the horizontal field of view, represented by the focal length fpx and the width (Yin et al., 2023): Dm = fpx wC . We train with several objectives, all based on canonical inverse depth, because this prioritizes areas close to the camera over farther areas or the whole scene, and thus supports visual quality in applications such as novel view synthesis. Let ËC be the ground-truth canonical inverse depth. For all metric datasets we compute the mean absolute error (LMAE , Eq. 1) per pixel i, and discard pixels with an error in the top 20% per image for real-world (as opposed to synthetic) datasets: LMAE ( ËC, C) ="
        },
        {
            "title": "1\nN",
            "content": "N (cid:88) ËCi Ci. (1) For all non-metric datasets (i.e., those without reliable camera intrinsics or inconsistent scale), we normalize predictions and ground truth via the mean absolute deviation from the median (Ranftl et al., 2022) before applying loss. We further compute errors on the first and second derivatives of (canoncial) inverse depth maps at multiple scales. Let indicate spatial derivative operator , such as Scharr (S) (Scharr et al., 1997) or Laplace (L), and the error norm. We define the multi-scale derivative loss over scales as L,p,M (C, ËC) ="
        },
        {
            "title": "1\nM",
            "content": "M (cid:88) j"
        },
        {
            "title": "1\nNj",
            "content": "Nj (cid:88) 5 i ËC p, (2)"
        },
        {
            "title": "Preprint",
            "content": "where the scales are computed by blurring and downsampling the inverse depth maps by factor of 2 per scale. As shorthands we define the Mean Absolute Gradient Error LMAGE = LS,1,6, the Mean Absolute Laplace Error LMALE = LL,1,6, and the Mean Squared Gradient Error LMSGE = LS,2,6. Training curriculum. We propose training curriculum motivated by the following observations. First, training on large mix of real-world and synthetic datasets improves generalization as measured by zero-shot accuracy (Ranftl et al., 2022; 2021; Yang et al., 2024a; Hu et al., 2024). Second, synthetic datasets provide pixel-accurate ground truth, whereas real-world datasets often contain missing areas, mismatched depth, or false measurements on object boundaries. Third, predictions get sharper over the course of training. Based on these observations, we design two-stage training curriculum. In the first stage, we aim to learn robust features that allow the network to generalize across domains. To that end, we train on mix of all labeled training sets. Specifically, we minimize LMAE on metric datasets and its normalized version on non-metric datasets. LMAE is chosen for its robustness in handling potentially corrupted real-world ground truth. To steer the network towards sharp boundaries, we aim to also supervise on gradients of the predictions. Done naÄ±vely, however, this can hinder optimization and slow down convergence. We found that scale-and-shift-invariant loss on gradients, applied only to synthetic datasets, worked best. Controlled experiments are reported in the appendices. The second stage of training is designed to sharpen boundaries and reveal fine details in the predicted depth maps. To minimize the effect of inaccurate ground truth, at this stage we only train on synthetic datasets that provide high-quality pixel-accurate ground truth. (Note that this inverts the common practice of first training on synthetic data and then fine-tuning on real data (Gaidon et al., 2016; Gomez et al., 2023; Sun et al., 2021).) Specifically, we again minimize the LMAE and supplement it with selection of losses on the firstand second-order derivatives: LMAGE , LMALE , and LMSGE . We provide detailed specification of the loss functions that are applied at each stage in the appendices. Evaluation metrics for sharp boundaries. Applications such as novel view synthesis require depth maps to adhere to object boundaries. This is particularly challenging for thin structures. Misaligned or blurry boundaries can make objects appear distorted or split into parts. Common benchmarks for monocular depth prediction rarely take boundary sharpness into account. This may be attributed in part to the lack of diverse and realistic datasets with precise pixel-accurate ground-truth depth. To address this shortcoming, we propose new set of metrics specifically for the evaluation of depth boundaries. Our key observation is that we can leverage existing high-quality annotations for matting, saliency, or segmentation as ground truth for depth boundaries. We treat annotations for these tasks as binary maps, which define foreground/background relationship between an object and its environment. (This relationship may not hold in every case, especially for segmentation masks. However, we can easily discard such problematic cases through manual inspection. It is much easier to filter out segmentation mask than to annotate it.) To ensure that the relationship holds, we only consider pixels around edges in the binary map. We first define the metrics for depth maps and later derive the formulation for binary segmentation masks. Motivated by the ranking loss (Chen et al., 2016), we use the pairwise depth ratio of neighboring pixels to define foreground/background relationship. Let i, be the locations of two neighboring pixels. We then define an occluding contour cd derived from depth map as cd(i, j) = , where [] is the Iverson bracket. Intuitively, this indicates the presence of an occluding contour between pixels and if their corresponding depth differs by more than t%. For all pairs of neighboring pixels, we can then compute the precision (P ) and recall (R) as (cid:104) d(j) d(i) > (1 + (cid:105) 100 ) P(t) = (cid:80) i,jN (i) cd(i, j) Ëd(i, j) i,jN (i) cd(i, j) (cid:80) and R(t) = (cid:80) i,jN (i) cd(i, j) Ëd(i, j) i,jN (i) Ëd(i, j) (cid:80) . (3) Note that both and are scale-invariant. In our experiments, we report the F1 score. To account for multiple relative depth ratios, we further perform weighted averaging of the F1 values with thresholds that range linearly from tmin = 5 to tmax = 25, with stronger weights towards high threshold values. Compared to other edge-based metrics (such as the edge accuracy and completion from iBims (Koch et al., 2018)), our metric does not require any manual edge annotation, but simply pixelwise ground truth, which is easily obtained for synthetic datasets."
        },
        {
            "title": "Preprint",
            "content": "Similarly, we can also identify occluding contours from binary label maps that can be derived from real-world segmentation, saliency, and matting datasets. Given binary mask over the image, we define the presence of an occluding contour cb between pixels i, as cb(i, j) = b(i) b(j). With this definition at hand, we compute the recall R(t) by replacing the occluding contours from depth maps in Eq. 3 with those from binary maps. Since the binary maps commonly label whole objects, we cannot obtain ground-truth occluding contours that do not align with object silhouettes. Thus the boundary annotation is incomplete some but not all occluding contours are identified by this procedure. Therefore we can only compute the recall but not the precision for binary maps. To penalize blurry edges, we suppress non-maximum values of Ëd within the valid bounds of Ëd(i, j) connected components. For additional experiments and qualitative results we refer to the appendices. 3 ."
        },
        {
            "title": "F O C A L L E N G T H E S T I M AT I O N",
            "content": "To handle images that may have inaccurate or missing EXIF metadata, we supplement our network with focal length estimation head. small convolutional head ingests frozen features from the depth estimation network and task-specific features from separate ViT image encoder to predict the horizontal angular field-of-view. We use L2 as the training loss. We train the focal length head and the ViT encoder after the depth estimation training. Separating the focal length training has several benefits over joint training with the depth network. It avoids the necessity of balancing the depth and focal length training objectives. It also allows training the focal length head on different set of datasets, excluding some narrow-domain single-camera datasets that are used in training the depth estimation network, and adding large-scale image datasets that provide focal length supervision but no depth supervision. Further details are provided in the appendices."
        },
        {
            "title": "4 E X P E R I M E N T S",
            "content": "This section summarizes the key results. Additional details and experiments are reported in the appendices, including details on datasets, hyperparameters, experimental protocols, and the comparison of runtimes, which is summarized in Fig. 2. The appendices also report controlled experiments, including controlled studies on network architectures, training objectives, and training curricula. Here we summarize number of key comparisons of Depth Pro to state-of-the-art metric monocular depth estimation systems. One challenge in conducting such comparison is that many leading recent systems are trained on bespoke combinations of datasets. Some systems use proprietary datasets that are not publicly available, and some use datasets that are only available under restrictive licenses. Some recent systems also train on unlabeled datasets or incorporate pretrained models (e.g., diffusion models) that were trained on additional massive datasets. This rules out the possibility of comparison that controls for training data (e.g., only comparing to systems that use the same datasets we do). At this stage of this research area, the only feasible comparison to other leading cross-domain monocular depth estimation models is on full system-to-system basis. Fully trained models (each trained on large, partially overlapping and partially distinct collection of datasets) are compared to each other zero-shot on datasets that none of the compared systems trained on. Zero-shot metric depth. We evaluate our methods ability to predict zero-shot metric depth and compare against the state of the art in Tab. 1. Our baselines include Depth Anything (Yang et al., 2024a), Metric3D (Yin et al., 2023), PatchFusion (Li et al., 2024a), UniDepth (Piccinelli et al., 2024), ZeroDepth (Guizilini et al., 2023) and ZoeDepth (Bhat et al., 2023). We also report results for the very recent Depth Anything v2 (Yang et al., 2024b) and Metric3D v2 (Hu et al., 2024). As an overall summary measure of metric depth accuracy, Tab. 1 uses the Î´1 metric (Ladicky et al., 2014), which is commonly used for this purpose (Yin et al., 2023; Yang et al., 2024a; Piccinelli et al., 2024). It is defined as the percentage of inlier pixels, for which the predicted and ground-truth depths are within 25% of each other. We picked this metric for its robustness, with the strictest threshold found in the literature (25%). Corresponding tables for additional metrics can be found in Sec. A.2 of the appendices, including AbsRel (Ladicky et al., 2014), Log 10, Î´2 and Î´3 scores, as well as point-cloud metrics (Spencer et al., 2022). Tab. 1 also reports the average rank of each method across datasets, common way to summarize cross-dataset performance (Ranftl et al., 2022)."
        },
        {
            "title": "Preprint",
            "content": "We report results on Booster (Ramirez et al., 2024), Middlebury (Scharstein et al., 2014), SunRGBD (Song et al., 2015), ETH3D (Schops et al., 2017), nuScenes (Caesar et al., 2020), and Sintel (Butler et al., 2012), because, to our knowledge, they were never used in training any of the evaluated systems. Despite our best efforts, we were not able to run ZeroDepth on Booster, Middlebury, or Sun-RGBD as it consistently ran out of memory due to the high image resolutions. More details on our evaluation setup can be found in Sec. of the appendix. The results in Tab. 1 confirm the findings of Piccinelli et al. (2024), who observed considerable domain bias in some of the leading metric depth estimation models. Notably, Depth Anything v1 & v2 focus on relative depth estimation; for metric depth, they provide different models for different domains, fine-tuned either for indoor or for outdoor scenes. Metric3D v1 & v2 provide domain-invariant models, but their performance depends strongly on careful selection of the crop size at test time, which is performed per domain in their experiments and thus violates the zero-shot premise. We tried setting the crop size automatically based on the aspect ratio of the image, but this substantially degraded the performance of Metric3D; for this reason, we use the recommended non-zero-shot protocol, with the recommended per-domain crop sizes. Since domain-specific models and crop sizes violate the strict zero-shot premise we (and other baselines) operate under, we mark the Depth Anything and Metric3D results in gray in Tab. 1. We find that Depth Pro demonstrates the strongest generalization by consistently scoring among the top approaches per dataset and obtaining the best average rank across all datasets. Table 1: Zero-shot metric depth accuracy. We report the Î´1 score per dataset (higher is better) and aggregate performance across datasets via the average rank (lower is better). Methods in gray are not strictly zero-shot. Results on additional metrics and datasets are presented in the appendices. Method Booster ETH3D Middlebury NuScenes Sintel Sun-RGBD Avg. Rank DepthAnything (Yang et al., 2024a) DepthAnything v2 (Yang et al., 2024b) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) PatchFusion (Li et al., 2024a) UniDepth (Piccinelli et al., 2024) ZeroDepth (Guizilini et al., 2023) ZoeDepth (Bhat et al., 2023) Depth Pro (Ours) 52.3 59.5 4.7 39.4 22.6 27.6 OOM 21.6 46.6 9.3 36.3 34.2 87.7 51.8 25.3 OOM 34.2 41.5 39.3 37.2 13.6 29.9 49.9 31.9 46.5 53. 60.5 35.4 17.7 64.4 82.6 20.4 83.6 64.3 28.1 49.1 6.9 5.9 17.3 38.3 14.0 16.5 12.9 7.8 40.0 85.0 72.4 16.9 75.6 53.6 95.8 OOM 85. 89.0 5.7 5.8 5.8 3.7 5.2 4.2 4.6 5.3 2.5 Zero-shot boundaries. Tab. 2 summarizes the evaluation of boundary accuracy for Depth Pro and number of baselines. This evaluation is conducted in zero-shot setting: models are only evaluated on datasets that were not seen during training. Since our boundary metrics are scale-invariant, our baselines here also include methods that only predict relative (rather than absolute metric) depth. Our absolute baselines include Metric3D (Yin et al., 2023), Metric3D v2 (giant model) (Hu et al., 2024), PatchFusion (Li et al., 2024a), UniDepth (Piccinelli et al., 2024), and ZoeDepth (Bhat et al., 2023). We also report results for the relative variants of Depth Anything v1 & v2 (Yang et al., 2024a;b) because they yield sharper boundaries than their metric counterparts. Lastly, we include Marigold (Ke et al., 2024), recent diffusion-based relative depth model that became popular due to its high-fidelity predictions. We use the boundary metrics introduced in Sec. 3.2, and report the average boundary F1 score for datasets with ground-truth depth, and boundary recall (R) for datasets with matting or segmentation annotations. For image matting datasets, pixel is marked as occluding when the value of the alpha matte is above 0.1. The datasets include Sintel (Butler et al., 2012) and Spring (Mehl et al., 2023), which are synthetic. We also include the iBims dataset (Koch et al., 2018) which is often used specifically to evaluate depth boundaries, despite having low resolution. We refer to the appendices for full slate of iBims-specific metrics. To evaluate high-frequency structures encountered in natural images (such as hair or fur), we use AM-2k (Li et al., 2022a) and P3M-10k (Li et al., 2021), which are high-resolution image matting datasets that were used to evaluate image matting models (Li et al., 2023). Additionally, we further report results on the DIS-5k (Qin et al., 2022) image segmentation dataset. This is an object segmentation dataset that provides highly accurate binary masks across diverse images. We manually remove samples in which the segmented object is occluded by foreground objects. Fig. 2 visually summarizes the boundary recall metric on the AM-2k dataset, as function of runtime."
        },
        {
            "title": "Preprint",
            "content": "Table 2: Zero-shot boundary accuracy. We report the F1 score for dataset with ground-truth depth, and boundary recall (R) for matting and segmentation datasets. Qualitative results are shown on sample from the AM-2k dataset (Li et al., 2022a). Higher is better for all metrics. Method Sintel F1 Spring F1 iBims F1 AM P3M DIS t s DPT (Ranftl et al., 2021) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) ZoeDepth (Bhat et al., 2023) PatchFusion (Li et al., 2024a) UniDepth (Piccinelli et al., 2024) . DepthAnything (Yang et al., 2024a) DepthAnything v2 (Yang et al., 2024b) Marigold (Ke et al., 2024) Depth Pro (Ours) 0.181 0.037 0.321 0.027 0.312 0.316 0.261 0.228 0.068 0.409 0.029 0.000 0.024 0.001 0.032 0. 0.045 0.056 0.032 0.079 0.113 0.055 0.096 0.035 0.134 0.039 0.127 0.111 0.149 0.176 0.055 0.003 0.024 0.008 0.061 0. 0.058 0.107 0.064 0.173 0.075 0.003 0.013 0.004 0.109 0.003 0.094 0.131 0.101 0.168 0.018 0.001 0.006 0.002 0.068 0. 0.023 0.056 0.049 0.077 Image Alpha Matte Depth Pro (Ours) DepthAnything PatchFusion Marigold We find that Depth Pro produces more accurate boundaries than all baselines on all datasets, by significant margin. As can be observed in Fig. 1, in the images in Tab. 2, and the additional results in Sec. A, the competitive metric accuracy of the recent Metric3D v2 and Depth Anything v2 models does not imply sharp boundaries. Depth Pro has consistently higher recall for thin structures like hair and fur and yields sharper boundaries. This is also true in comparison to the diffusion-based Marigold, which leverages prior trained on billions of real-word images, as well as PatchFusion, which operates at variable resolution. Note that the runtime of Depth Pro is orders of magnitude faster than Marigold and PatchFusion (see Fig. 2 & Tab. 5). Fig. 4 demonstrates the benefits of sharp boundary prediction for novel view synthesis from single image. Focal length estimation. Previous work (Piccinelli et al., 2024; Kocabas et al., 2021; Baradad & Torralba, 2020) does not provide comprehensive systematic evaluations of focal length estimators on in-the-wild images. To address this, we curated zero-shot test dataset. To this end, we selected diverse datasets with intact EXIF data, enabling reliable assessment of focal length estimation accuracy. FiveK (Bychkovsky et al., 2011), DDDP (Abuolaim & Brown, 2020), and RAISE (DangNguyen et al., 2015) contribute professional-grade photographs taken with SLR cameras. SPAQ (Fang et al., 2020) provides casual photographs from mobile phones. PPR10K (Liang et al., 2021) provides high-quality portrait images. Finally, ZOOM (Zhang et al., 2019) includes sets of scenes captured at various optical zoom levels. Table 3: Comparison on focal length estimation. We report Î´25% and Î´50% for each dataset, i.e., the percentage of images with relative error (focal length in mm) less than 25% and 50%, respectively."
        },
        {
            "title": "FiveK",
            "content": "PPR10K"
        },
        {
            "title": "ZOOM",
            "content": "Î´25% Î´50% Î´25% Î´50% Î´25% Î´50% Î´25% Î´50% Î´25% Î´50% Î´25% Î´50% UniDepth (Piccinelli et al., 2024) SPEC (Kocabas et al., 2021) im2pcl (Baradad & Torralba, 2020) 6.8 14.6 7.3 40.3 46.3 29.6 24.8 30.2 28.0 56.2 56.6 60. 13.8 34.6 24.2 44.2 67.0 61.4 35.4 49.2 51.8 74.8 78.6 75.2 44.2 50.0 26.6 77.4 82.2 55. 20.4 23.2 22.4 45.4 43.6 42.8 Depth Pro (Ours) 66.9 85.8 74. 92.4 64.6 88.8 84.2 96.4 68. 85.2 69.8 91.6 Tab. 3 compares Depth Pro against state-of-the-art focal length estimators and shows the percentage of images with relative estimation error under 25% and 50%, respectively. Depth Pro is the most accurate across all datasets. For example, on PPR10K, dataset of human portraits, our method leads with 64.6% of the images having focal length error below 25%, while the second-best method, SPEC, only achieves 34.6% on this metric. We attribute this superior performance to our network design and training protocol, which decouple training of the focal length estimator from the depth"
        },
        {
            "title": "Preprint",
            "content": "t I h D 2 i n p l r 2 3 t M Figure 4: Impact on novel view synthesis. We plug depth maps produced by Depth Pro, Marigold (Ke et al., 2024), Depth Anything v2 (Yang et al., 2024b), and Metric3D v2 (Hu et al., 2024) into recent publicly available novel view synthesis system (Khan et al., 2023). We demonstrate results on images from AM-2k (Li et al., 2022a) (1st & 3rd column) and DIS-5k (Qin et al., 2022) (2nd column). Depth Pro produces sharper and more accurate depth maps, yielding cleaner synthesized views. Depth Anything v2 and Metric3D v2 suffer from misalignment between the input images and estimated depth maps, resulting in foreground pixels bleeding into the background. Marigold is considerably slower than Depth Pro and produces less accurate boundaries, yielding artifacts in synthesized images. Zoom in for detail. network, enabling us to use different training sets for these two tasks. Further controlled experiments are reported in the appendices."
        },
        {
            "title": "5 C O N C L U S I O N & L I M I TAT I O N S",
            "content": "Depth Pro produces high-resolution metric depth maps with high-frequency detail at sub-second runtimes. Our model achieves state-of-the-art zero-shot metric depth estimation accuracy without requiring metadata such as camera intrinsics, and traces out occlusion boundaries in unprecedented detail, facilitating applications such as novel view synthesis from single images in the wild. While Depth Pro outperforms prior work along multiple dimensions, it is not without limitations. For example, the model is limited in dealing with translucent surfaces and volumetric scattering, where the definition of single pixel depth is ill-posed and ambiguous."
        },
        {
            "title": "R E F E R E N C E S",
            "content": "Abdullah Abuolaim and Michael Brown. Defocus deblurring using dual-pixel data. In ECCV, 2020. Manel Baradad and Antonio Torralba. Height and uprightness invariance for 3D prediction from single view. In CVPR, 2020. Zuria Bauer, Francisco Gomez-Donoso, Edmanuel Cruz, Sergio Orts-Escolano, and Miguel Cazorla. UASOL, large-scale high-resolution outdoor stereo dataset. Scientific Data, 6, 2019. Shariq Farooq Bhat, Ibraheem Alhashim, and Peter Wonka. AdaBins: Depth estimation using adaptive bins. In CVPR, 2021. Shariq Farooq Bhat, Ibraheem Alhashim, and Peter Wonka. LocalBins: Improving depth estimation by learning local distributions. In ECCV, 2022. Shariq Farooq Bhat, Reiner Birkl, Diana Wofk, Peter Wonka, and Matthias Muller. ZoeDepth: Zero-shot transfer by combining relative and metric depth. arXiv, 2023. Reiner Birkl, Diana Wofk, and Matthias Muller. MiDaS v3.1 - model zoo for robust monocular relative depth estimation. arXiv, 2023. Michael J. Black, Priyanka Patel, Joachim Tesch, and Jinlong Yang. BEDLAM: synthetic dataset of bodies exhibiting detailed lifelike animated motion. In CVPR, 2023. Daniel J. Butler, Jonas Wulff, Garrett B. Stanley, and Michael J. Black. naturalistic open source movie for optical flow evaluation. In ECCV, 2012. Vladimir Bychkovsky, Sylvain Paris, Eric Chan, and Fredo Durand. Learning photographic global tonal adjustment with database of input / output image pairs. In CVPR, 2011. Holger Caesar, Varun Bankiti, Alex H. Lang, Sourabh Vora, Venice Erin Liong, Qiang Xu, Anush Krishnan, Yu Pan, Giancarlo Baldan, and Oscar Beijbom. nuScenes: multimodal dataset for autonomous driving. In CVPR, 2020. Han Cai, Junyan Li, Muyan Hu, Chuang Gan, and Song Han. EfficientViT: Lightweight multi-scale attention for high-resolution dense prediction. In ICCV, 2023. Chun-Fu (Richard) Chen, Quanfu Fan, and Rameswar Panda. CrossViT: Cross-attention multi-scale vision transformer for image classification. In ICCV, 2021. Weifeng Chen, Zhao Fu, Dawei Yang, and Jia Deng. Single-image depth perception in the wild. In NIPS, 2016. Zhe Chen, Yuchen Duan, Wenhai Wang, Junjun He, Tong Lu, Jifeng Dai, and Yu Qiao. Vision transformer adapter for dense predictions. In ICLR, 2023. Xiangxiang Chu, Zhi Tian, Yuqing Wang, Bo Zhang, Haibing Ren, Xiaolin Wei, Huaxia Xia, and Chunhua Shen. Twins: Revisiting the design of spatial attention in vision transformers. In NeurIPS, 2021. Angela Dai, Angel X. Chang, Manolis Savva, Maciej Halber, Thomas A. Funkhouser, and Matthias NieÃner. ScanNet: Richly-annotated 3D reconstructions of indoor scenes. In CVPR, 2017. Duc-Tien Dang-Nguyen, Cecilia Pasquini, Valentina Conotter, and Giulia Boato. RAISE: raw images dataset for digital image forensics. In MMSys, 2015. Afshin Dehghan, Gilad Baruch, Zhuoyuan Chen, Yuri Feigin, Peter Fu, Thomas Gebauer, Daniel Kurz, Tal Dimry, Brandon Joffe, Arik Schwartz, and Elad Shulman. ARKitScenes: diverse real-world dataset for 3D indoor scene understanding using mobile RGB-D data. In NeurIPS Datasets & Benchmarks, 2021. Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. ImageNet: large-scale hierarchical image database. In CVPR, 2009."
        },
        {
            "title": "Preprint",
            "content": "Neil A. Dodgson. Variation and extrema of human interpupillary distance. In Stereoscopic Displays and Virtual Reality Systems XI, volume 5291, pp. 36 46, 2004. Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, and Neil Houlsby. An image is worth 16x16 words: Transformers for image recognition at scale. In ICLR, 2021. David Eigen and Rob Fergus. Predicting depth, surface normals and semantic labels with common multi-scale convolutional architecture. In ICCV, 2015. David Eigen, Christian Puhrsch, and Rob Fergus. Depth map prediction from single image using multi-scale deep network. In NIPS, 2014. Facebook Research. fvcore. https://github.com/facebookresearch/fvcore, 2022. Jose M. Facil, Benjamin Ummenhofer, Huizhong Zhou, Luis Montesano, Thomas Brox, and Javier Civera. CAM-Convs: Camera-aware multi-scale convolutions for single-view depth. In CVPR, 2019. Haoqi Fan, Bo Xiong, Karttikeya Mangalam, Yanghao Li, Zhicheng Yan, Jitendra Malik, and Christoph Feichtenhofer. Multiscale vision transformers. In ICCV, 2021. Yuming Fang, Hanwei Zhu, Yan Zeng, Kede Ma, and Zhou Wang. Perceptual quality assessment of smartphone photography. In CVPR, 2020. Huan Fu, Mingming Gong, Chaohui Wang, Kayhan Batmanghelich, and Dacheng Tao. Deep ordinal regression network for monocular depth estimation. In CVPR, 2018. Adrien Gaidon, Qiao Wang, Yohann Cabon, and Eleonora Vig. Virtual worlds as proxy for multiobject tracking analysis. In CVPR, 2016. Andreas Geiger, Philip Lenz, Christoph Stiller, and Raquel Urtasun. Vision meets robotics: The KITTI dataset. IJRR, 32(11), 2013. Jose Luis Gomez, Manuel Silva, Antonio Seoane, Agn`es Borr`as, Mario Noriega, German Ros, Jose Antonio Iglesias Guitian, and Antonio M. Lopez. All for one, and one for all: UrbanSyn dataset, the third musketeer of synthetic driving scenes. arXiv, 2023. Ming Gui, Johannes S. Fischer, Ulrich Prestel, Pingchuan Ma, Dmytro Kotovenko, Olga Grebenkova, Stefan Andreas Baumann, Vincent Tao Hu, and Bjorn Ommer. DepthFM: Fast monocular depth estimation with flow matching. arXiv, 2024. Vitor Guizilini, Rares Ambrus, Sudeep Pillai, Allan Raventos, and Adrien Gaidon. 3D packing for self-supervised monocular depth estimation. In CVPR, 2020. Vitor Guizilini, Igor Vasiljevic, Dian Chen, Rares Ambrus, and Adrien Gaidon. Towards zero-shot scale-aware monocular depth estimation. In ICCV, 2023. Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Dollar, and Ross Girshick. Masked autoencoders are scalable vision learners. In CVPR, 2022. Peter Hedman, Suhib Alsisan, Richard Szeliski, and Johannes Kopf. Casual 3D photography. ACM Trans. Graph., 36(6), 2017. Mu Hu, Wei Yin, Chi Zhang, Zhipeng Cai, Xiaoxiao Long, Hao Chen, Kaixuan Wang, Gang Yu, Chunhua Shen, and Shaojie Shen. Metric3D v2: versatile monocular geometric foundation model for zero-shot metric depth and surface normal estimation. arXiv, 2024. Yuan-Ting Hu, Jiahong Wang, Raymond A. Yeh, and Alexander G. Schwing. SAIL-VOS 3D: synthetic dataset and baselines for object detection and 3D mesh reconstruction from video data. In CVPR, 2021. Po-Han Huang, Kevin Matzen, Johannes Kopf, Narendra Ahuja, and Jia-Bin Huang. DeepMVS: Learning multi-view stereopsis. In CVPR, 2018."
        },
        {
            "title": "Preprint",
            "content": "Xinyu Huang, Peng Wang, Xinjing Cheng, Dingfu Zhou, Qichuan Geng, and Ruigang Yang. The ApolloScape open dataset for autonomous driving and its application. TPAMI, 42(10):27022719, 2020. Andrew Jaegle, Sebastian Borgeaud, Jean-Baptiste Alayrac, Carl Doersch, Catalin Ionescu, David Ding, Skanda Koppula, Daniel Zoran, Andrew Brock, Evan Shelhamer, Olivier J. Henaff, Matthew M. Botvinick, Andrew Zisserman, Oriol Vinyals, and Joao Carreira. Perceiver IO: general architecture for structured inputs & outputs. In ICLR, 2022. Varun Jampani, Huiwen Chang, Kyle Sargent, Abhishek Kar, Richard Tucker, Michael Krainin, Dominik Kaeser, William T. Freeman, David Salesin, Brian Curless, and Ce Liu. SLIDE: Single image 3D photography with soft layering and depth-aware inpainting. In ICCV, 2021. Nikita Karaev, Ignacio Rocco, Benjamin Graham, Natalia Neverova, Andrea Vedaldi, and Christian Rupprecht. DynamicStereo: Consistent dynamic depth from stereo videos. In CVPR, 2023. Bingxin Ke, Anton Obukhov, Shengyu Huang, Nando Metzger, Rodrigo Caye Daudt, and Konrad Schindler. Repurposing diffusion-based image generators for monocular depth estimation. In CVPR, 2024. Numair Khan, Lei Xiao, and Douglas Lanman. Tiled multiplane images for practical 3D photography. In ICCV, 2023. Youngjung Kim, Bumsub Ham, Changjae Oh, and Kwanghoon Sohn. Structure selective depth superresolution for RGB-D cameras. TIP, 25(11):552738, 2016. Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alexander C. Berg, Wan-Yen Lo, Piotr Dollar, and Ross Girshick. Segment anything. In ICCV, 2023. Muhammed Kocabas, Chun-Hao P. Huang, Joachim Tesch, Lea Muller, Otmar Hilliges, and Michael J. Black. SPEC: Seeing people in the wild with an estimated camera. In ICCV, 2021. Tobias Koch, Lukas Liebel, Friedrich Fraundorfer, and Marco Korner. Evaluation of CNN-based single-image depth estimation methods. In ECCV Workshops, 2018. Anastasiia Kornilova, Marsel Faizullin, Konstantin Pakulev, Andrey Sadkov, Denis Kukushkin, Azat Akhmetyanov, Timur Akhtyamov, Hekmat Taherinejad, and Gonzalo Ferrer. SmartPortraits: Depth powered handheld smartphone dataset of human portraits for state estimation, reconstruction and synthesis. In CVPR, 2022. Lubor Ladicky, Jianbo Shi, and Marc Pollefeys. Pulling things out of perspective. In CVPR, 2014. Hoang-An Le, Thomas Mensink, Partha Das, Sezer Karaoglu, and Theo Gevers. EDEN: Multimodal synthetic dataset of enclosed garden scenes. In WACV, 2021. Youngwan Lee, Jonghee Kim, Jeffrey Willette, and Sung Ju Hwang. MPViT: Multi-path vision transformer for dense prediction. In CVPR, 2022. Jizhizi Li, Sihan Ma, Jing Zhang, and Dacheng Tao. Privacy-preserving portrait matting. In ACM-MM, 2021. Jizhizi Li, Jing Zhang, Stephen Maybank, and Dacheng Tao. Bridging composite and real: Towards end-to-end deep image matting. IJCV, 130(2):246266, 2022a. Jizhizi Li, Jing Zhang, and Dacheng Tao. Deep image matting: comprehensive survey. arXiv, 2023. Yanghao Li, Hanzi Mao, Ross Girshick, and Kaiming He. Exploring plain vision transformer backbones for object detection. In ECCV, 2022b. Yanghao Li, Chao-Yuan Wu, Haoqi Fan, Karttikeya Mangalam, Bo Xiong, Jitendra Malik, and Christoph Feichtenhofer. MViTv2: Improved multiscale vision transformers for classification and detection. In CVPR, 2022c."
        },
        {
            "title": "Preprint",
            "content": "Zhengqi Li and Noah Snavely. MegaDepth: Learning single-view depth prediction from internet photos. In CVPR, 2018. Zhenyu Li, Shariq Farooq Bhat, and Peter Wonka. PatchFusion: An end-to-end tile-based framework for high-resolution monocular metric depth estimation. In CVPR, 2024a. Zhenyu Li, Xuyang Wang, Xianming Liu, and Junjun Jiang. BinsFormer: Revisiting adaptive bins for monocular depth estimation. TIP, 33:39643976, 2024b. Jie Liang, Hui Zeng, Miaomiao Cui, Xuansong Xie, and Lei Zhang. PPR10K: large-scale portrait photo retouching dataset with human-region mask and group-level consistency. In CVPR, 2021. Xinyu Liu, Houwen Peng, Ningxin Zheng, Yuqing Yang, Han Hu, and Yixuan Yuan. EfficientViT: Memory efficient vision transformer with cascaded group attention. In CVPR, 2023. Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, and Baining Guo. Swin transformer: Hierarchical vision transformer using shifted windows. In ICCV, 2021. Ze Liu, Han Hu, Yutong Lin, Zhuliang Yao, Zhenda Xie, Yixuan Wei, Jia Ning, Yue Cao, Zheng Zhang, Li Dong, Furu Wei, and Baining Guo. Swin transformer V2: Scaling up capacity and resolution. In CVPR, 2022a. Zhuang Liu, Hanzi Mao, Chao-Yuan Wu, Christoph Feichtenhofer, Trevor Darrell, and Saining Xie. ConvNet for the 2020s. In CVPR, 2022b. Lukas Mehl, Jenny Schmalfuss, Azin Jahedi, Yaroslava Nalivayko, and Andres Bruhn. Spring: high-resolution high-detail dataset and benchmark for scene flow, optical flow and stereo. In CVPR, 2023. Nando Metzger, Rodrigo Caye Daudt, and Konrad Schindler. Guided depth super-resolution by deep anisotropic diffusion. In CVPR, 2023. S. Mahdi H. Miangoleh, Sebastian Dille, Long Mai, Sylvain Paris, and Yagiz Aksoy. Boosting monocular depth estimation models to high-resolution via content-adaptive multi-resolution merging. In CVPR, 2021. Simon Niklaus, Long Mai, Jimei Yang, and Feng Liu. 3D Ken Burns effect from single image. In SIGGRAPH, 2019. Maxime Oquab, Timothee Darcet, Theo Moutakanni, Huy Vo, Marc Szafraniec, Vasil Khalidov, Pierre Fernandez, Daniel Haziza, Francisco Massa, Alaaeldin El-Nouby, Mahmoud Assran, Nicolas Ballas, Wojciech Galuba, Russell Howes, Po-Yao Huang, Shang-Wen Li, Ishan Misra, Michael Rabbat, Vasu Sharma, Gabriel Synnaeve, Hu Xu, Herve Jegou, Julien Mairal, Patrick Labatut, Armand Joulin, and Piotr Bojanowski. DINOv2: Learning robust visual features without supervision. TMLR, 2024. Juewen Peng, Zhiguo Cao, Xianrui Luo, Hao Lu, Ke Xian, and Jianming Zhang. BokehMe: When neural rendering meets classical rendering. In CVPR, 2022a. Zhiliang Peng, Li Dong, Hangbo Bao, Qixiang Ye, and Furu Wei. BEiT v2: Masked image modeling with vector-quantized visual tokenizers. arXiv, 2022b. Andra Petrovai and Sergiu Nedevschi. Exploiting pseudo labels in self-supervised learning framework for improved monocular depth estimation. In CVPR, 2022. Luigi Piccinelli, Yung-Hsu Yang, Christos Sakaridis, Mattia Seg`u, Siyuan Li, Luc Van Gool, and Fisher Yu. UniDepth: Universal monocular metric depth estimation. In CVPR, 2024. Xuebin Qin, Hang Dai, Xiaobin Hu, Deng-Ping Fan, Ling Shao, and Luc Van Gool. Highly accurate dichotomous image segmentation. In ECCV, 2022. Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, Gretchen Krueger, and Ilya Sutskever. Learning transferable visual models from natural language supervision. PMLR, 2021."
        },
        {
            "title": "Preprint",
            "content": "Michael Ramamonjisoa and Vincent Lepetit. SharpNet: Fast and accurate recovery of occluding contours in monocular depth estimation. In ICCV Workshop, 2019. Michael Ramamonjisoa, Yuming Du, and Vincent Lepetit. Predicting sharp and accurate occlusion boundaries in monocular depth estimation using displacement fields. In CVPR, 2020. Pierluigi Zama Ramirez, Alex Costanzino, Fabio Tosi, Matteo Poggi, Samuele Salti, Stefano Mattoccia, and Luigi Di Stefano. Booster: benchmark for depth from images of specular and transparent surfaces. TPAMI, 46(1):85102, 2024. Rene Ranftl, Alexey Bochkovskiy, and Vladlen Koltun. Vision transformers for dense prediction. In ICCV, 2021. Rene Ranftl, Katrin Lasinger, David Hafner, Konrad Schindler, and Vladlen Koltun. Towards robust monocular depth estimation: Mixing datasets for zero-shot cross-dataset transfer. TPAMI, 44(3), 2022. Mike Roberts, Jason Ramapuram, Anurag Ranjan, Atulit Kumar, Miguel Angel Bautista, Nathan Paczan, Russ Webb, and Joshua M. Susskind. Hypersim: photorealistic synthetic dataset for holistic indoor scene understanding. In ICCV, 2021. Ashutosh Saxena, Min Sun, and Andrew Y. Ng. Make3D: Learning 3D scene structure from single still image. TPAMI, 31(5), 2009. Saurabh Saxena, Junhwa Hur, Charles Herrmann, Deqing Sun, and David J. Fleet. Zero-shot metric depth with field-of-view conditioned diffusion model. arXiv, 2023. Hanno Scharr, Stefan Korkel, and Bernd Jahne. Numerische isotropieoptimierung von fir-filtern mittels querglattung. In DAGM-Symposium, 1997. Daniel Scharstein, Heiko Hirschmuller, York Kitajima, Greg Krathwohl, Nera Nesic, Xi Wang, and Porter Westling. High-resolution stereo datasets with subpixel-accurate ground truth. In GCPR, 2014. Thomas Schops, Johannes L. Schonberger, S. Galliani, Torsten Sattler, Konrad Schindler, Marc Pollefeys, and Andreas Geiger. multi-view stereo benchmark with high-resolution images and multi-camera videos. In CVPR, 2017. Meng-Li Shih, Shih-Yang Su, Johannes Kopf, and Jia-Bin Huang. 3D photography using contextaware layered depth inpainting. In CVPR, 2020. Nathan Silberman, Derek Hoiem, Pushmeet Kohli, and Rob Fergus. Indoor segmentation and support inference from RGBD images. In ECCV, 2012. Shuran Song, Samuel P. Lichtenberg, and Jianxiong Xiao. SUN RGB-D: RGB-D scene understanding benchmark suite. In CVPR, 2015. Jaime Spencer, Chris Russell, Simon Hadfield, and Richard Bowden. Deconstructing self-supervised monocular reconstruction: The design decisions that matter. TMLR, 2022. Jaime Spencer, Simon Hadfield, Chris Russell, and Richard Bowden. Kick back & relax: Learning to reconstruct the world by watching SlowTV. In ICCV, 2023. Jaime Spencer, Chris Russell, Simon Hadfield, and Richard Bowden. Kick back & relax++: Scaling beyond ground-truth depth with SlowTV & CribsTV. arXiv, 2024. Deqing Sun, Daniel Vlasic, Charles Herrmann, Varun Jampani, Michael Krainin, Huiwen Chang, Ramin Zabih, William T. Freeman, and Ce Liu. AutoFlow: Learning better training set for optical flow. In CVPR, 2021. Quan Sun, Yuxin Fang, Ledell Wu, Xinlong Wang, and Yue Cao. EVA-CLIP: Improved training techniques for CLIP at scale. arXiv, 2023. Mingxing Tan and Quoc Le. EfficientNetV2: Smaller models and faster training. In ICML, 2021."
        },
        {
            "title": "Preprint",
            "content": "Bart Thomee, David Shamma, Gerald Friedland, Benjamin Elizalde, Karl Ni, Douglas Poland, Damian Borth, and Li-Jia Li. YFCC100M: The new data in multimedia research. Communications of the ACM, 59(2):6473, 2016. Fabio Tosi, Yiyi Liao, Carolin Schmitt, and Andreas Geiger. SMD-Nets: Stereo mixture density networks. In CVPR, 2021. Hugo Touvron, Matthieu Cord, and Herve Jegou. DeiT III: Revenge of the ViT. In ECCV, 2022. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan Gomez, Åukasz Kaiser, and Illia Polosukhin. Attention is all you need. In NIPS, 2017. Qiang Wang, Shizhen Zheng, Qingsong Yan, Fei Deng, Kaiyong Zhao, and Xiaowen Chu. IRS: large synthetic indoor robotics stereo dataset for disparity and surface normal estimation. arXiv, 2019. Wenshan Wang, Delong Zhu, Xiangwei Wang, Yaoyu Hu, Yuheng Qiu, Chen Wang, Yafei Hu, Ashish Kapoor, and Sebastian A. Scherer. TartanAir: dataset to push the limits of visual SLAM. In IROS, 2020. Ross Wightman. Pytorch image models. https://github.com/rwightman/ pytorch-image-models, 2019. Sanghyun Woo, Shoubhik Debnath, Ronghang Hu, Xinlei Chen, Zhuang Liu, In So Kweon, and Saining Xie. ConvNeXt V2: Co-Designing and Scaling ConvNets With Masked Autoencoders. In CVPR, 2023. Magnus Wrenninge and Jonas Unger. Synscapes: photorealistic synthetic dataset for street scene parsing. arXiv, 2018. Chunlong Xia, Xinliang Wang, Feng Lv, Xin Hao, and Yifeng Shi. ViT-CoMer: Vision transformer with convolutional multi-scale feature interaction for dense predictions. In CVPR, 2024. Ke Xian, Chunhua Shen, Zhiguo Cao, Hao Lu, Yang Xiao, Ruibo Li, and Zhenbo Luo. Monocular relative depth perception with web stereo data supervision. In CVPR, 2018. Ke Xian, Jianming Zhang, Oliver Wang, Long Mai, Zhe Lin, and Zhiguo Cao. Structure-guided ranking loss for single image depth prediction. In CVPR, 2020. Enze Xie, Wenhai Wang, Zhiding Yu, Anima Anandkumar, Jose M. Alvarez, and Ping Luo. SegFormer: Simple and efficient design for semantic segmentation with transformers. In NeurIPS, 2021. Lihe Yang, Bingyi Kang, Zilong Huang, Xiaogang Xu, Jiashi Feng, and Hengshuang Zhao. Depth anything: Unleashing the power of large-scale unlabeled data. In CVPR, 2024a. Lihe Yang, Bingyi Kang, Zilong Huang, Zhen Zhao, Xiaogang Xu, Jiashi Feng, and Hengshuang Zhao. Depth anything v2. arXiv, 2024b. Yao Yao, Zixin Luo, Shiwei Li, Jingyang Zhang, Yufan Ren, Lei Zhou, Tian Fang, and Long Quan. BlendedMVS: large-scale dataset for generalized multi-view stereo networks. In CVPR, 2020. Wei Yin, Jianming Zhang, Oliver Wang, Simon Niklaus, Long Mai, Simon Chen, and Chunhua Shen. Learning to recover 3D scene shape from single image. In CVPR, 2021. Wei Yin, Chi Zhang, Hao Chen, Zhipeng Cai, Gang Yu, Kaixuan Wang, Xiaozhi Chen, and Chunhua Shen. Metric3D: Towards zero-shot metric 3D prediction from single image. In ICCV, 2023. Weihao Yu, Chenyang Si, Pan Zhou, Mi Luo, Yichen Zhou, Jiashi Feng, Shuicheng Yan, and Xinchao Wang. Metaformer baselines for vision. TPAMI, 46(2), 2024. Yuhui Yuan, Rao Fu, Lang Huang, Weihong Lin, Chao Zhang, Xilin Chen, and Jingdong Wang. HRFormer: High-resolution transformer for dense prediction. In NeurIPS, 2021."
        },
        {
            "title": "Preprint",
            "content": "Xiaohua Zhai, Basil Mustafa, Alexander Kolesnikov, and Lucas Beyer. Sigmoid loss for language image pre-training. In ICCV, 2023. Chi Zhang, Wei Yin, Gang Yu, Zhibin Wang, Tao Chen, Bin Fu, Joey Tianyi Zhou, and Chunhua Shen. Robust geometry-preserving depth estimation using differentiable rendering. In ICCV, 2023a. Lvmin Zhang, Anyi Rao, and Maneesh Agrawala. Adding conditional control to text-to-image diffusion models. In ICCV, 2023b. Xuaner Zhang, Qifeng Chen, Ren Ng, and Vladlen Koltun. Zoom to learn, learn to zoom. In CVPR, 2019. Zhiwei Zhong, Xianming Liu, Junjun Jiang, Debin Zhao, and Xiangyang Ji. Guided depth map super-resolution: survey. ACM Computing Surveys, 2023. Xizhou Zhu, Weijie Su, Lewei Lu, Bin Li, Xiaogang Wang, and Jifeng Dai. Deformable DETR: Deformable transformers for end-to-end object detection. In ICLR, 2021."
        },
        {
            "title": "S U P P L E M E N TA L M AT E R I A L",
            "content": "In Section A, we provide additional results and experiments. Sec. A.1 presents further qualitative comparisons to baselines, Sec.A.2 presents more detailed zero-shot evaluation, Sec.A.3 lists runtimes for all evaluated methods, and Sec.A.4 presents additional experiments on boundary accuracy. Section showcases selection of controlled experiments on Depth Pro that helped guide architectural choices (Sec.B.1, Sec.B.2, and Sec.B.5), training objective design (Sec.B.3), and curriculum training (Sec.B.4). In Section C, we provide additional implementation, training and evaluation details, including complete summary of the datasets that were involved in this paper. Finally, Section provides additional material on downstream applications."
        },
        {
            "title": "A A D D I T I O N A L R E S U LT S",
            "content": "A . 1 L TAT R LT We provide additional qualitative results of Depth Pro, Marigold (Ke et al., 2024), Metric3D v2 (Hu et al., 2024), and Depth Anything v2 (Yang et al., 2024b) on in-the-wild images from AM-2k (Li et al., 2022a), DIS-5k (Qin et al., 2022), and Unsplash1 in Fig. 5, Fig. 6, and Fig. 7. Fine details are repeatedly missed by Metric3D v2 and Depth Anything v2. Marigold reproduces finer details than Metric3D v2 and Depth Anything v2, but commonly yields noisy predictions. . 2 O - T R E Expanding on the summary in Tab.1, we provide additional results for zero-shot metric depth estimation in Tab. 4. We report results on Booster (Ramirez et al., 2024), Middlebury (Scharstein et al., 2014), Sun-RGBD (Song et al., 2015), ETH3D (Schops et al., 2017), nuScenes (Caesar et al., 2020), and Sintel (Butler et al., 2012). Our baselines include Depth Anything (Yang et al., 2024a) and Depth Anything v2 (Yang et al., 2024b), Metric3D (Yin et al., 2023) and Metric3D v2 (Hu et al., 2024), PatchFusion (Li et al., 2024a), UniDepth (Piccinelli et al., 2024), ZeroDepth (Guizilini et al., 2023), and ZoeDepth (Bhat et al., 2023). To preserve the zero-shot setting, we do not report results for models that were trained on the same dataset as the evaluation dataset. We report commonly used metrics in the depth estimation literature, namely AbsRel , Log 10 (Saxena et al., 2009), Î´1, Î´2 and Î´3 scores (Ladicky et al., 2014), as well as point-cloud metrics (Spencer et al., 2022). Due to the high resolution of Booster images, we were not able to obtain point-cloud metrics in reasonable time. 1https://www.unsplash.com"
        },
        {
            "title": "Preprint",
            "content": "Input Image Depth Pro (Ours) Depth Anything v2 Marigold Metric3D v2 Figure 5: Zero-shot results of Depth Pro, Marigold (Ke et al., 2024), Metric3D v2 (Hu et al., 2024), and Depth Anything v2 (Yang et al., 2024b) on images from Unsplash (Li et al., 2022a), AM-2k (Li et al., 2022a), and DIS-5k (Qin et al., 2022)."
        },
        {
            "title": "Preprint",
            "content": "Input Image Depth Pro (Ours) Depth Anything v2 Marigold Metric3D v2 Figure 6: Zero-shot results of Depth Pro, Marigold (Ke et al., 2024), Metric3D v2 (Hu et al., 2024), and Depth Anything v2 (Yang et al., 2024b) on images from Unsplash (Li et al., 2022a), AM-2k (Li et al., 2022a), and DIS-5k (Qin et al., 2022)."
        },
        {
            "title": "Preprint",
            "content": "Input Image Depth Pro (Ours) Depth Anything v2 Marigold Metric3D v2 Figure 7: Zero-shot results of Depth Pro, Marigold (Ke et al., 2024), Metric3D v2 (Hu et al., 2024), and Depth Anything v2 (Yang et al., 2024b) on images from Unsplash (Li et al., 2022a), AM-2k (Li et al., 2022a), and DIS-5k (Qin et al., 2022)."
        },
        {
            "title": "Preprint",
            "content": "Table 4: Additional zero-shot metric depth evaluation. We report additional metrics used in the depth estimation literature, namely AbsRel (Ladicky et al., 2014), Log 10, Î´2 and Î´3 scores, as well as point-cloud metrics (Spencer et al., 2022) on Booster (Ramirez et al., 2024), Middlebury (Scharstein et al., 2014), Sun-RGBD (Song et al., 2015), ETH3D (Schops et al., 2017), nuScenes (Caesar et al., 2020), and Sintel (Butler et al., 2012). For fair comparison, all reported results were reproduced in our environment. NuScenes AbsRel Log10 Î´2 Î´3 SI-Log PC-CD PC-F PC-IoU DepthAnything (Yang et al., 2024a) DepthAnything v2 (Yang et al., 2024b) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) PatchFusion (Li et al., 2024a) UniDepth (Piccinelli et al., 2024) ZeroDepth (Guizilini et al., 2023) ZoeDepth (Bhat et al., 2023) Depth Pro (Ours) Sintel DepthAnything (Yang et al., 2024a) DepthAnything v2 (Yang et al., 2024b) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) PatchFusion (Li et al., 2024a) UniDepth (Piccinelli et al., 2024) ZeroDepth (Guizilini et al., 2023) ZoeDepth (Bhat et al., 2023) Depth Pro (Ours) Sun-RGBD DepthAnything (Yang et al., 2024a) DepthAnything v2 (Yang et al., 2024b) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) PatchFusion (Li et al., 2024a) UniDepth (Piccinelli et al., 2024) ZoeDepth (Bhat et al., 2023) Depth Pro (Ours) ETH3D DepthAnything (Yang et al., 2024a) DepthAnything v2 (Yang et al., 2024b) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) PatchFusion (Li et al., 2024a) UniDepth (Piccinelli et al., 2024) ZoeDepth (Bhat et al., 2023) Depth Pro (Ours) Middlebury 0.453 0.614 0.422 0.197 0.392 0.138 0.237 0.498 0. 0.151 0.326 0.132 0.080 0.226 0.060 0.121 0.182 0.164 73.876 31.837 77.220 93.252 48.742 93.006 82.596 64.947 90.301 47.265 83.605 95.736 76.035 96.415 89.908 82.704 28.153 29.737 33.827 27.032 31.171 21.801 30.703 31.501 73. 84.252 29.548 24.146 37.516 29.284 14.876 20.836 11.629 23.348 39.183 22.480 0.007 0.008 0.007 0.008 0.006 0.009 0.007 0.006 0. 0.004 0.004 0.004 0.004 0.003 0.004 0.004 0.003 0.005 AbsRel Log10 Î´2 Î´3 SI-Log PC-CD PC-F PC-IoU 3.973 2.226 1.733 0.370 0.617 0.869 0.703 0.946 0. 0.559 0.494 0.387 0.216 0.391 0.301 0.491 0.392 0.230 15.418 18.696 32.375 62.915 35.515 35.722 25.629 22.698 27.281 33.820 44.793 76.866 51.443 57.256 37.076 44.969 35.771 41.923 48.605 25.312 36.806 42.837 50.839 40.217 59. 71.138 27.494 38.592 54.931 45.858 34.790 44.615 32.338 76.274 52.301 41.968 0.057 0.057 0.056 0.091 0.077 0.098 0.052 0.085 0. 0.030 0.031 0.031 0.051 0.045 0.057 0.029 0.049 0.073 AbsRel Log10 Î´2 Î´3 SI-Log PC-CD PC-F PC-IoU 0.114 0.182 1.712 0.156 0.466 0.087 0.123 0. 0.053 0.070 0.382 0.076 0.961 0.037 0.053 0.049 98.811 97.645 26.999 96.348 60.145 99.330 97.954 99.770 99.462 34.116 99.548 60.651 99.804 99.505 8.038 8.390 20.262 7.433 69.647 6.968 8.964 0.034 0.045 0.506 0.025 331.477 0.020 0. 98.506 99.547 7.841 0.039 0.160 0.169 0.060 0.179 0.052 0.294 0.135 0. 0.090 0.096 0.032 0.102 0.027 0.183 0.075 0.103 AbsRel Log10 Î´2 Î´3 SI-Log PC-CD PC-F PC-IoU 1.682 0.370 0.859 0.124 0.256 0.457 0.500 0. 0.380 0.173 0.240 0.053 0.106 0.186 0.176 0.193 19.784 64.657 49.291 99.553 88.378 57.670 64.452 31.057 86.256 57.573 99.900 97.306 81.483 81.434 10.903 9.683 14.541 6.197 11.023 7.729 13.250 61. 71.228 10.170 0.072 0.042 0.072 0.083 0.042 0.031 0.078 0.094 0.172 0.330 0.303 0.466 0.209 0.409 0.127 0. 0.114 0.233 0.219 0.358 0.135 0.305 0.082 0.398 AbsRel Log10 Î´2 Î´3 SI-Log PC-CD PC-F PC-IoU DepthAnything (Yang et al., 2024a) DepthAnything v2 (Yang et al., 2024b) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) PatchFusion (Li et al., 2024a) UniDepth (Piccinelli et al., 2024) ZeroDepth (Guizilini et al., 2023) ZoeDepth (Bhat et al., 2023) Depth Pro (Ours) 0.273 0.262 1.251 0.450 0.250 0.324 0.377 0.214 0.251 0.149 0.141 0.305 0.152 0.108 0.127 0.179 0.115 0.089 69.619 72.074 37.528 73.321 87.166 80.047 67.060 77.683 86.060 90.549 58.733 88.610 98.154 99.621 78.952 90. 12.420 9.639 12.091 5.519 14.641 7.379 14.482 10.448 93.169 96.401 8.610 0.102 0.063 0.069 0.022 0.319 0.113 0.232 0.069 0. 0.103 0.127 0.069 0.215 0.084 0.221 0.052 0.114 0.161 0.055 0.069 0.036 0.122 0.044 0.129 0.027 0.062 0.091 Booster AbsRel Log10 Î´2 Î´3 SI-Log DepthAnything (Yang et al., 2024a) DepthAnything v2 (Yang et al., 2024b) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) PatchFusion (Li et al., 2024a) UniDepth (Piccinelli et al., 2024) ZoeDepth (Bhat et al., 2023) Depth Pro (Ours) 0.317 0.315 1.332 0.417 0.719 0.500 0.610 0.336 0.114 0.110 0.346 0.140 0.213 0.166 0.195 0.118 79.615 76.239 13.073 75.783 49.387 60.904 52.655 95.228 94.276 33.975 92.833 72.892 89.213 75. 10.507 7.056 10.631 3.932 14.128 7.436 10.551 79.429 96.524 4."
        },
        {
            "title": "Preprint",
            "content": "A . 3 T To assess the latency of our approach in comparison to baselines, we test all approaches on images of varying sizes and report results in Tab. 5. We pick common image resolutions (VGA: 640480, HD: 19201080, 4K: 40323024) and measure each methods average runtime for processing an image of the given size. All reported runtimes are reproduced in our environment and include preprocessing, eventual resizing (for methods operating at fixed internal resolution), and inference of each model. We further report the parameter counts and flops (at HD resolution) for each method as measured with the fvcore package. Among all approaches with fixed output resolution, Depth Pro has the highest native output resolution, processing more than 3 times as many pixels as the next highest, Metric3D v2 (Hu et al., 2024). Yet Depth Pro has less than half the parameter count and requires only third of the runtime compared to Metric3D v2. The variable-resolution approaches (PatchFusion (Li et al., 2024a) and ZeroDepth (Guizilini et al., 2023)) have considerably larger runtime, with the faster model, ZeroDepth, taking almost 4 times as long as Depth Pro, even for small VGA images. Table 5: Model performance, measured on V100-32G GPU. We report runtimes in milliseconds (ms) on images of multiple sizes, as well as model parameter counts and flops. For fairness, the reported runtimes are reproduced in our environment. Entries are sorted by the native output resolution. Method Parameter count FlopsHD Native output resolution tVGA (ms) tHD (ms) t4K (ms) DPT ZoeDepth DepthAnything v2 UniDepth Metric3D Marigold Metric3D v2 PatchFusion ZeroDepth Depth Pro 123M 340M 335M 347M 203M 949M 1.378G 203M 233M 504M - - 1827G 630G 477G - 6830G - 10862G 384 384 384 512 518 518 462 616 480 1216 768 768 616 1064 = 0.15 MP = 0.20 MP = 0.27 MP = 0.28 MP = 0.58 MP = 0.59 MP = 0.66 MP Original (tile-based) Original 4370G 1536 1536 = 2.36 MP 33.2 235.7 90.9 178.5 217.9 5174.3 1299.6 84012.0 1344.3 341. 30.6 235.1 91.1 183.0 263.8 4433.6 1299.7 84029.9 8795.7 341.3 27.8 235.4 91.2 198.1 398.1 4977.6 1390.2 84453.9 34992.2 341. . 4 N Y E E Boundary metrics empirical study. To illustrate how our boundary metrics work, we report additional qualitative edge metric results in Fig. 8. In particular, we show the occluding contours derived from the ground-truth and predicted depth, which illustrate how incorrect depth boundary predictions can impact the metric. Furthermore, to illustrate the behavior of the boundary precision and recall measurements under various image perturbations we also provide an empirical study in Fig. 9. We report both quantitative and qualitative results on samples from the UnrealStereo4K dataset (Tosi et al., 2021). Our results empirically demonstrate the correlation between erroneous depth edge predictions and low precision and recall values. Results on the iBims dataset (Koch et al., 2018). We supplement our boundary evaluation by results on the iBims dataset, which is commonly used for evaluating depth boundaries. iBims consists of images of indoor scenes that have been laser-scanned. The images are at 640 480 resolution and have been supplemented with manually annotated occlusion boundary maps to facilitate evaluation. The iBims benchmark uses Depth Directed Errors (DDE), which evaluate overall metric depth accuracy, Depth Boundary Errors (DBE), which are similar in spirit to our proposed boundary metric but require manual annotation, and Planar Errors, which evaluate the accuracy of planes derived from the depth maps. We find that Depth Pro is on par with the state of the art according to the DDE and PE metrics, and significantly outperforms all prior work according to the boundary metrics. 22 Image Ëd (cid:83) cd(i, j) (i,j)N (cid:83) (i,j)N Ëd(i, j)"
        },
        {
            "title": "Preprint",
            "content": ") 2 1 0 2 , . e t ( n ) 3 2 0 2 , . e M ( r ) 2 2 0 2 , . e ( 2 - ) 1 2 0 , . e ( 0 1 - 3 ) 2 2 0 , . e ( 5 - Figure 8: Evaluation metrics for sharp boundaries. We propose novel metrics to evaluate the sharpness of occlusion boundaries. The metrics can be computed on ground-truth depth maps (first two rows), and binary maps that can be derived from matting or segmentation datasets (subsequent rows). Each row shows sample image, the ground truth for deriving occlusion boundaries, our prediction, ground-truth occluding contours, and occluding contours from the prediction. For these visualizations we set = 15."
        },
        {
            "title": "B C O N T R O L L E D E X P E R I M E N T S",
            "content": "We conduct several controlled experiments to investigate the impact of various components and design decisions in Depth Pro. Specifically, we aim to assess the contribution of key components in the network architecture (Sec. B.1), training objective (Sec. B.3), training curriculum (Sec. B.4), and the focal length estimation head (Sec. B.5). . 1 W B B We begin by evaluating various candidate image encoder backbones within our network architecture. To assess their performance, we conduct comparative analysis utilizing off-the-shelf models available from the TIMM library (Wightman, 2019). Using the pretrained weights, we train each backbone at 384 384 resolution across five RGB-D datasets (Keystone, HRWSI, RedWeb, TartanAir, and Hypersim) and evaluate their performance in terms of metric depth accuracy across multiple"
        },
        {
            "title": "Preprint",
            "content": "d Ëd (cid:83) cd(i, j) (cid:83) (i,j)N (i,j)N Ëd(i, j) s G B h - i o - ) r ( o - ) n b ( D - ) u ( Figure 9: Boundary evaluation metrics empirical study. We demonstrate how various types of image perturbations impact our proposed edge metrics. We report quantitative and qualitative results for multiple ground-truth perturbations, such as simple image shifts, downsampling followed by upsamplings, and Gaussian blurring. We report both ground-truth and perturbed occluding contours, used to derive our 1 scores. Our results empirically demonstrate the correlation between erroneous depth edge predictions and low precision and recall values. Table 6: Zero-shot metric depth evalution on the iBims dataset (Koch et al., 2018). We report the iBims-specific Depth Directed Errors (DDE), Depth Boundary Errors (DBE) and Planar Errors (PE). For fairness, all reported results were reproduced in our environment. Please see Sec. A. Method DDE (in %) DBE (in px) PE (in m/) DPT (Ranftl et al., 2021) Metric3D (Yin et al., 2023) Metric3D v2 (Hu et al., 2024) ZoeDepth (Bhat et al., 2023) Depth Anything (Yang et al., 2024a) Depth Anything v2 (Yang et al., 2024b) PatchFusion (Li et al., 2024a) Marigold (Ke et al., 2024) UniDepth (Piccinelli et al., 2024) Depth Pro (Ours) Îµ0 DDE 58.744 88.608 84.721 85.600 88.951 91.773 85.765 58.738 73.020 89.725 Îµ DDE 41.255 1.337 0.546 13.874 10.741 1.619 12.602 41.261 0.041 1.809 Îµ+ DDE 0.000 10.054 14.732 0.525 0.308 6.607 1.633 0.000 26.939 8.464 Îµacc DBE 3.580 2.073 1.843 1.960 2.081 1.959 1.711 1.855 1.999 1.680 Îµcomp DBE 39.372 19.011 10.062 18.166 19.172 8.350 20.722 12.742 14.234 10. Îµplan PE 0.138 0.100 0.095 0.103 0.106 0.095 0.117 0.168 0.098 0.095 Îµorie PE 31.837 22.451 19.561 20.108 20.680 19.406 23.926 33.734 19.114 18.776 datasets, including Booster, Hypersim, Middlebury, and NYUv2, utilizing metrics such as AbsRel for affine-invariant depth and Log 10 for metric depth in Tab. 7. We find that ViT-L DINOv2 (Oquab et al., 2024) outperforms all other backbones by significant margin and conclude that the combination of backbone and pretraining strategy considerably affects downstream performance. Following this analysis, we pick ViT-L DINOv2 for both our encoder backbones. . 2 H - O I LT AT S We further evaluate alternative high-resolution 15361536 network structures and different pretrained weights (Tab. 8). To do this, we test generalization accuracy by training on train split of some datasets and testing on val or test split of other datasets, following the Stage 1 protocol for"
        },
        {
            "title": "Preprint",
            "content": "all models in accordance with Tab. 14 and Tab. 15. All ViT models use patch size of 1616. For weights pretrained with patch size of 1414 we apply bicubic interpolation to the weights of the convolutional patch embedding layer and scale these weights inversely to the number of pixels (i.e., the weights are reduced by factor of 1.3). All ViT models use resolution 15361536, for this we apply bicubic interpolation to positional embeddings prior to training. The Depth Pro approach in all cases uses ViT with resolution 384384 and patch size 1616 for both the patch encoder and the image encoder. SWINv2 and convolutional models are pretrained on ImageNet (Deng et al., 2009). Other models use different pretraining approaches described in their papers: CLIP (Radford et al., 2021), MAE (He et al., 2022), BeiTv2 (Peng et al., 2022b), and DINOv2 (Oquab et al., 2024). For the Segment Anything model we use publicly available pretrained weights, which were initialized using MAE pretraining (He et al., 2022) and subsequently trained for segmentation as described in their paper (Kirillov et al., 2023). We find that the presented Depth Pro approach is faster and more accurate for object boundaries than the plain ViT, with comparable metric depth accuracy. In comparison to other transformer-based and convolutional models, Depth Pro has comparable latency, several times lower metric depth error, and several times higher recall accuracy for object boundaries. Table 7: Comparison of image encoder backbones candidates. We train each backbone at 384384 resolution across five RGB-D datasets: Keystone, HRWSI, RedWeb, TartanAir, and Hypersim. To ensure fair comparison, we select backbone candidates with comparable computational complexity, measured in Flops using the fvcore library (Facebook Research, 2022), and an equivalent number of parameters. We identify ViT-L DINOv2 (Oquab et al., 2024) as the optimal choice for our image encoder backbone, given its superior depth accuracy performance."
        },
        {
            "title": "Backbone",
            "content": "Flops (G) Params (M) AbsRel Log10 ViT-L DINOv2-reg4 (Oquab et al., 2024) ViT-L DINOv2 (Oquab et al., 2024) ViT-L MAE (He et al., 2022) ViT-L BeiTv2 (Peng et al., 2022b) ViT-L BeiT (Bhat et al., 2023) ViT-L SO400m-siglip (Zhai et al., 2023) ViT-L CLIP-quickgelu (Radford et al., 2021) ViT-L CLIP (Radford et al., 2021) ViT-L (Dosovitskiy et al., 2021) ConvNext-XXL (Liu et al., 2022b) ViT-L DeiT-3 (Touvron et al., 2022) ConvNext-L-mlp (Liu et al., 2022b) ConvNextv2-H (Woo et al., 2023) SegAnything ViT-L (Kirillov et al., 2023) SWINv2-L (Liu et al., 2022a) CAFormer-B36 (Yu et al., 2024) EfficientViT-L3 (Liu et al., 2023) 248 247 247 242 259 311 247 247 247 514 247 162 405 245 177 124 345 345 343 336 336 471 344 345 345 867 345 214 680 330 212 108 0.039 0.040 0.041 0.042 0.048 0.051 0.053 0.057 0.061 0.075 0.078 0.081 0.085 0.087 0.091 0.091 0.109 0.138 0.129 0.150 0.134 0.147 0.174 0.166 0.156 0.163 0.216 0.176 0.222 0.242 0.311 0.240 0.248 0.303 . 3 I G E V To assess the efficacy of our training curriculum, we compare it to alternative training schedules. We first examine the different stages individually and then compare full curricula. Stage 1 training objectives. We first evaluate loss combinations for the first stage (Tab. 9). Condition 1A only applies mean absolute error loss to all datasets. For non-metric datasets, we use the scaleand-shift-invariant version. Condition 1B adds gradient losses to all synthetic datasets. We again use the scale-and-shift-invariant version for non-metric datasets. Following our observations from Sec. 3, we propose to apply an appropriate mean absolute error loss as in other conditions depending on dataset being metric, but apply scale-and-shift-invariant gradient loss irrespective of dataset being metric or not (C). Although the intuition of applying gradient loss is to sharpen the boundaries and improve edge-related metrics, it also improves other, non-boundary-related metrics. The key finding is that the gradient loss must be scale-and-shift-invariant, irrespective of the dataset being"
        },
        {
            "title": "Preprint",
            "content": "Table 8: High-resolution alternatives. Generalization accuracy of alternative high-resolution 15361536 models and different pretrained weights. All models are trained identically using Stage 1 in accordance with Tab. 14 and Tab. 15. Latency measured on single GPU V100 with FP16 precision using batch=1. All ViT models use patch size of 1616. Depth Pro employs ViT-L DINOv2 (Oquab et al., 2024) for the image and patch encoders. Method . EfficientNetV2-XL (Tan & Le, 2021) C ConvNext-XXL (Liu et al., 2022b) ConvNextv2-H (Woo et al., 2023) . S. Anything (Kirillov et al., 2023) (ViT-L) S. Anything (Kirillov et al., 2023) (ViT-H) SWINv2-L (Liu et al., 2022a) (window=24) T ViT-L CLIP (Radford et al., 2021) ViT-L BeiTv2 (Peng et al., 2022b) ViT-L MAE (He et al., 2022) ViT-L DINOv2 (Oquab et al., 2024) Depth Pro Latency, ms NYUv2 Î´1 iBims Î´1 Metric depth accuracy Boundary accuracy iBims F1 DIS 118 304 287 349 365 384 OOM 390 392 341 4.4 68.0 70.0 53.2 51.7 58.4 92.2 90.4 92.7 96.5 96. 7.0 38.3 56.6 38.9 41.1 33.1 81.9 86.5 84.7 90.3 91.3 0.005 0.134 0.131 0.140 0.146 0. 0.157 0.149 0.163 0.161 0.177 0.000 0.031 0.044 0.051 0.050 0.028 0.052 0.042 0.065 0.065 0. Table 9: Comparison of stage 1 training objectives. 1A only applies the LMAE to metric, and the LSSI -MAE to non-metric datasets. 1D additionally minimizes gradients on all datasets. 1B minimizes gradients only on synthetic datasets. We use 1C, which minimizes gradients with scale-and-shiftinvariant LSSI -MAGE loss on all synthetic synthetic datasets irrespective of whether the dataset is metric. HRWSI Cond. AbsRel 1A 1D 1B 1C 0.166 0.138 0.156 0.150 Î´1 82.1 85.1 83.3 83.7 Log10 Hypersim AbsRel 0.083 0.077 0.078 0.074 0.259 0.246 0.249 0. Î´1 75.4 78.4 77.3 79.9 Log10 Apolloscape AbsRel 0.156 0.128 0. 0.084 0.339 0.424 0.300 0.235 Î´1 45.6 60.6 47.3 75. metric or not. Applying regular gradient loss on metric datasets that early in training actually harms convergence. Stage 2 training objectives. The second stage of our training curriculum focuses on sharpening Table 10: Comparison of stage 2 training objectives. We evaluate the efficacy of derivative-based losses for sharpening boundaries. Employing firstand second-order derivative losses (2A) yields the best results on balance as indicated by the average rank over metrics. More details in the text."
        },
        {
            "title": "Apolloscape",
            "content": "n i C L M S L AbsRel 2A 0.149 2B 2C 2D 2E 0.148 0.150 0.150 0.159 Î´1 83.6 83.7 83.7 83.4 82. Log10 AbsRel 0.072 0.072 0.072 0.074 0.074 0.235 0.230 0.235 0.239 0. Î´1 81.3 81.0 80.8 79.8 80.6 Log10 AbsRel 0. 0.092 0.091 0.096 0.096 0.303 0.299 0.300 0.349 0.346 Î´1 72.9 73.1 73.2 72.8 73. depth boundaries. To that end, we only employ synthetic datasets due to their high quality ground truth. The obvious strategy for sharpening predictions is the application of gradient losses. We evaluate our combination of multiscale derivative-based losses in an ablation study. Condition 2A uses all of the losses, namely LMAE , LMSE ,LMAGE , LMALE , and LMSGE . Tab. 10. 2B removes the second-order loss LMALE . 2C further removes the squared first order losses LMSGE . 2D removes all derivative-based losses. 2E applies the LMAE to all datasets. Removing LMALE improves results on Apolloscape. Our combination of 0thto 2nd-order derivative losses (2A) performs best across metrics and datasets in aggregate (e.g., in terms of the average rank across metrics)."
        },
        {
            "title": "Preprint",
            "content": "B ."
        },
        {
            "title": "F U L L C U R R I C U L A",
            "content": "Table 11: Comparison of full curricula. We evaluate our curriculum (3A) against single stage training (3B), and pre-training on synthetic, fine-tuning with real data (3C). HRWSI Cond. AbsRel 3A (Ours) 0. 3B 3C 0.148 0.153 Î´1 83.6 83.9 83.6 Log10 Hypersim AbsRel 0.072 0.073 0.166 0.235 0.245 0. Î´1 81.3 81.3 37.1 Log10 Apolloscape AbsRel 0. 0.095 0.586 0.303 0.292 0.712 Î´1 72.9 72.1 0. Finally, we assess the efficacy of our complete training curriculum in comparison to alternatives. Condition 3A represents our two-stage curriculum. Condition 3B trains in single stage and applies all the second-stage gradient losses throughout the whole training. Condition 3C reverses our two stages and represents the established strategy of pretraining on synthetic data first and fine-tuning with real-world data. ."
        },
        {
            "title": "F O C A L L E N G T H E S T I M AT I O N",
            "content": "Additional analysis of zero-shot focal length estimation accuracy. In Fig. 10, we present more comprehensive analysis of our focal length predictors performance compared to baseline models. To that end, we plot the percentage of samples below certain absolute relative error for each method and dataset in our zero-shot evaluation set up. Depth Pro outperforms all approaches on all datasets. Figure 10: Evaluation of focal length estimation. Each plot compares number of methods on given dataset. The axis represents the AbsRel error and the axis represents the percentage of samples whose error is below that magnitude. Controlled evaluation of network structures. We evaluate number of choices for the focal length estimation head and report results in Tab. 12. The models are evaluated on 500 images randomly sampled from Flickr (Thomee et al., 2016). The first row, DPT only shows the performance of network with the frozen DPT depth feature extractor (Ranftl et al., 2021) and convolutional head. The second row, ViT only, demonstrates the performance of only using small ViT network trained from Table 12: Ablation study on focal length estimation."
        },
        {
            "title": "Architecture",
            "content": "DPT only ViT only DPT & ViT in series DPT & ViT in parallel Î´25% 60.0 74.4 63.6 78."
        },
        {
            "title": "Preprint",
            "content": "scratch (Dosovitskiy et al., 2021). The third row, DPT & ViT in series, uses the frozen DPT feature extractor followed by small ViT network. The fourth row, DPT & ViT in parallel, represents our chosen architecture depicted in Fig. 3, which utilizes frozen features from the depth network and task-specific features from separate ViT image encoder in parallel. We observe that DPT & ViT in series exhibits similar performance to DPT only, suggesting that adding more computation on top of the frozen DPT feature in addition to our small convolutional head does not provide extra benefits despite the increased computation. When comparing DPT & ViT in series with DPT & ViT in parallel, we observe an accuracy difference of 14.6 percentage points. This indicates that accurate focal length prediction requires extra task-specific knowledge in addition to depth information. Furthermore, DPT & ViT in parallel outperforms ViT only, which highlights the importance of features from the pretrained depth network for obtaining high-performing focal length estimator. P E TAT , I G E VA AT D TA In this section we provide additional details on the datasets used for training and evaluation, hyperparameter settings for our method, and details on the evaluation setup. . 1 ATA S Tab. 13 provides comprehensive summary of the datasets utilized in our study, detailing their respective licenses and specifying their roles (e.g., training or testing). . 2 I G E PA E S . We specify the training hyperparameters in Tab. 14 and Tab. 15. . 3 E E Below we provide further detail on the setup of the baselines. DepthAnything. Depth Anything v1 and v2 each released general model for relative depth, but their metric depth models are tailored to specific domains (indoor vs. outdoor). For the metric depth evaluation, we match these models to datasets according to their domain, and for datasets containing both indoor and outdoor images, we select the model with the best performance. For qualitative results and the (scale and shift invariant) zero-shot boundary evaluation, we employ the relative depth models, since they yield better qualitative results and sharper boundaries than the metric models. Metric3D. For Metric3D v1 and v2, we found that the crop size parameter strongly affects metric scale accuracy. In fact, using fixed crop size consistently yielded very poor results on at least one metric dataset. In order to obtain acceptable results, we used different crop sizes for indoor (512, 1088) and outdoor (512, 992) datasets. As in the case of Depth Anything, we mark these results in gray to indicate that they are not strictly zero-shot. For Metric 3D v2, we use the largest (giant) model. UniDepth. For UniDepth, we use the ViT-L version, which performs best on average among the UniDepth variants. ZoeDepth. We use the model finetuned on both indoor and outdoor data (denoted ZoeD NK). . 4 VA AT S P In evaluating our approach and baselines, we found the range of valid depth values, the depth map resolution used for computing metrics, the resizing approach used for matching the resolution of the ground truth depth maps, and the choice of intrinsics to affect results, sometimes strongly. This is why we made an effort to setup and evaluate each baseline in the same, fair evaluation set up, which we detail below."
        },
        {
            "title": "Preprint",
            "content": "Table 13: Datasets used in this work. Dataset URL 3D Ken Burns (Niklaus et al., 2019) AM-2K (Li et al., 2022a) Apolloscape (Huang et al., 2020) ARKitScenes (Dehghan et al., 2021) Bedlam (Black et al., 2023) BlendedMVG (Yao et al., 2020) Booster (Ramirez et al., 2024) DDAD (Guizilini et al., 2020) DIML (indoor) (Kim et al., 2016) DIS5K (Qin et al., 2022) DPDD (Abuolaim & Brown, 2020) Dynamic Replica (Karaev et al., 2023) EDEN (Le et al., 2021) ETH3D (Schops et al., 2017) FiveK (Bychkovsky et al., 2011) HRWSI (Xian et al., 2020) Hypersim (Roberts et al., 2021) iBims (Koch et al., 2018) IRS (Wang et al., 2019) KITTI (Geiger et al., 2013) Middlebury (Scharstein et al., 2014) MVS-Synth (Huang et al., 2018) NYUv2 (Silberman et al., 2012) nuScenes (Caesar et al., 2020) P3M-10k (Li et al., 2021) PPR10K (Liang et al., 2021) RAISE (Dang-Nguyen et al., 2015) ReDWeb (Xian et al., 2018) SAILVOS3D (Hu et al., 2021) ScanNet (Dai et al., 2017) Sintel (Butler et al., 2012) SmartPortraits (Kornilova et al., 2022) SPAQ (Fang et al., 2020) Spring (Mehl et al., 2023) Sun-RGBD (Song et al., 2015) Synscapes (Wrenninge & Unger, 2018) TartanAir (Wang et al., 2020) UASOL (Bauer et al., 2019) UnrealStereo4K (Tosi et al., 2021) Unsplash UrbanSyn (Gomez et al., 2023) VirtualKITTI2 (Gaidon et al., 2016) ZOOM (Zhang et al., 2019) https://github.com/sniklaus/3d-ken-burns https://github.com/JizhiziLi/GFM https://apolloscape.auto/ https://github.com/apple/ARKitScenes https://bedlam.is.tue.mpg.de/#data https://github.com/YoYo000/BlendedMVS https://cvlab-unibo.github.io/booster-web/ https://github.com/TRI-ML/DDAD https://dimlrgbd.github.io/ https://xuebinqin.github.io/dis/index.html https://github.com/Abdullah-Ab...pixel https://github.com/facebookres...stereo https://lhoangan.github.io/eden/ https://www.eth3d.net/ https://data.csail.mit.edu/graphics/fivek/ https://kexianhust.github....Ranking-Loss/ https://github.com/apple/ml-hypersim https://www.asg.ed.tum.de/lmf/ibims1/ https://github.com/HKBU-HPML/IRS https://www.cvlibs.net/datasets/kitti/ https://vision.middlebury.edu/stereo/data/ https://phuang17....mvs-synth.html https://cs.nyu.edu/...v2.html https://www.nuscenes.org/ https://github.com/JizhiziLi/P3M https://github.com/csjliang/PPR10K http://loki...download.html https://sites.google.com/site/redwebcvpr18/ https://sailvos.web.illin...index.html http://www.scan-net.org/ http://sintel.is.tue.mpg.de/ https://mobile...SmartPortraits/ https://github.com/h4nwei/SPAQ https://spring-benchmark.org/ https://rgbd.cs.princeton.edu/ https://synscapes.on.liu.se/ https://theairlab.org/tartanair-dataset/ https://osf.io/64532/ https://github.com/fabiotosi92/SMD-Nets https://unsplash.com/data https://www.urbansyn.org/ https://europe.naverlabs.com...-worlds/ https://github.com/ceciliav...inference License CC-BY-NC-SA 4.0 Custom Custom Custom Custom CC BY 4.0 CC BY NC 4.0 CC-BY-NC-SA 4.0 Custom Custom MIT CC BY-NC 4.0 Custom CC-BY-NC-SA 4.0 Custom Custom Custom Custom Custom CC-BY-NC-SA 3.0 Custom Custom Custom Custom Custom Apache 2.0 Custom Custom Custom Custom Custom Custom Custom CC BY 4.0 Custom Custom CC BY 4.0 CC BY 4.0 Custom Custom CC BY-SA 4.0 CC BY-NC-SA 3.0 - Usage Train Testing Val Train Train Train Test Testing Train Test Testing Train Train Testing Testing Train, Val Train, Val Test Train Testing Testing Train Testing Testing Testing Testing Testing Train Train Train Testing Train Testing Testing Testing Train Train Train Train Testing Train Train Testing"
        },
        {
            "title": "Preprint",
            "content": "Table 14: Depth Pro model training hyperparameters."
        },
        {
            "title": "Epoch length\nSchedule\nLR for Encoder\nLR for Decoder\nBatch size\nOptimizer\nWeight decay\nClip gradient norm\nPretrained LayerNorm",
            "content": "Stage 1 250 Stage 2 100 72000 1 % warmup, 80 % constant LR, 19 % 0.1 LR 1.28e-5 1.28e-4 128 Adam 0 0.2 Frozen Random color change probability Random blur probability Center crop probability for FOV-augmentation Metric depth normalization 75 % 30 % 50 % CSTM-label (Yin et al., 2023)"
        },
        {
            "title": "Number of channels for Decoder\nResolution",
            "content": "DepthPro model structure: Image-Encoder resolution Patch-Encoder resolution Number of 384384 patches in DepthPro Intersection of 384384 patches in DepthPro 256 15361536 384384 384384 35 25 % Table 15: Training loss functions for different datasets and stages."
        },
        {
            "title": "Loss function",
            "content": "Stage 1 MAE SSI-MAGE MAE (trimmed = 20 %) SSI-MAE SSI-MAGE"
        },
        {
            "title": "Datasets",
            "content": "Hypersim, Tartanair, Synscapes, Urbansyn, Dynamic Replica, Bedlam, IRS, Virtual Kitti2, Sailvos3d ARKitScenes, Diml Indoor, Scannet, Smart Portraits UnrealStereo4k, 3D Ken Burns, Eden, MVS Synth SSI-MAE (trimmed = 20 %) HRWSI, BlendedMVG Stage MAE, MSE, MAGE, MALE, MSGE Hypersim, Tartanair, Synscapes, Urbansyn, Dynamic Replica, Bedlam, IRS, Virtual Kitti2, Sailvos3d Tab. 16 lists our evaluation datasets, the range of depth values used for evaluation, the number of samples, and the resolution of the ground truth depth maps. In case method predicted depth maps at different resolution, we resized predictions bilinearly to match the ground truth resolution. Since several factors outlined above can affect the reported accuracy of method, few baselines report sufficient detail on their evaluation setup, and the exact evaluation setups may differ across baselines, it is generally impossible to exactly reproduce reported results while guaranteeing fairness. We prioritized fair comparison and tried to evaluate all baselines in the same environment. We were able to match most reported results, with the following three notable differences. ZeroDepth reported better results on nuScenes, which we attribute to the use of different validation set in their"
        },
        {
            "title": "Preprint",
            "content": "Table 16: Dataset evaluation setup.For each metric depth dataset in our evaluation, we report the range of valid depth values, number of samples, and resolution of ground truth depth maps. Due to the large size of the validation set (approximately 35K samples), we used randomly sampled subset of NuScenes. Dataset Booster ETH3D iBims Middlebury NuScenes Sintel Sun-RGBD Minimum distance (m) Maximum distance (m) Number of Samples Depth Resolution (px) 0.001 0.100 0.100 0.001 0.001 0.010 0.001 10 200 10 10 80 80 10 228 454 100 15 881 1064 5050 3008 4112 4032 6048 480 640 1988 2952 900 1600 436 1024 530 730 evaluation. UniDepth reported different results on ETH3D, which we attribute to the handling of raw images; specifically, in our setup, we use the raw images without any post-processing, and take the intrinsics from the accompanying EXIF data; we believe this best adheres to the zero-shot premise for single-image depth estimation. Finally, on SUN-RGBD, Depth Anything fairs better in our evaluation setup than in the evaluation reported in the original paper. Evaluation metric for sharp boundaries. For both our depth-based and mask-based boundary metrics, we apply the same weighted-averaging strategy to account for multiple relative depth ratios. F1 values (depth-based metrics) and Recall values (mask-based metrics) are averaged across thresholds that range linearly from tmin = 5 to tmax = 25. Weights are computed as the normalized range of threshold values between tmin and tmax, such that stronger weights are given towards high threshold values."
        },
        {
            "title": "D A P P L I C AT I O N S",
            "content": "Metric, sharp, and fast monocular depth estimation enables variety of downstream applications. We showcase the utility of Depth Pro in two additional contexts beyond novel view synthesis: conditional image synthesis with ControlNet (Zhang et al., 2023b) and synthetic depth of field (Peng et al., 2022a). Depth-conditioned image synthesis. In this application we stylize an image through text prompt via ControlNet (Zhang et al., 2023b). To retain the structure of the input image, we predict depth map from the input image and use it for conditioning the image synthesis through pre-trained depth-to-image ControlNet SD 1.5 model. Figure 11 shows the input image, prompt, and predicted depth maps and synthesis results for Depth Pro, Deoth Anything v2, Marigold, and Metric3D v2. We find that only Depth Pro accurately predicts the cables and sky region, resulting in stylized image that retains the structure of the input image. Baselines either miss cables, causing the cable car to float mid-air (Depth Anything v2), or add gradient to the sky (Marigold). Synthetic depth of field. Synthetic depth of field can be used to highlight the primary subject in photo by deliberately blurring the surrounding areas. BokehMe (Peng et al., 2022a) introduces hybrid rendering framework that marries neural renderer with classical physically motivated renderer. This framework takes single image along with depth map as input. In this context, it is essential for the depth map to delineate objects well, such that the photos subject is kept correctly in focus while other content is correctly blurred out. Furthermore, the depth map should correctly trace out the details of the subject, to deep these (and only these) details correctly in focus. Figure 12 shows the advantage afforded by Depth Pro in this application. (We keep the most salient object in focus by setting the refocused disparity (disp focus) hyperparameter of BokehMe as the disparity of the object.) 31 Prompt: watercolor image of cable-car."
        },
        {
            "title": "Preprint",
            "content": "t I h D 2 i n p l r 2 3 t M Figure 11: Comparison on conditional image synthesis. We use ControlNet (Zhang et al., 2023a) to synthesize stylized image given prompt (top row, right) and depth map. The depth map is predicted from the input image (Li et al., 2022a) (top row, left) via Depth Pro, and baselines. The left column shows depth maps, the right column the synthesized image. For the baselines, missing cables (Depth Anything v2 & Matric3D v2) or spurious gradient in the sky (Marigold) alter the scene structure of the synthesized image."
        },
        {
            "title": "Preprint",
            "content": "Depth Pro (Ours) Marigold Depth Anything v2 Depth Pro (Ours) Marigold Depth Anything Figure 12: Comparison on synthetic depth of field. We compare the synthetic depth of field produced by BokehMe (Peng et al., 2022a) using depth maps from Depth Pro, Marigold (Ke et al., 2024), and Depth Anything v2 (Yang et al., 2024a). Zoom in for detail."
        }
    ],
    "affiliations": []
}