{
    "paper_title": "Exact Coset Sampling for Quantum Lattice Algorithms",
    "authors": [
        "Yifan Zhang"
    ],
    "sections": [
        {
            "title": "Abstract",
            "content": "We give a simple, fully correct, and assumption-light replacement for the contested \"domain-extension\" in Step 9 of a recent windowed-QFT lattice algorithm with complex-Gaussian windows~\\citep{chen2024quantum}. The published Step~9 suffers from a periodicity/support mismatch. We present a pair-shift difference construction that coherently cancels all unknown offsets, produces an exact uniform CRT-coset state over $\\mathbb{Z}_{P}$, and then uses the QFT to enforce the intended modular linear relation. The unitary is reversible, uses $\\mathrm{poly}(\\log M_2)$ gates, and preserves the algorithm's asymptotics. Project Page: https://github.com/yifanzhang-pro/quantum-lattice."
        },
        {
            "title": "Start",
            "content": "5 2 0 2 5 1 ] - u [ 1 1 4 3 2 1 . 9 0 5 2 : r a"
        },
        {
            "title": "Exact Coset Sampling for\nQuantum Lattice Algorithms",
            "content": "Yifan Zhang Princeton University yifzhang@princeton.edu September 17, 2025 Abstract We give simple, fully correct, and assumption-light replacement for the contested domainextension in Step 9 of recent windowed-QFT lattice algorithm with complex-Gaussian windows [Chen, 2024]. The published Step 9 suffers from periodicity/support mismatch. We present pair-shift difference construction that coherently cancels all unknown offsets, produces an exact uniform CRT-coset state over ZP , and then uses the QFT to enforce the intended modular linear relation. The unitary is reversible, uses poly(log M2) gates, and preserves the algorithms asymptotics. Project Page: https://github.com/yifanzhang-pro/quantum-lattice."
        },
        {
            "title": "Introduction",
            "content": "Let D, p1, . . . , pκ be odd, pairwise coprime, and set := κ (cid:89) η=1 pη, M2 := D2P. In the algorithm from [Chen, 2024], the state of the registers immediately before the contested Step 9 is ϕ8.f = (cid:88) α(j) (cid:12) (cid:12) 2D2j 1 (cid:12) (cid:12) 2D2j [2..n] + [2..n] mod M2 (cid:11), (1.1) jZ 2πi where α(j) = M2 1 = p2 pκ, = (b steps.1 Here, entries, with the constraint that that satisfies the modular linear relation (aj2+bj+c) is known quadratic phase arising from the preceding windowed-QFT n) Zn, and the offset vector Zn has unknown 1 = 0. The goal of Step 9 is to generate random vector Zn M2 1, . . . , b, 0 (mod ), (1.2) from which the hidden data is recovered by linear algebra (cf. Eq. (41) in Chen [2024]). 1The sum over is normalizable due to an implicit finite window from the windowed-QFT stage; global normalization factors are omitted as they do not affect our arguments. 1 The published version of Step 9 attempts domain extension on the first coordinate only. This approach, as noted by the original author, misuses amplitude periodicity and results in state with support of the incorrect size. Our contribution. Our contribution is replacement for Step 9 that uses pair-shift difference subroutine. This method: (i) creates second, coherently shifted copy of the coordinate registers, (ii) subtracts the two to eliminate the offsets exactly, (iii) produces an exactly uniform superposition over CRT-coset indexed by ZP , and (iv) applies the QFTn to obtain (1.2). Our construction ZM2 is reversible, has gate cost of poly(log M2), and avoids the pitfalls of amplitude periodicity. Crucially, it does not require any knowledge of the residues of the unknown offset vector v."
        },
        {
            "title": "2 Preliminaries",
            "content": "Notation. For N, Zq = Z/qZ with representatives in ( is , . All modular arithmetic on registers is modulo M2 = D2P unless noted. 2 , 2 ]. Vectors are bold; inner product Quantum tools. We use standard primitives: QFTZq in poly(log q) gates, modular addition/multiplication, and phase kickback from efficiently computable arithmetic. We adopt the convention QFTZq = 1 contributes factor qn/2. All our unitaries are exactly reversible. xu u, so QFTn Zq uZq (cid:80) 2πi Injectivity condition (mild but necessary for cleanup). We will use the following natural assumption, which enables coherent coset synthesis by allowing us to uncompute the shift parameter from the difference register. Without it, cannot be erased from the rest of the state, and Fourier sampling on alone becomes uniform over Zn (i.e., it does not enforce (1.2) with constant success probability). M2 Definition 2.1 (Residue accessibility). For each prime factor pη of , there exists coordinate i(η) {1, . . . , n} such that the entry i(η) is not multiple of pη, i.e., i(η) 0 (mod pη). This condition holds with overwhelming probability for the lattice instances considered in Chen [2024]; any given instance can be checked efficiently, and coordinates can be permuted if necessary. It implies that the map (cid:55) (mod ) from ZP to (ZP )n is injective. To see this, if 0 (mod ), then for each η, the condition i(η) 0 (mod pη) forces 0 (mod pη). By the Chinese Remainder Theorem, this implies 0 (mod )."
        },
        {
            "title": "3 The new Step 9†: pair-shift difference and exact coset synthesis",
            "content": "3."
        },
        {
            "title": "Idea in one line",
            "content": "Make second copy of the coordinate registers, coherently shift it by uniform ZP along the direction, and subtract. The subtraction cancels the unknown offsets and leaves clean difference register 2D2T (mod M2). Because is uniform, this is an exactly uniform superposition over = ZD2 ZP ) indexed by . cyclic coset of order (the ZP -fiber in the CRT decomposition ZM2 QFT on this coset yields (1.2) exactly, by plain character orthogonality."
        },
        {
            "title": "3.2 The unitary\nWe begin with the input state |ϕ8.f ⟩ from (1.1). We append registers Y ∈ (ZM2)n (initially |0⟩),\nand a register for T ∈ ZP , prepared in the uniform superposition 1√\nor\nP\nwith CRT wiring).\nby independent QFTZpη\nStep 9†.1 (copy). Use CNOT or modular addition gates to coherently copy the coordinate registers\ninto Y. This basis-state copying does not violate the no-cloning theorem.",
            "content": "t e.g., via QFTZP tZP (cid:80) α(j) X(j) 0 (cid:55) (cid:88) α(j) X(j) X(j) , (cid:88) (cid:1) modulo M2. where for brevity we write X(j) := (cid:0)2D2j 1 Step 9.2 (coherent -shift along b). Add 2D2 to coordinatewise: [2..n] + (cid:12) (cid:12) 2D2j [2..n] X(j) T (cid:55) X(j) + 2D2T T . This maps to (cid:0)2D2(j + )b [2..n] + Step 9.3 (difference; offset cancellation). Compute the coordinatewise difference := (mod M2) into fresh n-register block: 1 2D2(j + )b [2..n] (cid:1). (mod M2). By construction, = 2D2T (mod M2), (3.1) and in particular the unknown offsets cancel exactly. Step 9.4 (mandatory ancilla cleanup; explicit reversible sequence). The residue accessibility assumption (Definition 2.1) ensures that can be computed as function of mod . For each prime factor pη of , we choose an index i(η) with i(η) 0 (mod pη) and compute the residue (cid:0)2D2 i(η) (cid:1)1 Zi(η) (mod pη), which are then recombined using the CRT to recover ZP . Now perform the following reversible steps: (i) zero the original by modular subtraction ; (ii) undo the shift on using : 2D2T (so = X); (iii) uncopy by applying the inverse of Step 9.1 to map (X, Y) (cid:55) (X, 0); (iv) erase by applying the inverse of its computation from Z; and (v) discard the register into the junk factor, as it is independent of and will not be used again. After these actions the global state factorizes with coherent superposition on Z.2 After Step 9.4 we have the factorized state α(j) junk(j) (cid:19) (cid:18) (cid:88) 1 (cid:88) ZP (cid:12) (cid:12) 2D2T mod M2 (cid:12) (cid:69) , (3.2) where junk(j) denotes registers independent of that we will never touch again. 2This cleanup is necessary for correctness: if remains entangled with Z, then applying QFTn ZM2 to alone yields flat distribution over Zn M2 , not the constrained distribution supported on (1.2). 3 Fourier sampling. Apply QFTn ZM2 distribution is analyzed next. to the Z-register and measure Zn M2 . The outcome"
        },
        {
            "title": "3.3 Exact correctness",
            "content": "Lemma 3.1 (Exact orthogonality from CRT-coset). Consider the uniform superposition over the CRT-coset generated by b: Ψ = 1 (cid:88) ZP 2D2T mod M2 . After QFTn ZM2 , the amplitude of Zn M2 is A(u) = 1 (cid:112)M 1 1 (cid:88) =0 exp (cid:16) 2πi (cid:10) 2D2T b, u(cid:11)(cid:17) = 1 (cid:112)M 2 1 1 (cid:88) (cid:16) exp 2πi (2) b, (cid:17)T . =0 Hence A(u) = 0 unless b, 0 (mod ), in which case A(u) = (up to global phase). Consequently the measurement outcomes are exactly supported on (1.2) and are uniform over that set; indeed, /M n/2 2 #{u (ZM2)n : b, 0 (mod )} = 2 . Proof. Let := exp(cid:0) 2πi M2 mod . Thus = 1 iff b, 0 (mod ). The sum (cid:80)P 1 multiplying by the prefactor n/2 (2D2) b, u(cid:1) = exp(cid:0) 2πi 2 b, u(cid:1). Because is odd, 2 is invertible =0 rT is if = 1 and 0 otherwise; 1/2 gives the stated amplitude magnitude. 2 Theorem 3.2 (Step 9 is correct). Assume Definition 2.1. Starting from (1.1), the unitary Steps 9.19.4 produce the factorization (3.2). Applying QFTn to the Z-register and meaZM2 suring yields Zn uniformly distributed over the solutions of (1.2). The offsets and the quadratic phases α(j) do not affect the support or uniformity of the measured u. M2 Proof. Eq. (3.1) shows depends only on , not on or v. Under Definition 2.1, Step 9.4 erases and yields the factorization (3.2); the part carrying α(j) is in registers disjoint from Z. By Lemma 3.1, Fourier sampling of yields (1.2) uniformly. Neither nor α(j) enters that calculation. (i) No amplitude periodicity is used anywhere. Remarks. (ii) The offsets are canceled exactly by construction; no knowledge of their residues is required. (iii) The residue accessibility condition (Definition 2.1) is operationally necessary. It enables the erasure of from the rest of the state, which ensures that coherent uniform coset forms on the register. Without it, the Fourier sampling step would fail, as discussed in 6."
        },
        {
            "title": "3.4 Algorithmic summary (drop-in Step 9†)",
            "content": "Algorithm 1 Step 9: Pair-shift difference and QFT Require: Registers (ZM2)n in the state X(j) as in (1.1). 1: Prepare ancilla (ZM2)n in 0 and ZP in 1 t. tZP 2: Copy (bitwise modular add for basis states): 0 (cid:55) X. 3: Shift: T (cid:55) + 2D2T T (mod M2). 4: Difference: allocate (mod M2). 5: Ancilla Cleanup (required) Compute (Z) via residues and CRT; set ; set 2D2T b; uncopy (X, Y) (cid:55) (X, 0); uncompute from Z. (These steps leave unchanged, and becomes part of the junk factor.) to Z; measure Zn 6: Apply QFTn . ZM2 7: Output u; by Theorem 3.2 (given Definition 2.1), it satisfies b, 0 (mod ). (cid:80) M"
        },
        {
            "title": "4 Why the construction works",
            "content": "Offset cancellation. Writing explicitly X(j) = (cid:0)2D2j 1 (cid:12) (cid:12) 2D2j [2..n] + [2..n] (cid:1), X(j + ) = (cid:0)2D2(j + ) (cid:12) (cid:12) 2D2(j + ) [2..n] + [2..n] (cid:1), the difference X(j) X(j + ) 2D2T (mod M2) removes identically. Exact CRT coset. After the cleanup Step 9.4 (which erases from the rest), the uniform -superposition induces coherent uniform superposition of length on via the map (cid:55) 2D2T mod M2. No amplitude reweighting is needed. Correct orthogonality argument. Unlike derivations that sum terms of M2-th roots of unity without ensuring the sum collapses correctly, our construction handles this carefully. The key is that the phase factor contains the term 2D2. As result, for any u, the base of the geometric sum satisfies rP = exp(cid:0) 2πi 2D2P b, u(cid:1) = 1 always, and the sum collapses exactly to 0 or M2 depending on b, (mod )."
        },
        {
            "title": "5 Complexity and resources",
            "content": "Gates and ancillae. Copying registers and reversible modular additions/multiplications over ZM2 use O(poly(log M2)) gates. The shift by 2D2T costs O(n poly(log M2)). Computing = is linear time in n. Uncomputation of uses κ modular inversions in Zpη and one CRT recombination, i.e., O(κ poly(log )). The QFTn costs O(n poly(log M2)). ZM2 Asymptotics. The subroutine preserves the overall asymptotic time and success probability of the pipeline in Chen [2024]. No amplitude amplification is required; the support is exact."
        },
        {
            "title": "6 Discussion and variants",
            "content": "No reliance on amplitude periodicity or phase flattening. Our construction does not rely on amplitude periodicity or any phase flattening techniques. All dependence on and on is confined to registers that are disjoint from Z, so they play no role in the Fourier sampling. If Definition 2.1 fails for some prime pη, then the map (cid:55) If residue accessibility fails. (mod ) has nontrivial kernel and is not function of mod . In that case one cannot coherently erase from the rest; Fourier sampling on alone becomes uniform over Zn and does not enforce (1.2). Two standard workarounds are: (i) enforce only modulo the product of primes where accessibility holds (and handle the remaining primes by an auxiliary direction or re-basis), or (ii) postselect on = 0 after an inverse QFT on the -register; this succeeds with probability at least 1/P , and exactly 1/P when the map (cid:55) 2D2t (mod M2) is injective (e.g., under Definition 2.1). We adopt Definition 2.1 so that the main subroutine achieves the claimed guarantee deterministically (up to measurement randomness). M2 Alternative modulus choices. Our method can be adapted if direct QFTZP is preferred. The state in the register can be mapped bijectively to new register containing = (when on this register would then yield the same support condition (1.2). Definition 2.1 holds). QFTZP"
        },
        {
            "title": "7 Conclusion",
            "content": "We presented reversible Step 9 that (i) cancels unknown offsets exactly, (ii) synthesizes coherent, uniform CRT-coset state without amplitude periodicity, and (iii) yields the intended modular linear relation via an exact character-orthogonality argument. The subroutine is simple to implement, asymptotically light, and robust. We expect the pair-shift difference pattern to be broadly useful in windowed-QFT pipelines whenever unknown offsets obstruct clean CRT lifting."
        },
        {
            "title": "Acknowledgment",
            "content": "I am grateful to all who provided constructive discussions and helpful feedback."
        },
        {
            "title": "References",
            "content": "Yilei Chen. Quantum algorithms for lattice problems. Cryptology ePrint Archive, 2024."
        },
        {
            "title": "A Proof of State Factorization",
            "content": "For completeness, we show that the state after cleanup (Step 9.4) factors as claimed, and we contrast it with the pre-cleanup mixed state on Z. Let the joint state after Step 9.2 be Φ2 = 1 (cid:88) (cid:88) tZP α(j) X(j)X X(j) + 2D2t bY tT . Computing gives Φ3 = 1 (cid:88) (cid:88) α(j) 2D2t bZ X(j)X X(j) + 2D2t bY tT . Tracing out (X, Y, ) at this point leaves the mixed state ρZ = 1 (cid:88) tZP 2D2t b2D2t , since the different t-branches are orthogonal in the -register. Under Definition 2.1, Step 9.4 computes from mod and uncomputes the original -register (and X, Y), yielding the factorized pure state (cid:18) (cid:88) α(j) junk(j) (cid:19) 1 (cid:88) tZP 2D2t bZ , which is exactly (3.2). j"
        },
        {
            "title": "B Gate skeleton for the shift and difference",
            "content": "Each coordinate uses the same pattern (we suppress the index): 1. Copy: CNOTs (or modular adds) from into . 2. Shift: add 2D2b into via controlled modular adder with precomputed 2D2b (mod M2). 3. Difference: set using modular subtractor; this can overwrite if desired. 4. Cleanup (required): compute (Z) by taking (2D2b)1Z (mod pη) on suitable coordinates and recombining with CRT; set ; set 2D2b ; apply the inverse of the copy to clear ; uncompute from Z. (All steps preserve Z.)"
        }
    ],
    "affiliations": [
        "Princeton University"
    ]
}