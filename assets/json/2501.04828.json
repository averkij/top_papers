{
    "paper_title": "Building Foundations for Natural Language Processing of Historical Turkish: Resources and Models",
    "authors": [
        "Şaziye Betül Özateş",
        "Tarık Emre Tıraş",
        "Ece Elif Adak",
        "Berat Doğan",
        "Fatih Burak Karagöz",
        "Efe Eren Genç",
        "Esma F. Bilgin Taşdemir"
    ],
    "sections": [
        {
            "title": "Abstract",
            "content": "This paper introduces foundational resources and models for natural language processing (NLP) of historical Turkish, a domain that has remained underexplored in computational linguistics. We present the first named entity recognition (NER) dataset, HisTR and the first Universal Dependencies treebank, OTA-BOUN for a historical form of the Turkish language along with transformer-based models trained using these datasets for named entity recognition, dependency parsing, and part-of-speech tagging tasks. Additionally, we introduce Ottoman Text Corpus (OTC), a clean corpus of transliterated historical Turkish texts that spans a wide range of historical periods. Our experimental results show significant improvements in the computational analysis of historical Turkish, achieving promising results in tasks that require understanding of historical linguistic structures. They also highlight existing challenges, such as domain adaptation and language variations across time periods. All of the presented resources and models are made available at https://huggingface.co/bucolin to serve as a benchmark for future progress in historical Turkish NLP."
        },
        {
            "title": "Start",
            "content": "5 2 0 2 8 ] . [ 1 8 2 8 4 0 . 1 0 5 2 : r BUILDING FOUNDATIONS FOR NATURAL LANGUAGE PROCESSING OF HISTORICAL TURKISH: RESOURCES AND MODELS Saziye Betül Özates* Bogaziçi University saziye.ozates@bogazici.edu.tr Tarık Emre Tıras Bogaziçi University tarik.tiras@std.bogazici.edu.tr Ece Elif Adak Bogaziçi University ece.adak@std.bogazici.edu.tr Berat Dogan Bogaziçi University berat.dogan@std.bogazici.edu.tr Fatih Burak Karagöz Bogaziçi University fatih.karagoz@std.bogazici.edu.tr Efe Eren Genç Bogaziçi University efe.genc@std.bogazici.edu.tr Esma F. Bilgin Tasdemir Medeniyet University esmabilgin.tasdemir@medeniyet.edu.tr"
        },
        {
            "title": "ABSTRACT",
            "content": "This paper introduces foundational resources and models for natural language processing (NLP) of historical Turkish, domain that has remained underexplored in computational linguistics. We present the first named entity recognition (NER) dataset, HisTR and the first Universal Dependencies treebank, OTA-BOUN for historical form of the Turkish language along with transformer-based models trained using these datasets for named entity recognition, dependency parsing, and part-of-speech tagging tasks. Additionally, we introduce Ottoman Text Corpus (OTC), clean corpus of transliterated historical Turkish texts that spans wide range of historical periods. Our experimental results show significant improvements in the computational analysis of historical Turkish, achieving promising results in tasks that require understanding of historical linguistic structures. They also highlight existing challenges, such as domain adaptation and language variations across time periods. All of the presented resources and models are made available at https://huggingface.co/bucolin to serve as benchmark for future progress in historical Turkish NLP. Keywords computational linguistics, historical Turkish, natural language processing, pre-trained language models, historical language resources *Corresponding author. These authors contributed equally to this work."
        },
        {
            "title": "Introduction",
            "content": "The rapid advancements in natural language processing (NLP), particularly driven by the success of large language models (LLMs), have significantly enhanced the automatic processing of many languages. However, the greatest benefits have been predominantly realized by widely spoken languages like English (Touvron et al., 2023). Research has largely focused on high-resource languages, while studies on historical languages using LLMs remain scarce (Manjavacas Arevalo and Fonteyn, 2022; Volk et al., 2024). This scarcity is mainly due to the difficulty in adequately representing many low-resource languages using large, data-driven models (Lai et al., 2023). Historical variants of Turkish are among these underrepresented languages from the perspective of current state-of-the-art NLP models and resources. Ottoman Turkish is the longest-lasting historical variant of the Turkish language, which eventually evolved into modern Turkish. It underwent significant changes in vocabulary and syntax over the six centuries it was in use. Most of the historical Turkish documents preserved in archives were produced during the later centuries of the Ottoman Empire.1 Accordingly, this study focuses primarily on Ottoman Turkish from the 18th to the 20th centuries, using texts predominantly from this era. Hereafter, the term historical Turkish will specifically refer to the Turkish language used during this period. The digitization efforts of historical documents are rapidly increasing, with the aim of both preserving these valuable resources and enhancing accessibility. The demand for automated analysis and information extraction from these documents is becoming more critical as these historical materials become more available in digital formats. Yet, meeting this demand is challenging without the necessary and sufficient resources in place. Historical Turkish suffers from lack of annotated data, dictionaries, and linguistic references in contrast to modern languages, which benefit from extensive linguistic resources and corpora. This shortage of resources significantly impedes the development of successful NLP models for historical Turkish. possible approach to addressing the lack of resources is to utilize existing language resources for modern Turkish, based on the fact that historical Turkish and modern Turkish are essentially different stages of the same language. However, the transition from historical Turkish to modern Turkish led to significant changes in semantics, vocabulary and grammar (Kerslake, 2021). These differences pose obstacles in applying contemporary Turkish NLP techniques directly to historical texts. Existing tools and resources for processing historical Turkish texts are scarce and often have limited capacity for comprehensive NLP tasks. There have been efforts to develop some datasets and corpora, such as question-answering dataset (Soygazi et al., 2021), multi-label text classification dataset (Gokceoglu et al., 2024), and corpus containing transcripts of Grand National Assembly of Turkey (TBMM) meetings that partially include historical Turkish texts (Güngör et al., 2018), but they remain limited in scope and scale. On the other hand, few tools developed for historical Turkish mostly address text recognition (Bilgin Tasdemir, 2023; Tasdemir et al., 2024) and Arabic-to-Latin transliteration (Jaf and Kayhan, 2021), with little to no focus on more complex NLP tasks. To the best of our knowledge, no existing studies have explored advanced NLP tasks for historical Turkish, such as named entity recognition or dependency parsing. This lack of robust and comprehensive resources highlights pressing need for the development of advanced tools and datasets to support linguistic processing and computational analysis of historical Turkish texts. In this pioneering study, we aim to make comprehensive approach to text analysis of historical Turkish from multiple perspectives and set foundational starting point for NLP of historical Turkish texts. We provide several resources and models for this purpose. Our contributions are as follows: The HisTR2 dataset: The first named entity recognition (NER) dataset for historical Turkish, comprising 812 manually annotated sentences from the 17th to the 19th centuries. The OTA-BOUN3,4 dependency treebank: The first manually annotated dependency treebank for historical Turkish. This treebank includes gold annotation of part-of-speech tags and dependency relations in 514 sentences coming from various literature works. Ottoman Text Corpus (OTC)5: clean text corpus spanning from the 15th to the 20th centuries, encompassing texts from various genres and suitable for diverse linguistic purposes. Transformer-based models trained for dependency parsing, part-of-speech tagging, and named entity recognition tasks, along with their evaluations, to serve as benchmark for future research in the NLP of historical Turkish. The release of all the resources and models presented in this study along with the text pre-processing tools for historical Turkish, which have been made publicly available.6 The rest of the paper is organized as follows: Section 2 offers review of related work on the NLP of historical Turkish. In Section 3, we introduce the resources developed in this study. Section 4 outlines the NLP tasks that we 1This statement is based on comparison of the quantities of historical documents from different periods, as preserved in the state archives of the Republic of Türkiye: https://katalog.devletarsivleri.gov.tr/ 2https://huggingface.co/datasets/bucolin/HisTR 3https://huggingface.co/datasets/bucolin/OTA-BOUN_UD_Treebank 4https://github.com/UniversalDependencies/UD_Ottoman_Turkish-BOUN/tree/dev 5https://huggingface.co/datasets/bucolin/OTC-Corpus 6https://huggingface.co/bucolin 2 focus on and explains the models trained for each task. Section 5 describes the experiments conducted and discusses the results. Finally, Section 6 concludes the paper."
        },
        {
            "title": "2 Related Work",
            "content": "Data-driven NLP systems require large amount of text. To extract text from printed documents, Optical Character Recognition (OCR) systems are typically employed, while Handwritten Text Recognition (HTR) systems are used for processing handwritten content. This section provides an overview of OCR and HTR research focused on historical Turkish documents, followed by summary of existing studies that apply NLP techniques to historical Turkish texts. One of the earliest initiatives for processing historical Turkish documets was the OTAP (Ottoman Text Archive Project) project which was jointly carried out by researchers from Bilkent University and the University of Washington between 2009 and 2012. Although some considerable research is done, the project is left unfinished. The articles on text categorization on poems(Can et al., 2013) and handwriting recognition (Can et al., 2010) are among the studies published within the scope of this project. After that first attempt, limited number of studies explored OCR of historical Turkish text, mostly before the deep learning era. Then, new upsurge is observed in number of works by introduction of deep learning techniques. For example, CNN-LSTM model, trained on combination of synthetic and real data, achieved an 88.86% character recognition accuracy and 64% word recognition accuracy on test set of printed Naskh line images extracted from 21 pages (Dolek and Kurt, 2022). With similar setting, an open vocabulary system was developed by Tasdemir (2023). character error rate (CER) of 11% is reported on synthetic data and 16% CER on real images. Aydemir et al. (2014) proposed an RNN-based system for recognizing handwritten word images from population registration documents. This system achieved 12.4% character error rate and 22.1% word error rate on small test set of 1,000 different words. An automatic system for transcribing historical Turkish documents into modern Turkish alphabet is proposed by Tasdemir et al. (2024) which obtained 6.59% CER and 28.46% word error rate (WER) on test set of 6, 828 text lines. As can be seen from the reported results, the error rates of the OCR and HTR systems are relatively high. The noise in transcriptions and digitized texts produced by these systems pose another challenge for any NLP task to be performed on them. Recently, some commercial tools for accessing content of historical Turkish documents have emerged. For instance, transcription system for printed text is built on Transkribus (Colutto et al., 2019), by fine-tuning an existing model with manually annotated Ottoman printed text (Kirmizialtin, 2019). Another system is designed for keyword search within predefined collection of historical Turkish documents (Miletos, 2022). thorough evaluation of these commercial systems is challenging due to the limitations imposed by their free versions. Works on NLP for historical Turkish are really scarce, compared to those that have been conducted on other historical languages (Fokkens et al., 2014; Sprugnoli and Tonelli, 2019; Lai et al., 2021; Zilio et al., 2024). There are few studies considering the text classification problem. One notable study (Can et al., 2013) focused on automatic categorization of Ottoman poems according to their poets and time periods. The authors utilized two statistical machine learning approaches, Naive Bayes and Support Vector Machines, to classify poems by poet and time period. Their SVM-based approach achieved 88.89% accuracy in the poet classification and 89.19% accuracy in the time period classification on collection of Ottoman literary texts from ten poets and five consecutive centuries. Recently, Gokceoglu et al. (2024) presented text classification dataset of articles in both Ottoman and Russian spanning the late 19th and early 20th centuries. The dataset contains historical Turkish articles in Perso-Arabic script but does not include their Latin-script versions. The authors trained Llama-2 (Touvron et al., 2023), Falcon (Almazrouei et al., 2023), and mBERT (Devlin et al., 2019) models on this dataset for multi-level text classification. They also compared the simple bag-of-words Naive Bayes (BoW-NB) method with these large models and observed that BoW-NB is comparable to these large models in low-resource setting. They reported the best F1 score on their first-level single-label classification dataset as 77.65% achieved by the mBERT model, while the best F1 score on the second-level single-label classification dataset was reported as 83.84% achieved by the BoW NB model. There are several attempts for automatic transliteration of Ottoman texts. Kurt and Bilgin (2012) used number of language processing techniques including morphologic parsing and word disambiguation by Finite State Machine-based system. neural approach that use Recurrent Neural Network encoder-decoder architecture for machine translation of modern and historical Turkish was proposed by Al Nahas et al. (2019). They report BLEU score of 33.8 points by using data-driven approach for aligning source and target word vectors. As is obvious from the review of the literature, most of the existing work on historical Turkish documents focus on text recognition. Furthermore, there are few studies concentrated on some narrow aspects of the NLP for historical 3 Turkish text with limited scope and scale. In this work, we not only provide gold annotated resources for historical Turkish but also establish baseline by training models for three different NLP tasks: named entity recognition, dependency parsing, and part-of-speech (POS) tagging."
        },
        {
            "title": "3 Resources for Historical Turkish NLP",
            "content": "Given the extreme scarcity of NLP resources for historical Turkish, our first step is to create and annotate essential datasets and corpora required for automatic text analysis. We manually developed named entity recognition dataset and dependency treebank following the UD annotation scheme for historical Turkish. These datasets were evaluated on named entity recognition, dependency parsing, and part-of-speech tagging tasks, as explained in Section 4. Additionally, we compiled corpus of transliterated historical Turkish texts that can be utilized for various linguistic purposes. The following subsections introduce these three resources in detail. 3.1 HisTR: Historical Turkish NER Dataset We created NER dataset manually using subset of sentences from issues of Servet-i Funun journal (from now on it will be referred to as SF), historical magazine published between 1896-1901. It covers wide range of topics including literature, science, daily life and world news. We used sentences sampled through research project conducted between 2016-2019 in Bogaziçi University (Uysal, 2019). The project aims to give general view of the periodical by providing original images of pages and transcriptions of some selected sentences. The original script used in the journal is based on Arabic alphabet while the transcriptions of the sentences are written with the modern Turkish alphabet. Figure 1 shows an original page from the journal and transcription of an excerpt. Figure 1: Transcription of an excerpt from the original document which is written with the Perso-Arabic script. To create the HisTR dataset, we first annotated 662 sentences from the SF periodicals which were published between the late 19th century and the beginning of the 20th century. Subsequently, to ensure more objective evaluation of the 4 Partition Training set Development set Ruznamçe test set Total Table 1: Partitions in the HisTR dataset # of Sentences PERSON Counts LOCATION Counts 462 200 150 812 264 122 265 584 210 216 1,010 developed models, we annotated an additional 150 sentences from collection of Ruznamçe7 registers from the 17th century. The selection criteria of the sentences from Ruznamçe documents is mainly based on diversity in expressions. The language feautures of this test set is different from the remaining of the dataset which makes the dataset more challenging in terms of automatic processing. The whole dataset contains 812 sentences, 651 PERSON tags, and 1,010 LOCATION tags.8 We use the following definitions for the entity types: PERSON: People, including fictional LOCATION: GPE and Non-GPE locations including countries, cities, states, mountain ranges and bodies of water. The inter-annotator agreement (IAA) was measured as 0.82 in the manual annotation process. The data was prepared in CoNLL-2003 format with multiple word entities marked with Band Iprefixes. Table 1 shows the partitions in the dataset together with some statistics. 3.2 OTA-BOUN: Universal Dependencies Treebank for Historical Turkish We created the first dependency treebank for historical Turkish as part of the Universal Dependencies Project (Nivre et al., 2017). The annotated sentences were added in two writing styles in the treebank; i) written with the Latin-based Turkish alphabet, and ii) written with the Perso-Arabic alphabet. The sentences were sampled from eight texts by seven distinct writers. All of the texts are from the literature published between 1880 and 1928. There are two articles, two excerpts from historical text, three stories, and one excerpt from novel in the collection. Compiling treebank from these historically varied texts poses several annotation challenges. Inconsistent spelling arises from shifting orthographic conventions, while specialized or archaic terminology no longer part of modern usage complicates morphological analysis. Further complexity comes from the varied stylistic flourishes and personal voices of different authors, each of which can affect syntax, vocabulary, and the treatment of borrowed structures. Inconsistent punctuation also obscures sentence boundaries, requiring extra caution during segmentation. Additionally, the reanalysis of loanwords from Arabic and Persian introduces morphological and semantic ambiguities not always predictable from their roots. Finally, shortage of standardized references for this historical corpus often necessitates consulting older dictionaries and patchwork resources to accurately parse, interpret, and annotate these texts. detailed discussion of these and other issues, along with our strategies for addressing them, is provided in Section 3.2.3. 3.2.1 Annotation Scheme For the annotation of the historical Turkish treebank, we engaged two expert annotators who are linguists with indepth knowledge of Turkish grammar, general linguistics and grammatical theory. Two senior computer scientists possessing significant expertise in both NLP and historical Turkish teamed up with the experts in annotation task. At this stage, we manually annotated both dependency relations and part-of-speech tags for 514 sentences. We applied double annotation to randomly selected subset of 50 sentences. Using Cohens kappa for dependency labels, we assessed inter-annotator agreement as 0.85. The unlabeled and labeled attachment scores were determined to be 82.20% and 76.91%, respectively. The remaining annotations were completed independently by each annotator. Once one annotator completed his/her assigned sections, the annotated sentences were reviewed by the annotation team and any discrepancies were resolved through discussion. 7These documents contain records regarding appointments of judges (i.e. qadi), describing the current and next places of appointments and some other details. 8We experimented with these two tags only because the number of other tags were not enough to make useful training data. 5 We followed the annotation conventions of the Universal Dependencies (UD) in most cases, but we also consulted the Suggested UD Guidelines for Turkish9 when needed. In line with the UD framework, the annotated data was saved in CoNLL-U format. Figure 2 illustrates this format using an annotated sentence from our treebank. We preserve the original Perso-Arabic script version of the data and present the text in both formats. The tokens in Latin script appear in the second column, whereas their Arabic equivalents are displayed in the final column. Figure 2: CoNLL-U Representation of an example sentence from our OTA-BOUN historical Turkish treebank. 3.2.2 Treebank Statistics The dependency relations, along with their counts and percentages, and basic statistics about the historical Turkish treebank are presented in Tables 2 and 3, respectively. Although they reflect partial statistics with respect to the final dataset we plan to annotate, these tables provide valuable insights into historical Turkish, including the average sentence length, the prevalence of specific relations, and other notable linguistic characteristics. Table 2: Some statistics of the OTA-BOUN historical Turkish treebank Features Num. of Sentences Num. of Tokens Avg. Token Count Per Sentence Num. of Unique POS Tags Num. of Unique Morphological Features Num. of Unique Dependencies The OTA-BOUN Treebank 514 8,794 17.10 16 52 40 We observe some key differences between the OTA-BOUN historical Turkish treebank and two treebanks for modern Turkish; TR-BOUN and IMST-UD when we compare them quantitatively, as shown in Table 4. Numerous Arabic and Persian borrowed words in historical Turkish appear primarily as nominal or adjectival stems that combine with Turkish light verbs (most commonly etmek, olmak, though others such as kılmak and eylemek also appear) to form predicates. Hence, relatively frequent occurrences of light verb constructions in texts that contain many borrowings are expected. Table 4 presents the frequencies of the light verb compound dependency relation in two modern Turkish UD treebanks, as well as in our historical Turkish treebank. Notably, the frequency of light verb constructions in OTA-BOUN is higher than in the other two modern Turkish treebanks. These light verb constructions appear not only as the main predicate (that is, the UD root) but also in subordinate or dependent clauses, showing up in various positions across clausal structures. They allow borrowed lexical items to function as clausal elements, pattern particularly evident in the frequency of the acl (adnominal clause) relation. As shown in Table 4, this relation is significantly more frequent in the historical Turkish treebank compared to its modern counterparts. Historical Turkish is characterized by significantly longer sentences compared to modern Turkish. As presented in Table 4, the average token count per sentence and the frequency of conj (conjunct) relation are remarkably higher than those of the modern Turkish UD treebanks. The high frequency of the UD acl relation, alongside extensive descriptive modifiers and participial structures, underscores an elaborate writing style characteristic of historical Turkish. This 9https://github.com/boun-tabi/UD_docs/blob/main/_tr/dep/Turkish_deprel_guidelines.pdf 6 Table 3: Counts and percentages of dependency relation types in the OTA-BOUN treebank Relation Type acl advcl advmod advmod:emph amod appos aux case cc cc:preconj ccomp compound compound:lvc compound:redup conj cop csubj dep det discourse Count % Relation Type Count 5 6 87 5 26 27 137 746 507 22 57 557 873 4 4 10 1207 514 7 49 dislocated 3.95 fixed 2.24 flat 4.49 goeswith 0.99 7.04 iobj 0.02 mark nmod 0.44 nmod:poss 2.92 2.59 nsubj nsubj:pass 0.14 1.36 nummod obj 0.86 obl 2.79 obl:agent 0.37 orphan 6.89 parataxis 0.54 punct 0.48 root 0.16 vocative 5.76 xcomp 0.93 348 197 396 87 620 2 39 257 228 12 120 76 246 33 607 48 42 14 508 82 % 0.06 0.07 0.99 0.06 0.30 0.31 1.55 8.47 5.75 0.25 0.65 6.32 9.91 0.05 0.05 0.11 13.70 5.83 0.08 0.56 Table 4: Comparison of historical Turkish treebank with the two most frequently used modern Turkish treebanks in terms of token and dependency metrics Avg. token count per sentence conj (%) compound:lvc (%) acl (%) TR-BOUN IMST-UD OTA-BOUN 10.01 4.96 0.90 2.64 12.41 5.66 1.0 2.78 17.10 6.89 2.79 3.95 style frequently layers nominal phrases with multiple subordinate clauses, leading to higher overall complexity. An example from our treebank showing an excessive amount of conjunct relations is given in Example 1. AMOD CONJ CONJ CONJ CONJ CONJ CONJ CONJ NMOD:POSS tatlı , sweet , bitter , acı , sevimli , dehsetli , ulvî , dûn lovely , terrifying , divine , inferior , opulent , mutantan , muhakkar ... , despised dream-PL-GEN ... rüyâların (1) PUNCT PUNCT PUNCT PUNCT PUNCT PUNCT PUNCT sweet, bitter, lovely, terrifying, divine, inferior, opulent, despised dreams 3.2.3 Challenges in the Syntactic Annotation Historical Turkish contains numerous loanwords from Arabic whose derivational structureoriginally associated with Arabic verb Forms (I, II, V, etc.)does not always align straightforwardly with their usage in historical Turkish texts. prime example is the derived word mütevaggil (cid:201) Arabic root generally conveys the sense of going far or deep into something, old Ottoman TurkishEnglish dictionaries attest nuanced meaning of mütevaggil as someone who occupies himself, implying an active engagement or absorption in particular pursuit. (cid:15)(cid:11)(cid:9)(cid:171) (cid:11)(cid:241) (cid:11)(cid:16)(cid:74)(cid:12)(cid:211), seemingly derived from Arabic Form (cid:201)(cid:11)(cid:15)(cid:170) (cid:11)(cid:9)(cid:174) (cid:11)(cid:16)(cid:75). Although the 7 This difference in meaning highlights key point: Arabic etymology alone cannot fully explain how loanwords were reanalyzed in historical Turkish. As shown in Example 2, mütevaggil here takes an instrumental complement (-ile), marking the nominal phrase felsefe ve psikoloji (philosophy and psychology) as an obligatory argument rather than as an adjunct. Thus, this specific construction encodes actively dealing with philosophy and psychology, contrasting with the reflexive or mediopassive nuances often associated with Form in Arabic. This subtle shift in meaning demonstrates that even if borrowed participle is identifiable as Form in origin, its historical Turkish usage may require different argument structures and yield semantic nuances that diverge from Arabic. Accurately determining the correct annotationfor instance, whether -ile in such cases functions as complement rather than an adjunctoften requires consulting dictionaries published during that period, since modern references rarely preserve these now-archaic or specialized senses. Verifying the original Arabic root and confirming the contemporaneous historical Turkish glosses proved vital to precise analysis of mütevaggil and other historical loanwords. The necessity of consulting historical dictionaries to confirm these morphological and semantic nuances is not without its own challenges. Many archaic senses have fallen out of use, making them unfamiliar to modern scholars; varying lexicographic sources can conflict in their glosses, complicating efforts to reconcile multiple definitions; orthographic inconsistencies and limited coverage in newer references further obscure older morphological nuances; and older dictionaries often lack explicit grammatical metalanguage, forcing researchers to infer whether marker like -ile functions as an argument or adjunct largely from context. OBJ CASE CONJ CC ... ACL COMPOUND:LVC Felsefe philosophy ve and psikoloji psychology ile INSTR mütevaggil dealing ol-an be-PTCP edib-ler litterateur-PL (2) Litterateurs who are dealing with philosophy and psychology Another notable challenge is that sentences in historical Turkish texts tend to be much longer than those in modern Turkish. As illustrated in Table 4, the average token count per sentence and the relative frequency of conjunctions are notably higher than in previously analyzed modern Turkish UD treebanks. This indicates that the historical Turkish treebank contains substantially longer sentences, with numerous elements linked together, highlighting the complexity and intricacy of sentence structure in historical texts. The length and complexity of historical Turkish sentences led to frequent parsing failures when handling longer structures, complicating the parsing process. Additionally, this complexity significantly slowed down the annotation process, as it became challenging for annotators to fully visualize and interpret the entire sentence structure, requiring more time and effort to ensure accuracy. The challenges related to the deformation of Turkish morphosyntax, the identification of historical compounds, and obsolete words in the OTA-BOUN historical Turkish treebank have already been discussed in Özates et al. (2024). We refer readers to that study for more details. 3.3 Ottoman Text Corpus: Clean Text Corpus of Historical Turkish Documents comprehensive text corpus is essential for many NLP tasks, especially for training language models specifically tailored to historical Turkish. However, there is no such corpus available for historical Turkish NLP yet. To address this gap, we developed the first comprehensive transliterated, digital text corpus for historical Turkish: Ottoman Text Corpus (OTC). OTC covers broad range in time, spanning from the 15th to the 20th century, with particular focus on the Tanzimat period (1839-1922). During this era, notable improvements were made in systematic use of punctuation, grammar simplification, and the standardization of spelling. There was also deliberate effort to minimize reliance on foreign loanwords in favor of native Turkish alternatives. The initial version (Karagöz et al., 2024) of OTC mainly consisted of two Ottoman periodicals, Sırat-ı Müstakim and Sebilürressad. It contained texts from issues published between 1908 to 1923. While this collection serves as the foundation for the corpus, we realized that it is not sufficient for fully capturing the nuanced and localized aspects of historical Turkish needed for advanced NLP utilities. This limitation could lead to overfitting in certain historical applications. To address this issue, we extended OTC by adding diverse range of literary works such as novels, bibliographies, treaties, newspapers, historical notes, and travelogues from the pre-1908 period. With the latest 8 expansion, OTC now encompasses total of 14 million tokens. Figure 3 depicts the distribution of documents in the corpus by topic and period. Figure 3: t-SNE visualization of documents in the Ottoman Text Corpus: Each point represents document, colorcoded by topic. This visualization highlights thematic clusters within the corpus and shows how topics are distributed periodically, complementing the maps representation of vocabulary diversity and topic. As can be seen from the figure, the corpus includes text documents from diverse categories and periods. In addition to the texts sourced from periodicals, the OTC corpus also includes texts from various categories such as literary works, diplomatic documents, historical chronicles, and poetry. The inclusion of texts spanning from the 15th to the 20th centuries in the corpus offers unique opportunity to observe the linguistic evolution of historical Turkish over time. However, this extensive temporal range presents challenge when using the corpus as data for adapting pre-trained language models originally developed for modern Turkish to historical Turkish via continual pre-training. Rather than aiming to develop PLM that encompasses all periods, more targeted approach would involve selecting specific portions of the corpus corresponding to particular timeframes and conducting continual pre-training on these subsets. To apply this strategy effectively, one of our future objectives is to significantly expand the volume of texts representing each historical period within the corpus. 3.3.1 Challenges in Pre-processing Creating clean and well-structured text corpus for historical Turkish poses significant challenges across various dimensions. There is lack of tools to process historical Turkish documents, particularly those in diverse styles and formats. This scarcity led us to create custom data processing tools designed to facilitate effective modeling in 9 our research.10 Our approach includes implementing targeted strategies to tackle the unique linguistic and technical challenges presented by historical Turkish. The main technical difficulty stems from PDF extraction artifacts and encoding issues. While our corpus predominantly uses transliterated texts, character representation problems persist, especially with ligatures and complex characters unique to historical Turkish. Table 5 illustrates how such issues can result in misrepresentations. Inaccuracies in letter representations not only hinder interpretation but can also produce outputs that deviate significantly from the original text. Table 5: Analysis of sample text extraction errors in digital conversion of historical Turkish documents Expected Text Dilberün her handesi bin can bagıslar asuya Extracted Text Dil-beruñ her òandesi biñ cÀn baàıslar èÀsıúa Bu mutabakatla beraber, kesf edilen eski yazıldıgı veçhile Türkçe karsılıgı lafzıdır. GÜRIZ yahut GÜRIZGAH: Bu mutabakatle beraber, kesf edilen eski ya WU J. ıS Ha Tı Ye Kef Lam Mim Nun te de yazıldıgı veçhile Türkçe karsılıgı lafzıdır. Ü ÎZ : , yâhut Ü IZ Â : HISÂB-ı CÜMEL: Ebced hisâbının diger adıdır HtSÂB-t Ü EL: Ebced hi-sâbının diger adıdır Iran sâirlerinden: Sevket Ferâhînin Iran sâirlerinden: Z j Error Analysis Diacritical Encoding Error: Unicode normalization failure in historical Turkish diacritics and characters. The system incorrectly encodes special characters ñ and À, resulting in ambiguity. Technical cause: Non-standardized Unicode point mapping for Ottoman-specific diacritics. Script Conversion Error: Critical failure in ArabicLatin script conversion pipeline. OCR systems inability to properly map Arabic script ligatures to Latin characters due to contextual shape variations. Root cause: Inadequate handling of Unicode ranges U+0600-U+06FF. Word Segmentation Error: Tokenization algorithm failure in word recognition. Improper word boundary detection caused by missing morphological analysis support. Technical impact: Loss of semantic unity in words. Character Substitution Error: Systematic misclassification of Turkish character as t. Error stems from inadequate training data representation of Turkish-specific uppercase dotted I. Technical cause: Unicode point confusion between U+0130 and U+0074. Mixed Script Error: Complete text fragmentation due to script detection failure. Systems inability to maintain consistent character encoding across different writing systems. Root cause: Inadequate handling of bi-directional text rendering. We employ regex-based static rules following Karagöz et al. (2024) to address these technical artifacts. While effective as baseline, our ongoing research highlights the need for more adaptive approach to achieve comprehensive solutions in the future. The substantial variance in error types, coupled with the inherent complexity of historical Turkish orthography, underscores the limitations of static extraction rules. Currently, to ensure that the extracted texts are accurate and consistent, we employ manual cleaning step as the final stage of the process."
        },
        {
            "title": "4 Tasks and Models",
            "content": "We trained transformer-based models for named entity recognition, dependency parsing, and part-of-speech tagging tasks specific to historical Turkish. This section provides an overview of these tasks and the models employed. 10We have made these tools and data collections open source at this link: https://github.com/Ottoman-NLP/ ottominer-public. 4.1 Named Entity Recognition Named entity recognition is an NLP technique that involves identifying and classifying named entities such as people, locations, and organizations within text data. The goal of NER is to extract meaningful information from unstructured text to help with further analysis or understanding. Applying NER to historical texts is relatively new domain in NER studies (Ehrmann et al., 2023). Actually, NER plays crucial role in document indexing, keyword searching, and information extraction from historical documents. There are many issues to be considered in the NER process: ambiguous words, variations due to abbreviations, and out-of-vocabulary words pose challenges during NER tasks . Most of the time, NER models trained on general text data may not perform well in domain-specific or specialized text, such as medical, legal, or scientific documents. As solution, such models are adapted to specific domains by fine-tuning them, which requires domain-specific training data. However, generating labeled datasets is labor-intensive and error-prone task. Recognition of named entities in historical texts is particularly difficult due to several additional reasons. One problem is the evolution of language over time, resulting in differences in spelling, grammar, and vocabulary. Similarly, the changing nature of real-world entities like political borders, city names, administrative divisions poses further challenges. Finally, in case of using an OCR system for transcription generation, recognition errors make NER of historical texts more difficult task. Creating single NER model that covers all historical periods is complex task. common approach is to generate specialized NER models and datasets tailored to historical texts. Actually, manual curation and annotation of historical data by domain experts can improve the accuracy of NER models when dealing with historical texts (Ehrmann et al., 2023). The creation of the HisTR NER dataset enables us to explore the named entity recognition task for historical Turkish texts. We employ and fine-tune transformer-based language models that have demonstrated groundbreaking performance across wide range of NLP tasks. Through series of experiments, we aim to identify the most effective NER model tailored specifically for historical Turkish. 4.2 Dependency Parsing and Part-of-Speech Tagging Dependency parsing is core NLP task that analyzes the grammatical structure of sentence to establish relationships between words. It identifies how words are connected to each other, forming tree-like structure called dependency tree. Since dependency tree of sentence consists of set of dependent-head pairs, the order of words in the sentence is not important and does not change construction of the tree. This flexibility makes dependency tree representations particularly well-suited for languages with free word order, such as Turkish, compared to constituency tree representations (Özates, 2022). Another fundamental NLP task that is closely related to dependency parsing is POS tagging. POS tagging is sequential labeling task that involves assigning part of speech (e.g., noun, verb, adjective) to each word in sentence, which helps determine the role of each word within the sentence. Accurate POS tagging can greatly improve the performance of dependency parsing, as understanding the syntactic roles of words provides essential context for establishing correct head-dependent relationships. For this reason, these two tasks have often been studied together in the literature (Dozat et al., 2017; Vilares et al., 2020; Özates et al., 2022), leading to the development of joint models that exhibit superior performance (Zhang et al., 2015; Yang et al., 2017; Zhou et al., 2020). These tasks together contribute to deeper understanding of sentence structure through syntactic analysis and are essential for variety of advanced NLP applications, including relation extraction (Tian et al., 2021), coreference resolution (Meng et al., 2023), and sentiment analysis (Dashtipour et al., 2020). Syntactic analysis of historical languages, however, is not well-explored topic. There have been few studies focusing on this problem (Keersmaekers, 2020; Grobol et al., 2022) and most of them have not reached the desired success levels due to the challenges posed by historical texts. Historical texts typically feature outdated or obsolete vocabulary and grammatical constructions, which complicate the direct application of contemporary models to them. Figure 4 illustrates the dependency trees of an example sentence in historical Turkish and its rewritten version in modern Turkish. The differences in grammatical structure between the two sentences are evident in their dependency trees. For instance, the way the subject of the sentence (Damat Ibrahim Pasa) connects to the verb differs: in the original sentence, it is linked via an oblique relation through one of its parent nodes, whereas in the modern version, it is connected directly via nominal subject relation. Another notable difference is how the subjects birthplace (Muskara) is indicated. In the original sentence, this relationship is established indirectly through connection at the root word, while in the modern version, it is conveyed more directly 11 Figure 4: Dependency tree representations of historical Turkish sentence (above) and its rewritten version in modern Turkish (below). The highlighted portions enclosed in colored circles indicate corresponding segments in the sentences. English translations of words are provided in italic within parentheses. Words of sentence that do not exist in the other sentence are underlined in the figure. English translation of the sentence: \"The late Damat Ibrahim Pasa managed to develop Muskara, his birthplace, and turn it into town, and changed its name to Nevsehir.\" using clausal modifier. These structural differences make the syntactic analysis of historical Turkish texts more challenging compared to modern Turkish texts. We employ transformer-based models for dependency parsing and POS tagging tasks, leveraging their ability to capture long-range dependencies and complex syntactic patterns. Through our experiments, we examine their adaptability to the unique linguistic challenges posed by historical texts, such as non-standard spellings, unknown vocabulary, and grammatical variations. 12 4.3 Pre-trained Language Models Given the limited size of our training data, we chose to pursue leveraging the advanced capabilities of widely used pre-trained large language models, rather than attempting to train new model from scratch with minimal amount of labeled data. To identify pre-trained models potentially suited to texts written in historical Turkish, we compared the performance of various pre-trained language models (PLMs) previously utilized for the NER and POS tagging tasks on Modern Turkish (Schweter, 2020). Among these models, BERTurk, Turkish language model utilizing the BERT architecture and pre-trained on Turkish text, achieved good performance consistently for the NER and POS-tagging tasks on various Turkish datasets. Additionally, TURNA (Uludogan et al., 2024), recently proposed T5-based encoder-decoder Turkish language model, built on the Unifying Language Learning (UL2) framework (Tay et al., 2022), was introduced for both understanding and generation tasks in Turkish. Both BERTurk and TURNA demonstrated similar performance in several NLP tasks (Uludogan et al., 2024). Hence, we utilized both models for NER tagging of historical Turkish texts. Since historical Turkish shares common vocabulary with modern Turkish, along with significant number of words that have become obsolete or have evolved to be unrecognizable in contemporary usage, we hypothesize that multilingual PLM may also be suitable for our datasets. We consider Multilingual BERT (Devlin et al., 2019) and XLM-R (Conneau et al., 2019) architectures for this aim and observe that mBERT performs slightly better than XLM-R for named entity recognition of modern Turkish in our preliminary studies. Hence, we opted to utilize mBERT as the multilingual model for our tasks. 4.3.1 Model Details BERTurk is language model specifically tailored for the Turkish language, built upon the architecture of Bidirectional Encoder Representations from Transformers (BERT). As in the architecture of the original BERT base model, BERTurk has 12 transformer layers. Each transformer layer consists of 12 attention heads and the number of hidden units is 768. total of 110 million parameters are fine-tuned during the pre-training phase on large corpus of Turkish text data, allowing the model to learn contextual representations that capture intricate syntactic and semantic relationships within the language. This architecture, similar to other BERT-based models, has been highly successful in various natural language understanding tasks and has become cornerstone for Turkish language processing research and applications. Multilingual BERT (mBERT) is variant of the BERT architecture that has been pre-trained on text data from 104 languages, making it multilingual language model. mBERT follows the same general architecture as BERT, typically with base model consisting of 12 transformer layers. Each transformer layer includes certain number of attention heads (usually 12) and hidden units (often 768). mBERT is pre-trained on vast and diverse corpus of text from numerous languages. The goal is to expose the model to wide range of languages and linguistic structures, enabling it to learn multilingual representations that capture similarities and differences between languages. The mBERT model is particularly valuable for multilingual natural language processing tasks, as it can be fine-tuned for various downstream applications in different languages without the need for language-specific pre-trained models. Its ability to understand and generate text in multiple languages has made it useful tool in cross-lingual and multilingual applications. TURNA is Turkish language model built on the T5 architecture (Raffel et al., 2020), which employs an encoderdecoder transformer framework. TURNA has 36 encoder and decoder layers, with each layer containing 16 attention heads. The models token embeddings are 1,024 dimensional. Its multi-layer perceptron layers have 2,816 hidden dimensions. TURNA includes 1.1 billion parameters, making it significantly larger than traditional BERT-based models. Pre-trained using the UL2 framework, TURNA incorporates multiple training objectives, including span corruption and autoregressive tasks, enabling it to perform both understanding and generation tasks. 4.3.2 Fine-tuning We leveraged each PLM by fine-tuning its pre-trained weights on our specific tasks using the limited training data available in the corresponding historical Turkish datasets. Specifically, we utilize HisTR for NER tagging and OTABOUN for dependency parsing and POS tagging. Additionally, we incorporated the PLMs fine-tuned on extensive datasets for modern Turkish, evaluating their performance on the historical Turkish test sets to examine cross-domain transferability."
        },
        {
            "title": "5 Experimentation",
            "content": "5.1 NER Experiments Data We used HistTR which is introduced in Section 3.1 for fine-tuning the PLMs on the NER tagging. The dataset is randomly split into training and test subsets. The training set contains 11,852 tokens (462 sentences) with total number of 584 LOCATION and 264 PERSON entities. There are 5,101 tokens (200 sentences) with total number of 210 LOCATION and 122 PERSON entities in the development set. In the out-of-domain Ruznamçe test set, there are 6,386 tokens (150 sentences) with 216 LOCATION and 265 PERSON entities. We also used MilliyetNER (Tür et al., 2003) and WikiANN (Rahimi et al., 2019) datasets as additional labeled data in the fine-tuning process. MilliyetNER was collected from news articles and manually annotated with PERSON, LOCATION, and ORGANIZATION entity types. It can be considered large dataset with almost 500 tokens and stands as one of the most frequently used NER dataset in Turkish. WikiANN is multilingual NER dataset consisting of Wikipedia articles from 176 languages, automatically annotated with the entity types of LOCATION, PERSON, and ORGANIZATION. Experimental Settings We used Huggingfaces Trainer API for fine-tuning the BERTurk and mBERT models. We used the cased versions of both models. We fine-tuned the models using the Adam optimizer with learning rate of 5e-5 and batch size of 32. Training continues until convergence with maximum epoch number of 20. All of the BERT-based experiments were conducted on the Google Cloud platform Colab with 12.7GB RAM and one Tesla T4 GPU. TURNA experiments required the use of mixed precision at f-16 and smaller batch size on an A100 GPU with 40 GB of RAM. Results We conducted series of experiments using BERTurk, mBERT, and TURNA models. Table 6 shows the performance of the models in terms of precision, recall and F1 scores as well as descriptions to clarify the model names. For each model, we run the experiments three times and report the mean scores. Table 6: The overall performance of BERTurk, mBERT, and TURNA NER models on the in-domain development and out-of-domain test sets of the HisTR dataset when using different combinations of fine-tuning sets Model Descriptions BERTurk+MilliyetNER BERTurk+MilliyetNER+HisTR BERTurk+HisTR mBERT+WikiANN+HisTR mBERT+HisTR TURNA+MilliyetNER+HisTR Model Performance Name BERTurk+MilliyetNER BERTurk+MilliyetNER+HisTR BERTurk+HisTR mBERT+WikiANN+HisTR mBERT+HisTR TURNA+MilliyetNER+HisTR BERTurk fine-tuned only using MilliyetNER, large NER dataset for modern Turkish. BERTurk+MilliyetNER further fine-tuned using HisTR, the small dataset for historical Turkish. BERTurk fine-tuned only using HisTR. mBERT fine-tuned on WikiANN, large multilingual NER dataset, and further fine-tuned using HisTR. mBERT fine-tuned only using HisTR. TURNA fine-tuned on MilliyetNER and further fine-tuned using HisTR. HisTR Development Set Ruznamçe Test Set Prec. Recall F1 71.99 75.39 92.17 90.26 91.57 88.63 87.05 80.73 88.25 83.95 80.26 77.62 Prec. Recall F1 61.95 53.84 64.03 59.92 61.75 54.49 41.93 41.17 42.20 43.19 41.58 57.61 73.65 91.21 90.07 83.77 86.05 78. 57.58 61.91 57.89 41.49 42.69 48.30 From the table, we observe that BERTurk outperforms mBERT in all settings for NER tagging of historical Turkish. This suggests that although historical Turkish differs from modern Turkish, the linguistic similarities may allow BERTurk to transfer its learned representations more effectively than mBERT, which has broader but less specialized knowledge base. 14 When we look at the performance of BERTurk, we see that fine-tuning BERTurk using labeled data that include texts written only in modern Turkish (the first row) does not yield good results, even if the labeled data (i.e., MilliyetNER) is quite extensive as in our case. Further fine-tuning the model with the training set of our HisTR dataset (the second row) improved the performance by large margin. However, note that when fine-tuning BERTurk with only the modest training set of the HisTR dataset and not using the large MilliyetNER dataset (the third row), we still achieve very good results. In fact, the obtained results are quite close to the version that also uses the large MilliyetNER dataset. This finding suggests that NER of historical Turkish poses different challenges that do not exist in NER of modern Turkish. When we look at the results of the experiments conducted with mBERT, we observe similar pattern in the usage of historical Turkish data. However, inclusion of an extensive multilingual labeled dataset (WikiANN), which has labeled data in modern Turkish besides other 175 languages, during the fine-tuning process adversely impacts the models performance. Hence, we can conclude that fine-tuning mBERT with multilingual data does not have positive effect in our task according to the overall scores. The final row shows the performance of the T5-based TURNA model fine-tuned on MilliyetNER and then with HisTR. The performance of TURNA on the HisTR development set is the worst one between the models fine-tuned with HisTR. However, it outperforms both mBERT configurations by around 6 points on the out-of-domain Ruznamçe test set, although still behind all of the BERTurk configurations. We should note that, during fine-tuning of TURNA, the training loss remained higher than the validation loss, even after convergence. We attribute this to TURNAs large number of parameters, which require more data for effective fine-tuning than what is available in the HisTR dataset. Notably, this issue was not observed with the BERT models, which have moderate size and performed well with the same dataset size. When comparing the performance of the models on the in-domain development set and the out-of-domain Ruznamçe test set, significant disparity emerges. The best-performing model achieves an F1 score of only 61.91 on the Ruznamçe test set, compared to 91.21 on the development seta difference of nearly 30 points. This considerable gap can be attributed to the temporal and contextual variations inherent in the sentences of these datasets, which originate from distinct historical periods. While the sentences in the HisTR dataset are sourced from 19th century periodical, the Ruznamçe test set originates from 17th century legal documents. The models mediocre performance on the Ruznamçe test set highlights the need for new methods and the development of more comprehensive datasets to enable effective NER tagging of historical Turkish texts across diverse domains and time periods. 5.2 Dependency Parsing and POS Tagging Experiments Data The models were trained and evaluated on both the OTA-BOUN treebank, the first and only dependency treebank for historical Turkish and the Turkish BOUN treebank (Türk et al., 2022), large dependency treebank for modern Turkish. Both treebanks are in UD format, containing manual annotation of universal part-of-speech tags and dependency relations. We adhere to the original partitioning of the treebanks, where the OTA-BOUN treebank consists of only 114 sentences in the training set and 400 sentences in the test set. In contrast, the Turkish BOUN treebank features much larger dataset, with 7,803 sentences in the training set and 979 sentences in both the development and test sets. Experimental Settings For the dependency parsing and POS tagging experiments, we utilized the STEPS parser (Grünewald et al., 2021). STEPS is graph-based dependency parser built on the well-known biaffine classifier approach (Dozat et al., 2017) but incorporates transformer-based encoders in its internal architecture. For the transformer encoders, we experimented with BERTurk and mBERT. To configure STEPS for dependency parsing, we adopted the following settings to optimize its performance: the arc scorer was assigned hidden size of 768 with dropout rate of 0.33, while the label scorer used hidden size of 256 with the same dropout rate. The embeddings processor was configured with hidden, attention, and output dropout rates set to 0.2, 0.2, and 0.5, respectively, complemented by token mask probability of 0.15. For POS tagging, we employed sequence tagger featuring an input dropout rate of 0.2, while retaining the same embedding processor configuration as used for dependency parsing. Both tasks leveraged the Adam optimizer with learning rate of 4e-5, combined with square root learning rate schedule spanning 400 steps. Experiments of both tasks were conducted on the Google Cloud platform using Colab, with 12.7 GB of RAM and Tesla T4 GPU. For both tasks, we used batch size of 32 and implemented early stopping with patience of 15 epochs, allowing maximum of 300 epochs. 15 Results Table 7 presents the results of the experiments conducted using STEPS parser with BERTurk and mBERT models. description of the model names is provided in the upper part of the table for clarification. We perform three runs for each model and report the average scores. Table 7: The overall performance of BERTurkand mBERT-based models on the test sets of the OTA-BOUN and TR-BOUN treebanks, presented for different combinations of fine-tuning sets. UAS and LAS represent unlabeled and labeled attachment scores, respectively, which are used to evaluate the models performance in constructing dependency relations. UPOS F1 refers to the F1 score of the sequence tagger models in predicting the universal POS tags of words in the corresponding test sets. Model Descriptions STEPSBERTurk+TR_BOUN STEPSBERTurk+TR_BOUN+OTA_BOUN STEPSBERTurk+OTA_BOUN STEPSmBERT+TR_BOUN STEPSmBERT+TR_BOUN+OTA_BOUN STEPSmBERT+OTA_BOUN Model Performance Name STEPSBERTurk+TR_BOUN STEPSBERTurk+TR_BOUN+OTA_BOUN STEPSBERTurk+OTA_BOUN STEPSmBERT+TR_BOUN STEPSmBERT+TR_BOUN+OTA_BOUN STEPSmBERT+OTA_BOUN STEPS parser with BERTurk, fine-tuned only using TR_BOUN, large dependency treebank for modern Turkish. STEPSBERTurk+TR_BOUN further fine-tuned using OTA_BOUN, small treebank for historical Turkish. STEPS parser with BERTurk, fine-tuned only using OTA_BOUN STEPS parser with BERTurk, fine-tuned only using TR_BOUN. STEPSmBERT+TR_BOUN further fine-tuned using OTA_BOUN. STEPS parser with mBERT, fine-tuned only using OTA_BOUN. OTA-BOUN Test Set (Historical Turkish) LAS Tra. UAS Size 7,803 7,917 114 7,803 7,917 114 79.92 81.51 68.87 72.96 75.86 61.43 71.29 73.79 59.70 64.32 67.87 49. TR-BOUN Test Set (Modern Turkish) UPOS UAS F1 94.76 94.98 91.56 92.26 93.12 88.68 83.11 83.15 68.66 79.61 79.60 59.55 LAS 76.55 76.58 59.16 72.05 72.18 46.56 UPOS F1 93.00 93.07 87.21 92.75 92.78 84. When we look at the dependency parsing results, our first observation is BERTurks superior performance over mBERTs. The best-performing model utilizing BERTurk outperforms the best mBERT-based model by almost 6% in both UAS and LAS on historical Turkish (the OTA-BOUN test set). The gap is smaller (around 4%) in the dependency parsing of modern Turkish sentences (the TR-BOUN test set). These results suggest that language-specific PLM is better option for dependency parsing of historical Turkish, even though it was pre-trained only on the modern counterpart of the language. When we compare the parsing performance of the models trained solely on TR-BOUN (the 1st and 4th rows) with those trained exclusively on OTA-BOUN (the 3rd and 6th rows), we observe significant advantage for the models trained on TR-BOUN. This performance difference is largely attributed to the contrasting sizes of the training sets. Specifically, STEPSBERTurk+TR_BOUN and STEPSmBERT+TR_BOUN were trained on 7,803 modern Turkish sentences, while STEPSBERTurk+OTA_BOUN and STEPSmBERT+OTA_BOUN were limited to just 114 historical Turkish sentences. Notably, we observe positive effect when OTA-BOUN is combined with TR-BOUN for training. The models utilizing this combined training approach (the 2nd and 5th rows) outperform those trained only on TR-BOUN (the 1st and 4th rows) by 2.5% and 3.5% in LAS for BERTurk and mBERT, respectively. Although the number of historical Turkish sentences is as small as 114, adding them to the training set made significant impact on the dependency parsing of historical Turkish. These findings indicate that parsing performance for historical Turkish can be further enhanced with increased training data in historical Turkish. As anticipated, the inclusion of OTA-BOUN in the training set does not affect the parsing performance on modern Turkish sentences (TR-BOUN test set). The positive effect of using OTA-BOUN in training is less visible in POS tagging experiments. There is almost 1% increase in the F1 score of the STEPSmBERT model when OTA-BOUN is added to the training set along with TRBOUN. For the STEPSBERTurk model, OTA-BOUN has almost no effect on the performance of the model in predicting the POS tags of the OTA-BOUN test set. Here, BERTurk-based models once again outperform their corresponding 16 mBERT-based models in this task. It is worth noting that the POS tagging models may have already approached saturation point, as the F1 score for the best-performing model on the OTA-BOUN test set is nearly 95. In such cases, further improvements in model performance are likely to be incremental and minimal. All of these experimental findings indicate that leveraging language-specific PLM trained on the modern counterpart of historical language, followed by fine-tuning on domain-specific datasets, serves as an effective starting point for NLP tasks involving historical Turkish. Despite the limited size of labeled datasets for historical Turkish, this approach demonstrates the potential to achieve satisfactory performance on the studied tasks. However, significant challenges remain, particularly in tackling more complex tasks, such as dependency parsing, and in adapting models to out-of-domain data, as evidenced by the Ruznamçe test set."
        },
        {
            "title": "6 Conclusion",
            "content": "This study represents significant step forward in advancing NLP for historical Turkish. Recognizing the critical need for robust resources and tools to analyze this rich linguistic heritage, we have introduced several novel contributions: (i) the first named entity recognition dataset for historical Turkish (HisTR), enabling the identification and classification of crucial entities within historical texts; (ii) The first manually annotated dependency treebank for historical Turkish (OTA-BOUN), providing valuable resource for syntactic analysis and model development; (iii) clean text corpus of historical Turkish (OTC), offering substantial foundation for various NLP tasks; (iv) trained models for dependency parsing, part-of-speech tagging, and named entity recognition tasks for historical Turkish, establishing benchmarks for future research and providing strong starting point for further development. By making all resources and models publicly available, we aim to foster broader research and innovation in the field of historical Turkish NLP. These contributions address the critical gap in existing resources and pave the way for more sophisticated analyses of historical documents, enabling deeper insights into the history, culture, and language of the Ottoman Empire. As future work, we plan to expand the HisTR dataset and the OTA-BOUN treebank in terms of both size and the time periods they represent. We believe that, rather than exclusively fine-tuning PLMs on labeled historical Turkish data, first applying continual pre-training methods on PLMs using raw historical Turkish texts, followed by fine-tuning on labeled data, would significantly improve model performance for historical Turkish NLP. Therefore, we aim to enrich the OTC corpus evenly across different historical Turkish periods and pre-train PLMs on this corpus to develop better language models tailored to historical Turkish."
        },
        {
            "title": "References",
            "content": "Al Nahas, A., Tunalı, M. S., and Akgül, Y. S. (2019). Supervised text style transfer using neural machine translation: Converting between old and modern Turkish as an example. In 2019 27th Signal Processing and Communications Applications Conference (SIU), pages 14. Almazrouei, E., Alobeidli, H., Alshamsi, A., Cappelli, A., Cojocaru, R., Debbah, M., Étienne Goffinet, Hesslow, D., Launay, J., Malartic, Q., Mazzotta, D., Noune, B., Pannier, B., and Penedo, G. (2023). The falcon series of open language models. Aydemir, M. S., Aydın, B., Kaya, H., Ibrahim Karlıaga, and Demir, C. (2014). Tübitak Turkish - Ottoman handwritten recognition system. In 2014 22nd Signal Processing and Communications Applications Conference (SIU), Trabzon, Turkey, April 23-25, 2014, pages 19181921. IEEE. Bilgin Tasdemir, E. F. (2023). Printed ottoman text recognition using synthetic data and data augmentation. International Journal on Document Analysis and Recognition (IJDAR), 26(3):273287. Can, E. F., Duygulu, P., Can, F., and Kalpakli, M. (2010). Redif extraction in handwritten ottoman literary texts. In 20th International Conference on Pattern Recognition, ICPR 2010, Istanbul, Turkey, 23-26 August 2010, pages 19411944. IEEE Computer Society. Can, F., Can, E., Sahin, P. D., and Kalpakli, M. (2013). Automatic categorization of Ottoman poems. Glottotheory, 4(2):4057. Colutto, S., Kahle, P., Hackl, G., and Mühlberger, G. (2019). Transkribus. platform for automated text recognition and searching of historical documents. In 15th International Conference on eScience, eScience 2019, San Diego, CA, USA, September 24-27, 2019, pages 463466. IEEE. Conneau, A., Khandelwal, K., Goyal, N., Chaudhary, V., Wenzek, G., Guzmán, F., Grave, E., Ott, M., Zettlemoyer, L., and Stoyanov, V. (2019). Unsupervised cross-lingual representation learning at scale. arXiv preprint arXiv:1911.02116. 17 Dashtipour, K., Gogate, M., Li, J., Jiang, F., Kong, B., and Hussain, A. (2020). hybrid persian sentiment analysis framework: Integrating dependency grammar based rules and deep neural networks. Neurocomputing, 380:110. Devlin, J., Chang, M.-W., Lee, K., and Toutanova, K. (2019). BERT: Pre-training of deep bidirectional transformers for language understanding. In Burstein, J., Doran, C., and Solorio, T., editors, Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers), pages 41714186, Minneapolis, Minnesota. Association for Computational Linguistics. Dolek, I. and Kurt, A. (2022). deep learning model for Ottoman OCR. Concurr. Comput. Pract. Exp., 34(20). Dozat, T., Qi, P., and Manning, C. D. (2017). Stanfords graph-based neural dependency parser at the CoNLL 2017 In Hajiˇc, J. and Zeman, D., editors, Proceedings of the CoNLL 2017 Shared Task: Multilingual shared task. Parsing from Raw Text to Universal Dependencies, pages 2030, Vancouver, Canada. Association for Computational Linguistics. Ehrmann, M., Hamdi, A., Pontes, E. L., Romanello, M., and Doucet, A. (2023). Named entity recognition and classification in historical documents: survey. ACM Comput. Surv., 56(2). Fokkens, A., ter Braake, S., Ockeloen, N., Vossen, P., Legêne, S., and Schreiber, G. (2014). BiographyNet: Methodological issues when NLP supports historical research. In Calzolari, N., Choukri, K., Declerck, T., Loftsson, H., Maegaard, B., Mariani, J., Moreno, A., Odijk, J., and Piperidis, S., editors, Proceedings of the Ninth International Conference on Language Resources and Evaluation (LREC14), pages 37283735, Reykjavik, Iceland. European Language Resources Association (ELRA). Gokceoglu, G., Cavusoglu, D., Akbas, E., and Dolcerocca, Ö. N. (2024). multi-level multi-label text classification dataset of 19th century Ottoman and Russian literary and critical texts. arXiv preprint arXiv:2407.15136. Grobol, L., Regnault, M., Suarez, P. O., Sagot, B., Romary, L., and Crabbé, B. (2022). Bertrade: Using contextual embeddings to parse old french. In 13th Language Resources and Evaluation Conference. Grünewald, S., Friedrich, A., and Kuhn, J. (2021). Applying Occams razor to transformer-based dependency parsing: What works, what doesnt, and what is really necessary. In Oepen, S., Sagae, K., Tsarfaty, R., Bouma, G., Seddah, D., and Zeman, D., editors, Proceedings of the 17th International Conference on Parsing Technologies and the IWPT 2021 Shared Task on Parsing into Enhanced Universal Dependencies (IWPT 2021), pages 131144, Online. Association for Computational Linguistics. Güngör, O., Tiftikci, M., and Sönmez, Ç. (2018). corpus of grand national assembly of Turkish parliaments transcripts. In Proceedings of the Eleventh International Conference on Language Resources and Evaluation. Jaf, A. A. and Kayhan, S. K. (2021). Machine-based transliterate of Ottoman to Latin-based script. Scientific Programming, 2021(1):7152935. Karagöz, F., Dogan, B., and Özates, S. B. (2024). Towards clean text corpus for Ottoman Turkish. In Ataman, D., Derin, M. O., Ivanova, S., Köksal, A., Sälevä, J., and Zeyrek, D., editors, Proceedings of the First Workshop on Natural Language Processing for Turkic Languages (SIGTURK 2024), pages 6270, Bangkok, Thailand and Online. Association for Computational Linguistics. Keersmaekers, A. (2020). Creating richly annotated corpus of papyrological Greek: The possibilities of natural language processing approaches to highly inflected historical language. Digital Scholarship in the Humanities, 35(1):6782. Kerslake, C. (2021). Ottoman Turkish. In The Turkic Languages, pages 174194. Routledge. Kirmizialtin, Transkribus Ottoman Turkish (2019). print. S. https://readcoop.eu/model/ ottoman-turkish-print/. [Accessed: 2024-11-11]. Kurt, A. and Bilgin, E. (2012). The outline of an Ottoman-to-Turkish automatic machine transliteration system. In First Workshop on Language Resources and Technologies for Turkic Languages, pages 4550. Lai, V., Ngo, N., Pouran Ben Veyseh, A., Man, H., Dernoncourt, F., Bui, T., and Nguyen, T. (2023). ChatGPT beyond English: Towards comprehensive evaluation of large language models in multilingual learning. In Bouamor, H., Pino, J., and Bali, K., editors, Findings of the Association for Computational Linguistics: EMNLP 2023, pages 1317113189, Singapore. Association for Computational Linguistics. Lai, V. D., Nguyen, M. V., Kaufman, H., and Nguyen, T. H. (2021). Event extraction from historical texts: new dataset for black rebellions. In Zong, C., Xia, F., Li, W., and Navigli, R., editors, Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021, pages 23902400, Online. Association for Computational Linguistics. 18 Manjavacas Arevalo, E. and Fonteyn, L. (2022). Non-parametric word sense disambiguation for historical languages. In Hämäläinen, M., Alnajjar, K., Partanen, N., and Rueter, J., editors, Proceedings of the 2nd International Workshop on Natural Language Processing for Digital Humanities, pages 123134, Taipei, Taiwan. Association for Computational Linguistics. Meng, Y., Pan, X., Chang, J., and Wang, Y. (2023). Rgat: deeper look into syntactic dependency information for coreference resolution. In 2023 International Joint Conference on Neural Networks (IJCNN), pages 18. IEEE. Miletos (2022). Ottoman Turkish discovery portal. https://www.muteferriqa.com/en. [Accessed: 2024-05-10]. In Klementiev, A. and Specia, Nivre, J., Zeman, D., Ginter, F., and Tyers, F. (2017). Universal Dependencies. L., editors, Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics: Tutorial Abstracts, Valencia, Spain. Association for Computational Linguistics. Özates, S. B. (2022). Deep learning-based Dependency Parsing for Turkish. PhD thesis, Bogziçi University. Özates, S. B., Özgür, A., Güngör, T., and Basaran, B. Ö. (2022). hybrid deep dependency parsing approach enhanced with rules and morphology: case study for Turkish. IEEE Access, 10:9386793886. Özates, S. B., Tıras, T., Genç, E., and Bilgin Tasdemir, E. (2024). Dependency annotation of Ottoman Turkish with multilingual BERT. In Henning, S. and Stede, M., editors, Proceedings of The 18th Linguistic Annotation Workshop (LAW-XVIII), pages 188196, St. Julians, Malta. Association for Computational Linguistics. Raffel, C., Shazeer, N., Roberts, A., Lee, K., Narang, S., Matena, M., Zhou, Y., Li, W., and Liu, P. J. (2020). Exploring the limits of transfer learning with unified text-to-text transformer. Journal of machine learning research, 21(140):167. Rahimi, A., Li, Y., and Cohn, T. (2019). Massively multilingual transfer for NER. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 151164, Florence, Italy. Association for Computational Linguistics. Schweter, S. (2020). BERTurk - BERT models for Turkish. https://zenodo.org/records/3770924. [Online; accessed 21-10-2023]. Soygazi, F., Çiftçi, O., Kök, U., and Cengiz, S. (2021). Thquad: Turkish historic question answering dataset for In 2021 6th international conference on computer science and engineering (UBMK), reading comprehension. pages 215220. IEEE. Sprugnoli, R. and Tonelli, S. (2019). Novel event detection and classification for historical texts. Computational Linguistics, 45(2):229265. Tasdemir, E. F. B. (2023). Printed Ottoman text recognition using synthetic data and data augmentation. Int. J. Document Anal. Recognit., 26(3):273287. Tasdemir, E. F. B., Tandogan, Z., Akansu, S. D., Kizilirmak, F., Sen, M. U., Akcan, A., Kuru, M., and Yanikoglu, B. (2024). Automatic transcription of Ottoman documents using deep learning. In Sfikas, G. and Retsinas, G., editors, Document Analysis Systems - 16th IAPR International Workshop, DAS 2024, Athens, Greece, August 30-31, 2024, Proceedings, volume 14994 of Lecture Notes in Computer Science, pages 422435. Springer. Tay, Y., Dehghani, M., Tran, V. Q., Garcia, X., Wei, J., Wang, X., Chung, H. W., Shakeri, S., Bahri, D., Schuster, T., et al. (2022). Ul2: Unifying language learning paradigms. arXiv preprint arXiv:2205.05131. Tian, Y., Chen, G., Song, Y., and Wan, X. (2021). Dependency-driven relation extraction with attentive graph convolutional networks. In Zong, C., Xia, F., Li, W., and Navigli, R., editors, Proceedings of the 59th Annual Meeting of the Association for Computational Linguistics and the 11th International Joint Conference on Natural Language Processing (Volume 1: Long Papers), pages 44584471, Online. Association for Computational Linguistics. Touvron, H., Martin, L., Stone, K., Albert, P., Almahairi, A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P., Bhosale, S., et al. (2023). Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288. Tür, G., Hakkani-Tür, D., and Oflazer, K. (2003). statistical information extraction system for Turkish. Natural Language Engineering, 9(2):181210. Türk, U., Atmaca, F., Özates, S. B., Berk, G., Bedir, S. T., Köksal, A., Basaran, B. Ö., Güngör, T., and Özgür, A. (2022). Resources for Turkish dependency parsing: Introducing the boun treebank and the boat annotation tool. Language Resources and Evaluation, pages 149. Uludogan, G., Balal, Z., Akkurt, F., Turker, M., Gungor, O., and Üsküdarlı, S. (2024). TURNA: Turkish encoderdecoder language model for enhanced understanding and generation. In Ku, L.-W., Martins, A., and Srikumar, V., editors, Findings of the Association for Computational Linguistics: ACL 2024, pages 1010310117, Bangkok, Thailand. Association for Computational Linguistics. 19 Uysal, Z. (2019). Servet-i Fünun Dergisi Veritabanı. http://www.servetifunundergisi.com/. Online [Accessed: 2023-10-12]. Vilares, D., Strzyz, M., Søgaard, A., and Gómez-Rodríguez, C. (2020). Parsing as pretraining. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 34, pages 91149121. Volk, M., Fischer, D. P., Scheurer, P., Schwitter, R., and Ströbel, P. B. (2024). LLM-based translation across 500 years. The case for early New High German. In Luz de Araujo, P. H., Baumann, A., Gromann, D., Krenn, B., Roth, B., and Wiegand, M., editors, Proceedings of the 20th Conference on Natural Language Processing (KONVENS 2024), pages 368375, Vienna, Austria. Association for Computational Linguistics. Yang, L., Zhang, M., Liu, Y., Sun, M., Yu, N., and Fu, G. (2017). Joint pos tagging and dependence parsing with transition-based neural networks. IEEE/ACM transactions on audio, speech, and language processing, 26(8):1352 1358. Zhang, Y., Li, C., Barzilay, R., and Darwish, K. (2015). Randomized greedy inference for joint segmentation, POS tagging and dependency parsing. In Mihalcea, R., Chai, J., and Sarkar, A., editors, Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 4252, Denver, Colorado. Association for Computational Linguistics. Zhou, H., Zhang, Y., Li, Z., and Zhang, M. (2020). Is pos tagging necessary or even helpful for neural dependency parsing? In CCF International Conference on Natural Language Processing and Chinese Computing, pages 179 191. Springer. Zilio, L., Lazzari, R. R., and Finatto, M. J. B. (2024). NLP for historical Portuguese: Analysing 18th-century medical texts. In Gamallo, P., Claro, D., Teixeira, A., Real, L., Garcia, M., Oliveira, H. G., and Amaro, R., editors, Proceedings of the 16th International Conference on Computational Processing of Portuguese - Vol. 1, pages 7685, Santiago de Compostela, Galicia/Spain. Association for Computational Lingustics."
        }
    ],
    "affiliations": [
        "Bogaziçi University",
        "Medeniyet University"
    ]
}