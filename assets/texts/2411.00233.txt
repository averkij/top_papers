Title: SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models

Authors: José Ignacio Olalde-Verano, Sascha Kirch, Clara Pérez-Molina, Sergio Martin


================================================================================

Abstract
========

The state of health (SOH) of a Li-ion battery is a critical parameter that determines the remaining capacity and the remaining lifetime of the battery. In this paper, we propose SambaMixer a novel structured state space model (SSM) for predicting the state of health of Li-ion batteries. The proposed SSM is based on the MambaMixer architecture, which is designed to handle multi-variate time signals. We evaluate our model on the NASA battery discharge dataset and show that our model outperforms the state-of-the-art on this dataset. We further introduce a novel anchor-based resampling method which ensures time signals are of the expected length while also serving as augmentation technique. Finally, we condition prediction on the sample time and the cycle time difference using positional encodings to improve the performance of our model and to learn recuperation effects. Our results proof that our model is able to predict the SOH of Li-ion batteries with high accuracy and robustness.

Start
=====

SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models Jose Ignacio Olalde-Verano , Sascha Kirch ,, Clara Perez-Molina , Sergio Martin UNED - Universidad Nacional de Educacion Distancia, Madrid, Spain Corresponding Author {jolalde5, skirch1}@alumno.uned.es, {clarapm, smartin}@ieec.uned.es 4 2 0 2 1 3 ] . [ 1 3 3 2 0 0 . 1 1 4 2 : r AbstractThe state of health (SOH) of Li-ion battery is critical parameter that determines the remaining capacity and the remaining lifetime of the battery. In this paper, we propose SambaMixer novel structured state space model (SSM) for predicting the state of health of Liion batteries. The proposed SSM is based on the MambaMixer architecture, which is designed to handle multi-variate time signals. We evaluate our model on the NASA battery discharge dataset and show that our model outperforms the state-of-theart on this dataset. We further introduce novel anchor-based resampling method which ensures time signals are of the expected length while also serving as augmentation technique. Finally, we condition prediction on the sample time and the cycle time difference using positional encodings to improve the performance of our model and to learn recuperation effects. Our results proof that our model is able to predict the SOH of Li-ion batteries with high accuracy and robustness. Index TermsLi-ion battery, mamba, state space model, state of health prediction, multi-variate time series, deep learning I. INTRODUCTION Lithium-ion (Li-ion) batteries are among the most widely used energy storage solutions today, powering everything from consumer electronics to electric vehicles (EVs), even resulting in the 2019 Nobel Price in Chemistry (Fernholm, 2019). Their popularity stems from their high energy density, long lifespan, and low self-discharge rate, which make them both efficient and durable (Li et al., 2018). However, ensuring safety, reliability, and efficiency of Liion batteries over time requires sophisticated battery management systems (BMS) that monitor, control, and optimize battery performance. Accurate prediction of either the state of health (SOH) or state of charge (SOC) are essential to prevent unexpected failures and extend battery life. Traditional BMS often rely on equivalent circuit models (ECM) (Liu et al., 2014) as well as electrochemical models (EM) (Elmahallawy et al., 2022), but these are limited by their complexity and sensitivity to varying operational conditions. In recent years, deep learning models have emerged as powerful tools for health prediction in Li-ion batteries due to their ability to learn complex, non-linear relationships directly from data, providing more accurate, adaptive, and scalable solutions for real-time health monitoring. We noticed that most of recent works are not considering recent advances of deep learning (Mazzi et al., 2024; Yao et al., 2024). We acknowledge that some works (Crocioni et al., 2020) have put their focus on deploying models on embedded devices to show that small deep learning based models can be used for real-time health monitoring of Li-ion batteries. At the same time the problem of SOH prediction is multi-disciplinary problem that requires expertise in many different disciplines like battery technology, signal processing, and deep learning. Some works use modern transformer architectures (Feng et al., 2024; Gomez et al., 2024; Zhu et al., 2024b), which have shown great success in many deep learning disciplines like natural language processing and computer vision. While these show great performance, they are not well-suited for time series data with many measurement samples due to their quadratic work complexity (Keles et al., 2022) and require substantial amount of resources to train and large datasets to converge (Popel and Bojar, 2018). In this paper we propose SambaMixer, novel deep learning model based on Mamba state space models (Behrouz et al., 2024; Gu and Dao, 2024) for predicting the SOH of Li-ion batteries. Our model is designed to handle long-range temporal dependencies in time series data and passing information between channels in multi-variate time series data. We evaluate our model NASAs real-world dataset of Li-ion battery discharge cycles (Saha and Goebel, 2007) and demonstrate its superior performance compared to state-of-the-art deep learning models. In this sense, we summarize our main contributions of this paper as follows: 1) Introducing Mamba state space models to the problem of Li-ion battery SOH prediction. 2) Developing an anchor-based resampling scheme to resample time signals to have the same number of samples while serving as data augmentation method. 3) Applying sample time-based positional encoding scheme to the input sequence to tackle sample jitter, time signals of varying length and recuperation effects of Li-ion batteries. We release our code on GitHub1. 1GitHub Repo: https://github.com/sascha-kirch/samba-mixer J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models II. RELATED WORK A. State-of-Health Prediction of Li-ion Batteries Ren and Du (2023) categorizes battery SOH prediction methods into two classes: model-driven and data-driven methods. In this work we focus on data-driven methods. Many works combine recurrent networks and convolution networks to predict batterys SOH. Mazzi et al. (2024) use 1D-CNN followed by BiGRU layers, utilizing measured voltage, current, and temperature signals from the NASA PCoE dataset (Saha and Goebel, 2007). Utilizing the same dataset, Yao et al. (2024) develop CNN-WNN-WLSTM network with wavelet activation functions. Shen et al. (2023) use an extreme learning machine (ELM) algorithm on voltage signals measured during charging mode. Wu et al. (2022) combine convolutional and recurrent autoencoders with GRU networks. Zhu et al. (2022) use CNN-BiLSTM with attention for SOH and remaining useful life (RUL) estimation. Ren et al. (2021) employ an autoencoder feeding parallel CNN and LSTM blocks. Tong et al. (2021) develop an ADLSTM network with Bayesian optimization. Tan et al. (2020) propose feature score rule for LSTM-FC networks. Crocioni et al. (2020) compare CNN-LSTM and CNN-GRU networks. Li et al. (2020) introduce an AST-LSTM network. Yang et al. (2020) merge CNN with random forest in CNN-RF network. Garse et al. (2024) use random forest regression and FC network in the RFR-ANN model. Chen et al. (2024b) tackle SOH with self-attention knowledge domain adaptation network. Other works focus on transformer-based models. Feng et al. (2024) introduce GPT4Battery, large language model (LLM) finetuned to estimate SOH on the GOTION dataset (Lu et al., 2023). It employs pre-trained GPT-2 backbone, followed by feature extractor and two heads for charging curve reconstruction and SOH estimation. Gomez et al. (2024) use temporal fusion transformer (TFT) on Toyota dataset (Severson et al., 2019), integrating Bi-LSTM layers for time series forecasting. Zhu et al. (2024b) develop Transformer with sparse attention and dilated convolution layers on the CALCE (He et al., 2011a) and NASA PCoE datasets. Huang et al. (2024) use singular value decomposition before inputting data into Transformer model. Nakano and Tanaka (2024) combine CNN with Transformer model in an experimental EV. They feed voltage, current, and speed signals along with the SOC. B. Structured State Space Models Recently, state space models (SSMs) made their debut in the field of deep learning challenging the dominance of transformers (Vaswani et al., 2017) in sequential data tasks. While the transformer is successfully used in most fields of deep learning, its quadratic scaling law makes it challenging and expensive to be used for certain tasks with long sequences. Gu et al. (2021)s LSSL model incorporated Gu et al. (2020)s HiPPO Framework into SSMs and showed that SSMs can be trained. They further highlighted the duality of its recurrent and convolution representation, which meant, that it can be inferred with O(N ) complexity in its recurrent view and trained in parallel leveraging modern hardware accelerators using the convolution representation. The S4 model by Gu et al. (2022a) further employed certain structure upon its state matrix A, which allowed for more efficient construction of the convolution kernel required for training. Many subsequent work (Fu et al., 2023; Gu et al., 2022b,c; Gupta et al., 2022; Smith et al., 2023) further improved upon existing SSMs which ultimately led to the development of the Mamba model by Gu and Dao (2024). Mamba added selectivity into the SSM increasing its performance while still featuring sub-quadratic complexity during inference. It is this Transformer-like performance while scaling sub-quadratically with the sequence length which makes it especially suited for sequential data tasks with long sequences such as audio (Erol et al., 2024; Lin and Hu, 2024), images (Liu et al., 2024; Nguyen et al., 2022; Zhu et al., 2024a), video (Chen et al., 2024a; Li et al., 2024), NLP (Lieber et al., 2024), segmentation (Wan et al., 2024), motion generation (Zhang et al., 2024) and stock prediction (Shi, 2024). Recent work focuses on the connection between attention and SSMs Ali et al. (2024); Dao and Gu (2024) to simplify its formulation and to be able to leverage the vast amount of research done on attention mechanisms of transformers and its hardware aware and efficient implementations. Behrouz et al. (2024) extends Mamba-like models to apply its selectivity not only along tokens but also along channels, making it especially well suited for multi-variate time signals such those found in the state of health prediction of Li-ion batteries. III. PRELIMINARIES A. State-of-Health of Li-ion Batteries Lithium-ion (Li-ion) batteries are widely used in portable electronics, electric vehicles, and renewable energy storage systems due to their high energy density, long cycle life, and low self-discharge rate. The degradation of the batterys performance is often shown by the batterys state of health (SOH) which decreases over time as result of variety of internal and external factors which we will detail later in this section. The SOH of battery is measure of its ability to deliver the rated capacity and power compared to its initial state. The state of health SOHk [%] of Li-ion battery in percentage is defined as SOHk[%] = Qk Qr 100, (1) where Qk is the batterys current capacity at cycle and Qr its rated capacity. As the battery is used and repeatedly charged and discharged, its SOH decreases with each cycle, which can be observed in the measured voltage, current and temperature profiles. Figure 1 depicts an example. The EOL of battery is defined as the point at which the battery can no longer deliver the rated capacity and power and is considered to be at the end of its useful life. The -2J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models EOL of battery is typically reached when the SOH of the battery drops below certain threshold, e.g., 70% of the rated capacity. It is important to note that due to recuperation effects, the SOH of battery can increase again hence passing the EOL threshold multiple times. In this work, we set the EOL indicator to the first cycle after the SOH drops below the threshold for the last time. As previously stated, there are internal factors and external factors that contribute to the aging of Li-ion batteries (Liu et al., 2023). Internal factors are concerned with the chemical properties and external factors with for example manufacturing, environment and the usage of the battery, to name few. A1) Internal Factors Zeng and Liu (2023) identifies 21 possible internal factors causing degradation in Li-ion batterys state of health. These factors can be grouped into three fundamental concepts: loss of lithium inventory (LLI), loss of active material (LAM) and increase in internal resistance. Within these three groups, the loss of lithium inventory is one of the most impactful on the aging process (Li et al., 2019). LLI factors include lithium precipitation and SEI formation. Lithium precipitation occurs at the anode during charging, where lithium ions form dendrites that can puncture the separator, causing short circuits (Yang et al., 2017). SEI formation happens during the first charge, reducing available lithium ions and affecting their dynamics (Kekenes-Huskey et al., 2016). LAM factors primarily involve lithium oxide degradation leading to gas generation and increased the cathode, at internal resistance (Wang et al., 2021). Increased internal resistance is also caused by electrode corrosion (Yamada et al., 2020), electrolyte decomposition (Wang et al., 2012), and diaphragm degradation (Yang et al., 2016). A2) External Factors External factors are categorized based on the batterys temperature, charge rate, overcharge/overdischarge level and mechanical stresses (Tian et al., 2020; Vetter et al., 2005). Using battery outside its specified temperature range, too high and too low temperatures can both affect the batterys performance in different ways. High temperatures can lead to the formation of solid electrolyte interface, degradation of the cathode, and ultimately thermal runaway (Finegan et al., 2015; Waldmann et al., 2014). Too low temperatures slow down the transport of lithium ions, increase internal the batterys capacity (Zichen and resistance, and affect Changqing, 2021). Charging battery at high rate, meaning with high charging current, can lead to the precipitation of ions on the anode, which is favored by the increase in temperature due to the Joule effect (Gao et al., 2017; Jaguemont et al., 2016). Similarly, overcharging battery can lead to irreversible structural changes in the cathode and an increase in internal resistance (He et al., 2011b; Ouyang et al., 2015). Overdischarging battery can result in the dissolution of the anode material into Cu ions, which can generate dendrites in the charging process (Yamada et al., 2020). To conclude, vast number of internal and external factors can contribute to the degradation of Li-ion batterys state of health, making it complex and challenging problem to model. B. Structured State Space Models state space model (SSM) describes the relationship between an input signal x(t) and an output signal y(t) through hidden state h(t), which evolves over time according to linear dynamical system. The SSM is defined by the following equations: h(t) = Ah(t) + Bx(t), y(t) = Ch(t) + Dx(t). (2) Matrix transforms the input x(t) directly to the output y(t) and is usually pulled from the SSM and modeled as skip connection. Since most applications deal with discrete signals (e.g. discretized analog time signals or text tokens) and the fact that the above differential equation is not directly solvable, the SSM is discretized, resulting in the following discrete-time SSM: ht = Aht1 + Bxt, yt = Cht, (3) where and are the discretized state matrix and input matrix, respectively. Many discretization techniques have been applied, with the ZOH (Zero order hold) discretization technique being the most prominent one in recent works: = eA, = (A)1 (cid:0) I(cid:1) B. (4) In other words, the discrete SSM maps an input sequence RLD = {xtt NL} to an output sequence RLD = {ytt NL} with NL being the indices of the sequence with samples and the dimensionality of individual data points. Since matrices A, and are constant over time, the SSM is said to be linear timeinvariant (LTI) system. In an LTI system, the recurrent representation of the SSM can be written in form of convolution: = (cid:0)C B, B, . . . , AL1 B(cid:1) , = K. (5) Note that the convolution kernel is function of the SSM matrices and contains elements, which is quite expensive to compute for large and dense matrices RN . Gu et al. (2022a) restricted matrix to be diagonal plus low rank (DPLR) matrix with = Λ , which allows for more efficient computation of of the convolution kernel K. To further increase the performance of the SSM, Gu and Dao (2024) presented Mamba which added selectivity to the SSM, by making matrices Bt, Ct and time-variant, meaning each token is processed by its own matrix. -3J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models Fig. 1: Effect of battery aging on the measured voltage, current and temperature of various discharge cycles of Li-ion battery. Battery #5 of NASAs battery dataset (Saha and Goebel, 2007). Behrouz et al. (2024) highlighted that Mambas selectivity only applies on token level, but not on channel level, meaning information cannot be passed between channels. To address they proposed the MambaMixer, which adds this issue, channel-wise selectivity to the SSM, making it well suited for multi-channel data such as images or multi-variate time series. little simplified, the MambaMixer consists of two mixing operations, the token mixer Mtoken and the channel mixer Mchannel, which are defined as follows: IV. PROPOSED METHOD A. Problem Formulation Let NB = {0, 1, . . . , Ψ 1} be the indices of Ψ different Li-ion batteries = {bψψ NB} and Nψ = {0, 1, . . . , ψ 1} be the indices of ψ different discharge cycles ψ = {kk Nψ K} for each of the Ψ different Li-ion batteries in B. Each discharge cycle consists of sequence of measured samples of the current signal Ik, voltage signal Vk, temperature signal Tk and sample time Sk. All signals are measured at the batterys terminal. Mtoken : RLD (cid:55) RLD, Mchannel : RDL (cid:55) RDL. (6) Those mixers are build from one or more Mamba-like blocks. To obtain the output of single MambaMixer block, the input is first processed by the token mixer Mtoken and then by the channel mixer Mchannel: ytoken = Mtoken(xtoken), ychannel = Mchannel(xT channel), = yT channel. (7)

Note that the transpose operation is necessary to make the
==========================================================

channel mixer work on the channel dimension. Inspired by DenseNet (Huang et al., 2018), MambaMixer further implements learned weighted averaging of earlier blocks outputs to the current blocks input, which is defined as follows: Ik = {i(k) }, Vk = {v(k) }, Tk = {τ (k) }, Sk = {s(k) }, (9) where [0, Lψ ) is the index of individual samples, with Lψ being the total number of samples in cycle of battery bψ. Note that Sk is the sample time in seconds, where s(k) t=0 always starts at 0 s. Through our anchor-based resampling introduced in section IV-B1 we ensure that for all cycles in ψ the total number of samples are equal Lψ = L. By concatenating the input signals, we get the input tensor Pk RL4 for cycle of battery bψ: Pk = Ik Vk Tk Sk, (10) where denotes the concatenation operation. The objective of SambaMixer is to learn parameterized function fΘ that maps the input tensor Pk to the state of health SOHk for given cycle of given battery bψ: fΘ : Pk (cid:55) SOHk. (11) y(i) β(i) channel, B. The SambaMixer Model Architecture m1 (cid:88) x(m) token = y(i) α(i) token + x(m) channel = i=0 (cid:88) i=0 y(i) θ(i) token + m1 (cid:88) i=0 m1 (cid:88) i=0 y(i) γ(i) channel, (8) , β(i) where is the current index of the stacked MambaMixer blocks, α(i) are learnable parameters and y(0) token = y(0) channel = xembedd, where xembedd is the input to the encoder model. , and γ(i) , θ(i) top-level view of our SambaMixers model architecture is depicted in Fig. 2. It consists of five main components: Resampling, input projection, position encoding, encoder backbone and the prediction head. We input multi-variate time series of current, voltage, temperature and sample time of single discharge cycle of single battery bψ. Our SambaMixer model then predicts the state of health SOHk for that cycle. -4J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models Fig. 2: SambaMixer architecture. We input multi-variate time series of current, voltage, temperature and sample time. We first first resample the time signals using our anchor-based resampling technique. We then feed the resampled sample time into the sample time positional encoding layer. We further feed the time difference between two discharge cycles in hours into the cycle time difference positional encoding layer. The other signals, i.e. current, voltage and temperature are fed into the input projection. The projected signals are added to the sample time embeddings and the cycle time difference embeddings. Optionally, CLS token can be inserted at any position. The embedded tokens are then fed into the SambaMixer Encoder. The SambaMixer Encoder consists of stacked SambaMixer Encoder blocks. The output of the encoder is finally fed into the head, which predicts the state of health of the current cycle for battery bψ. B1) Anchor-Based Resampling of Time Signals As said earlier, we use the discharge cycles of battery to determine its state of health. Since those cycles become shorter with the battery aging and because different sample rates are chosen to sample the data, the number of samples from different discharge cycles and batteries vary drastically. Further, more samples result in wider model which consequently also means more resources are required to train it. Depending on the discharge mode, the required number of samples varies lot. For example, in constant current discharge mode, the current is nearly constant and the voltage drops continuously. Hence, few number of samples might suffice. On the other hand, high frequency discharge profiles might require more samples to avoid anti-aliasing effects and to be able the model the dynamics of the systems. To conclude, there are many reasons why we need to be able to change the number of samples. We resample and interpolate the time signals to ensure we always have the same number of samples, using our anchor-based resampling technique. Generally speaking, we define resampling function fR that resamples the sample time sequence Sk of length Lψ . Lψ varies for each cycle and battery bψ. The result is the -5resampled sample-time sequence length for all cycles and batteries. which has the the same fR : Sk RLψ (cid:55) RL. (12) Once we have k, we linearly interpolate the current, voltage and temperature signal. We experiment with three different approaches for the resampling function fR: linear resampling, random resampling and our anchor-based resampling. Results are presented in section V-D3. For the linear resampling R, we simply take equidistant samples between the min and max value of Sk. R(Sk) := linspace(min(Sk), max(Sk), L). (13) For the random resampling R, we draw samples from uniform distribution U. }L R(Sk) := {sk t=0, with sk For our proposed anchor-based resampling define the anchors by using linear resampling add some noise to each anchor. U[min(Sk),max(Sk)]. R, we first and then (14) R(Sk) := a R(Sk) + {zt}L t=0, with zt U[ 2 , 2 ], (15) J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models though the sample time for the same position in different cycles of different batteries bψ might be different. The choice of our sample time based position encoding can be interpreted as an additional condition to the model, allowing it to learn from temporal information (e.g. how long it takes to discharge battery) and making it robust against different sample rates and number of samples. Further, Li-ion batteries recuperate their capacity over time if not used. This means that the SOH of cycle is not only dependent on the start time t(k) of the current cycle k, but also on the time difference t(k) in hours to the start time t(k1) of the previous cycle (k 1). t(k) := t(k) t(k1). (18) We therefore add second positional encoding to encode the time difference t(k) in hours between the start time t(k) of the current discharge cycle and the start time t(k1) of the previous cycle (k 1) so that the model can learn the recuperation of the batterys capacity over time. We obtain the positional embeddings E(k) for cycle at position as follows: E(k) [p, 2i] = sin E(k) [p, 2i + 1] = cos (cid:16) (cid:16) t(k)/10.0002i/dmodel t(k)/10.0002i/dmodel (cid:17) (cid:17) , . (19) Our final positional embedding E(k) for cycle is then st and the sum of the sample time positional embedding E(k) the cycle time difference positional embedding E(k) : E(k) = E(k) st + E(k) . (20) Note that the cycle time difference positional embedding E(k) is constant within single cycle while the sample time positional embedding E(k) is different for each sample st in the cycle k. We ablate different positional encoding methods in section V-D4. B4) Encoder Backbone Our SambaMixer encoder backbone is strongly inspired by the TSM2 network of Behrouz et al. (2024), which is MambaMixer applied on time-series data. Since Behrouz et al. (2024) did not yet publish their implementation, we did implement it from scratch and give it the name SambaMixer. We stack SambaMixer blocks to obtain our SambaMixer encoder. The SambaMixer consists of Time Mixer module and Channel Mixer module, which both consists of one or more Mamba SSM layers with different scan directions. The Time Mixer module applies the SSM along the token axis. It consists of single forward scanning SSM due to the causal nature of sequence data. The Channel Mixer module on the other hand, does apply its SSMs on the channel/feature axis, which does not has this causal nature, hence we apply forward and backward scanning SSMs. In addition to the Time Mixer and Channel Mixer, learnable weighted average layers incorporate results from previous layers as described in equation 8. Fig. 3: Resample techniques. Original: The original sample time sequence with Lψ samples. Linear: linear resampling with equidistant samples. Random: random resampling with samples drawn from uniform distribution. Anchor: anchor-based resampling with random uniform noise added to equidistant samples. where is the interval width between two linearly resampled samples. In Figure 3 we illustrate the resulting sample time for those three resample techniques. B2) Input Projection We feed the resampled voltage, current, and temperature signals into our input projection. We use simple linear projection layer to project the multi-variate time signal of RL3 into RLdmodel . B3) Sample Time Position Embeddings As shown in our top-level architecture in Fig. 2, we use time information in our positional encoding layer to obtain position embeddings E(k) RLdmodel for cycle that are then added to the projected tokens. In the original transformer by Vaswani et al. (2017), position embeddings were added since the transformer would otherwise has no knowledge of the order if its inputs because it has neither recurrence nor any convolutions. Among many possible techniques to either encode absolute or relative position, the sinusoidal position embedding like introduced by the transformer is still frequently used. It encodes the samples depending on their absolute position in the sequence. Eorig [p, 2i] = sin Eorig [p, 2i + 1] = cos (cid:16) (cid:16) p/10.0002i/dmodel p/10.0002i/dmodel (cid:17) (cid:17) , . (16) An SSM on the other hand is recurrent model and inside the Mamba block we also have convolution. Even so, in VisionMamba by Zhu et al. (2024a), position embeddings were still added to make sense of the spatial position of image patches. In this work, even though having SSM applied on causal time signals, we still add position embeddings. Instead of encoding the position of the sample like in of cycle at equation 16, we encode the sample time s(k) position resulting in the positional embeddings E(k) st . P E(k) st E(k) st [p, 2i] = sin [p, 2i + 1] = cos (cid:16) (cid:16) s(k) t=p/10.0002i/dmodel s(k) t=p/10.0002i/dmodel (cid:17) (cid:17) , . (17) Because we resampled the time signals to be all of equal length L, the distance between two samples is constant even -6J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models The SambaMixer encoder is sequence to sequence model, meaning input and output dimension are equal. Optionally, single learnable CLS token can be inserted before passing it through the encoder, meaning we would input and output sequence of tokens of Rdmodel(L+1). In section V-D1 we ablate different choices of CLS token types. B5) Regression Head The regression head inputs the encoded sequence of tokens from SambaMixer encoder. If CLS token is used, the regression head selects the the token representing the encoded CLS token and projects it from Rdmodel into using an MLP to obtain the final prediction of the state of health for given cycle k. Note that the CLS could be at any position. If no CLS token is used, we apply mean operation to average the encoded sequence of tokens to obtain single token representing the entire sequence. This token is then projected from Rdmodel into using an MLP to obtain the final prediction of the state of health for given cycle k. In section V-D1 we ablate different choices and positions of CLS token. C. Training We train our SambaMixer model using the AdamW optimizer (Loshchilov and Hutter, 2017) with learning rate of 104, β1 = 0.9 and β2 = 0.999 and weight decay of 5 102. We use the mean squared error (MSE) loss function to train the model for 60 epochs. We use step learning rate scheduler that halves the learning rate every 20 epochs. We randomly sample batch of 32 discharge cycles of random batteries to predict the SOH of theses cycles. We apply drop-path regularization (Larsson et al., 2016) with drop-path rate of 0.2, where we occasionally drop entire mixer blocks. We further apply mixed precision training (Micikevicius, 2018) to speed up the training. During training, we use the our proposed anchor-based resampling technique to ensure that all cycles have the same number of samples while also acting as an augmentation technique. During sampling, we use linear resampling. D. Sampling To recall, our SambaMixer model inputs multi-variate time series of current, voltage, temperature and sample time of single discharge cycle of battery along with the time difference to the previous cycle 1 and predicts the state of health SOHk of that cycle. We use the trained model to predict the SOH of given cycle of given battery bψ. To predict the complete capacity degradation of battery, we iteratively predict the SOH of all cycles of battery. In contrast to training, we use linear resampling to obtain time signals of the same length. We highlight that in our sampling schema, the prediction of the SOH of cycle is independent of the prediction of the SOH of the previous cycle 1. This implies that the quality of the predictions is independent of the batterys history like number of cycles its has been charged and discharged and the profile of the discharge cycle. This choice is made to TABLE I: Hyperparameters for our SambaMixer models of varying model size (for num samples = 128). Model SambaMixer-S SambaMixer-M SambaMixer-L SambaMixer-XL dmodel 256 512 768 1024 dstate 16 16 24 24 # layer 8 8 12 # Param 4.7 15.2 48.7 85.6 TABLE II: Discharge specifications for various NASA Liion batteries. For the profile we report the discharge current signal form and the discharge amplitude. Tamb is the ambient temperature, VCO is the cut-off voltage and Initial Capacity is the initial capacity of the battery at the beginning of the measurement campaign. ID #5 #6 #7 #18 #25 #26 #27 #28 #29 #31 #34 #36 #45 #46 #47 #48 #54 #55 #56 (const.) 2.0A (const.) 2.0A (const.) 2.0A (const.) 2.0A (PWM 0.05Hz) 4.0A (PWM 0.05Hz) 4.0A (PWM 0.05Hz) 4.0A (PWM 0.05Hz) 4.0A (const.) 4.0A (const.) 1.5A (const.) 4.0A (const.) 2.0A (const.) 1.0A (const.) 1.0A (const.) 1.0A (const.) 1.0A (const.) 2.0A (const.) 2.0A (const.) 2.0A Profile Tamb VCO 2.7 24 2.5 24 2.2 24 2.5 24 2.0 24 2.2 24 2.5 24 2.7 24 2.0 43 2.5 43 2.2 24 2.7 24 2.0 4 2.2 4 2.5 4 2.7 4 2.2 4 2.5 4 2.7 4 Initial Capacity 1.8565 Ah 2.0353 Ah 1.8911 Ah 1.8550 Ah 1.8470 Ah 1.8133 Ah 1.8233 Ah 1.8047 Ah 1.8447 Ah 1.8329 Ah 1.6623 Ah 1.8011 Ah 0.9280 Ah 1.5161 Ah 1.5244 Ah 1.5077 Ah 1.1665 Ah 1.3199 Ah 1.3444 Ah ensure that the model performs well in realistic scenario where the batterys history is unknown. V. EXPERIMENTS AND ABLATIONS In this section we present our results, experiments and ablations. We trained four different models of varying sizes as described in Table I. Throughout the experiments and ablations, we use SambaMixer-L trained on NASA-L (see Table III) as our base model if not explicitly stated otherwise. A. Dataset We use the discharge cycles for Li-ion Battery dataset from the NASA Ames Prognostics Center of Excellence (PCoE) (Saha and Goebel, 2007). As depicted in Table II, this dataset features multiple Liion batteries tested under various discharge profiles, ambient temperatures Tamb, cut-off voltages VCO and initial capacities. All those batteries are 18650 NCA cells with nominal capacity of 2000 mAh and an upper voltage threshold of 4.2 V. In Table III we list various training and evaluation splits we compiled from those batteries. NASA-S is the same configuration Mazzi et al. (2024) was using. In our pre-processing, we remove cycles that have obvious issues with the measurement setup like those where the -7J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models TABLE III: Different Training and Evaluation splits for the NASA Li-ion batteries used throughout our experiments and ablations. ID #5 #6 #7 #18 #25 #26 #27 #28 #29 #31 #34 #36 #45 #46 #47 #48 #54 #55 #56 NASA-S train eval eval - train - - - train - - - - - eval train - - - NASA-M NASA-L train eval eval train - - - - - train train train train train eval train train train train train eval eval train - - - - - - - - train train eval train - - - MAE mean absolute error: MAE =

1
K
===

K (cid:88) k=1 (cid:12) (cid:12)sohgt sohpred (cid:12) (cid:12) . (21) RMSE Root mean square error: RMSE = (cid:118) (cid:117) (cid:117) (cid:116)

1
K
===

K (cid:88) k=1 (cid:0)sohgt sohpred (cid:1) . (22) MAPE Mean Absolute Percentage Error: MAPE =

1
K
===

K (cid:88) k=1 (cid:12) sohpred (cid:12)sohgt (cid:12) (cid:12) (cid:12)sohgt (cid:12) (cid:12) (cid:12) , (23) AEOLE Absolute End of Life Error: (cid:12)eolgt eolpred(cid:12) AEOLE = (cid:12) (cid:12) , is the ground truth for cycle k, sohpred is the predicted value for cycle k, is the total number of cycles, eolgt is the ground truth of the end of life indicator and eolpred is the prediction for the end of life indicator. where sohgt (24) C. Experiments In this section we perform experiments with our SambaMixer-L model trained on NASA-L. In section V-C1 we show the SOH estimation for the entire battery lifetime. In section V-C2 we show the performance of our model when trained on differently sized datasets. In section V-C3 we show the performance of our model when scaling the model size as well the dataset size. In section V-C4 we show the performance of our model when starting the prediction at different cycle IDs simulating pre-aged batteries. C1) SOH Estimation for Entire Battery Lifetime As described in section IV, we input the resampled time signal from single discharge cycle and predict the state of health of the battery for that particular cycle. If we sample the model as described in section IV-D we can obtain the capacity degradation over the cycle ID for each battery in the evaluation set. Figures 5, 6, 7 depict the comparison of the predicted SOH values against the ground truth SOH values. We further show the error for each cycle as well as the resulting EOL indicator. The EOL indicator predicts at which cycle the battery reaches its end of life. It is defined as the first cycle bellow the EOL threshold. Due to recuperation effects of Li-ion batteries it is important to consider the last occurrence where the SOH value drops bellow the EOL threshold. We observe that for the evaluation batteries #06, #07 and #47 our SambaMixer model accurately predicts the dynamics of the SOH curves and predicts the EOL indicator without error. We notice that for battery #06 the prediction for SOH values above 92 % has comparably large error. We hypothesize that the model does not generalize well given the fact that the dataset is relatively small and that the training set does not contain samples with SOH values above 92 % (see Fig. 8). Fig. 4: Capacity degradation for all selected batteries. measured capacity drops occasionally to 0.0 mAh. Explicitly we filter those cycles where from one cycle to the next the SOH drops more than 10 %. Further, for each cycle we remove those individual samples, that were recorded after the load has been disconnected. We also calculate the time between two cycles that we need for our positional encoding and we resample the time signals to have the same constant number of samples. During training we resample using our anchor-based resampling technique introduced in section IV-B. During inference we use linear resampling. Throughout the experiments and ablations, we use NASAL as our default dataset if not explicitly stated otherwise. In Figure 4 we show the capacity degradation for all selected and pre-processed batteries. We illustrate the state of health (SOH) in percent over the discharge cycle ID. B. Metrics We evaluate our experiments using the following commonly used metrics for state of health prediction tasks: -8J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models Fig. 5: SOH prediction for Battery #06 Fig. 7: SOH prediction for Battery #47 Fig. 8: Histogram of SOH value counts. Comparison of train and eval split of the NASA-L dataset. Number of bins: 50. C2) Dataset Split In this experiment we test the performance of our SambaMixer model when trained on different training sets and compere those results against Mazzi et al. (2024). Explicitly, we train our SambaMixer-L model on NASA-S, NASA-M and NASA-L. Results are reported in Table V. We observe that our SambaMixer model performs better on MAE and RMSE for all datasets and performs better at MAPE for NASA-L. C3) Model Scaling In this experiment we test the performance of our SambaMixer model when trained with differently sized models. We train our SambaMixer-S, SambaMixer-M, SambaMixerL and SambaMixer-XL models on NASA-S, NASA-M and NASA-L. The results are reported in Table VI. Fig. 6: SOH prediction for Battery #07 Further, other Mamba-like models such as Li et al. (2024) and Liu et al. (2024) have had similar issues with models overfitting easily. In Table IV we compare our SambaMixer model against Mazzi et al. (2024) for each battery of the evaluation set. We observe that our SambaMixer model surpasses Mazzi et al. (2024) in all metrics for all batteries. Later in section VI we show how our method compares against Mazzi et al. (2024) for different model sizes and and datasets. -9J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models TABLE IV: Comparing our SambaMixer models with the state-of-the-art Mazzi et al. (2024) on the NASA Li-ion batteries. We report the MAE, RMSE and MAPE for each battery. The best results are highlighted in bold. Battery Model #06 Mazzi et al. SambaMixer (ours) Mazzi et al. SambaMixer (ours) Mazzi et al. SambaMixer (ours) MAE 2.448 1.173 1.861 1.197 2.549 0.512 RMSE MAPE 1.579 1.406 1.114 1.498 1.969 0.822 3.177 2.068 2.252 1.285 3.094 0.645 # #47 TABLE V: Performance of our SambaMixer model when trained on different training sets. Evaluation sets are the same for all datasets. Model Mazzi et al. SambaMixer (ours) Dataset NASA-S NASA-S NASA-M NASA-L MAE 2.220 1.764 1.334 1.072 RMSE MAPE 1.451 2.320 1.641 1. 2.778 2.404 1.902 1.592 We can see that the performance of our model increases with the model size and the size of the dataset. This is expected since larger models have more capacity to learn complex patterns in the data and larger datasets provide more data for the model to learn from. Figure 9 plots the MAE for the SOH estimation task for the different model sizes and datasets. We can observe that that for SambaMixer-S increasing the dataset size from NASA-M to NASA-L has almost no impact on the performance, indicating that the model is too small to learn from the additional data. Further, increasing the model size from SambaMixerL to SambaMixer-XL decreases the performance slightly indicating that the model is too large for the dataset and likely overfits to the training data. C4) SOH Estimation for Used Batteries In real scenario, one will likely not always need to predict the SOH for new batteries, but also for batteries that have been used for an unknown number of cycles or probably not all discharge cycles have been recorded. robust model is expected to still reliably predict the SOH values for such scenarios. To simulate the prediction task of used batteries, we take the batteries from the evaluation set, remove the first discharge cycles and update their cycle ID. Explicitly, for batteries #06 and #07 we experiment starting the prediction at cycle 0, 30, 70 and 100 and for battery #47 with 0, 15, 35 and 50. In Table VII we report our results. We observe that SambaMixer performs better on all reported metrics for all batteries and starting points, except the MAPE for battery #07. Since our SambaMixer model performs the prediction task independently for each cycle individually, our method is robust against missing cycles and batteries of different age. The SOH prediction curve is exactly the same. The metrics only vary for different starting points since the metrics are normalized by the total number of cycles for each battery. TABLE VI: Model scaling experiment. We report the metrics MAE, RMSE and MAPE for the SOH estimation task for different model sizes and datasets. Model SambaMixer-S SambaMixer-M SambaMixer-L SambaMixer-XL Dataset NASA-S NASA-M NASA-L NASA-S NASA-M NASA-L NASA-S NASA-M NASA-L NASA-S NASA-M NASA-L MAE 2.478 1.920 1.895 1.987 1.736 1.230 1.764 1.334 1.072 1.693 1.349 1.133 RMSE MAPE 3.325 2.461 2.315 2.609 2.170 1.493 2.320 1.641 1.346 2.218 1.642 1.396 3.974 2.829 2.929 2.879 2.414 2.027 2.404 1.902 1.592 2.431 1.966 1.800 Fig. 9: Model scaling experiment. MAE metric for the SOH estimation task for different model sizes and datasets. Values are reported in Table VI D. Ablation Study In this section we ablate our contributions and design choices. If not stated otherwise, we use our SambaMixerL model trained on NASA-L. In section V-D1 we ablate the usage and position of the class tokens that can optionally be inserted into the input token sequence. In section V-D2 we ablate the performance of our SambaMixer backbone and compare it with vanilla Mamba backbone from (Gu and Dao, 2024). We continue investigating the performance for various resampling techniques in section V-D3. Finally, we test the performance for different input projections and position encodings in section V-D4. D1) Usage and Position of Class Token We ablate the usage and the potential position of class tokens inserted into the token sequence. We train our SambaMixer-L model on NASA-L inserting class token either at the tail, middle or head and compare it with model that inserts no class token. If we use class token, the head is attached to the position at the output that corresponds to the position where the class token was placed. If no class token is used, we average the output of all output tokens and feed it to the regression head. The results are reported in Table VIII. -10J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models TABLE VII: SOH estimation performance on the evaluation batteries starting at different cycle IDs. We report the metrics MAE, RMSE and MAPE for the SOH estimation task and the AEOLE for EOL indication. Capital letters in brackets for the start column represent Mazzi et al. notation for those scenarios. N/R=Not Reported. TABLE IX: Ablation of different backbone architectures. Backbone Vanilla Mamba SambaMixer (ours) MAE 1.709 1.072 RMSE MAPE 2.161 1.346 2.386 1. TABLE X: Ablation of various resampling methods. Model Battery #06 Mazzi et al. SambaMixer Battery #07 Mazzi et al. SambaMixer Battery #47 Mazzi et al. SambaMixer Start MAE RMSE MAPE AEOLE 0 30 (A) 70 (C) 100 (E) 0 30 (A) 70 (C) 100 (E) 0 30 (B) 70 (D) 100 (F) 0 30 (B) 70 (D) 100 (F) 0 15 (G) 35 (H) 50 (I) 0 15 (G) 35 (H) 50 (I) 2.448 2.445 2.080 2.440 1.173 0.575 0.680 0.808 1.861 1.748 1.794 1.608 1.197 1.309 1.400 1.395 2.549 2.774 2.110 1.806 0.512 0.507 0.508 0.480 3.177 3.090 2.516 2.859 2.068 0.824 0.905 1.045 2.252 2.285 2.101 1.868 1.285 1.371 1.433 1. 3.094 3.491 2.540 2.416 0.645 0.638 0.638 0.592 1.579 1.726 1.650 1.901 1.406 0.845 1.045 1.275 1.114 1.092 1.180 1.011 1.498 1.665 1.839 1.878 1.969 2.345 1.841 1.570 0.822 0.843 0.871 0.825 N/R 0 3 0 0 0 0 0 N/R N/R N/R N/R 0 0 0 N/R N/R N/R N/R 0 0 0 0 TABLE VIII: Ablation of inserting class token into the input token sequence and at which positions. CLS Token Type MAE 5.515 Tail 1.977 Middle 1.746 Head 1.072 None (Avg.) RMSE MAPE 6.612 2.260 2.029 1.346 8.141 4.131 3.384 1.592 D2) Backbone In this ablation we compare the performance of our SambaMixer backbone with the vanilla Mamba backbone from Gu and Dao (2024). We train both models on NASA-L. The results are shown in Table IX. The main motivation of this ablation is to show the effectiveness of our SambaMixer backbone when it comes to multi-variate time signals. We can see that our SambaMixer backbone outperforms the vanilla Mamba backbone. This is due to the fact that the SambaMixer backbone is designed to handle multi-variate time signals and is able to capture the complex relationships between the different variables in the dataset. D3) Resampling In this ablation we compare the performance of different resampling methods. We train our SambaMixer-L model on NASA-L using linear, random and our proposed anchorbased resampling. The results are shown in Table X. The target of this ablation is to show the effectiveness of our anchorbased resampling method introduced in section IV-B1. Resample Type MAE 1.272 Linear 3.315 Random 1.072 Anchors (ours) RMSE MAPE 1.631 4.302 1. 1.862 4.368 1.592 Our anchor-based resampling method outperforms the linear and random resampling methods. We hypothesize that this is due to the fact that the anchor-based resampling acts as form of data augmentation, allowing the model to learn more robust features from the data. D4) Positional Encoding In this ablation we compare the performance of different positional encoding methods to justify our choice of the sample time positional encoding introduced in section IV-B3. We train our SambaMixer-L model on NASA-L using no encoding, sample time encoding and our proposed combined sample time and cycle time difference encoding. The results are shown in Table XI. Clearly, adding our proposed positional encoding to the model improves the performance. Further adding the time difference between discharge cycles as an additional feature to the positional encoding increases the performance even further. The intuition is that the difference between discharge cycles is important to capture recuperation effects of the battery and adjust the prediction accordingly. VI. CONCLUSION We have presented SambaMixer, novel approach for the prediction of the state of health of Li-ion batteries on structured state space model. We have shown that our model outperforms the state-of-the-art on the NASA battery discharge dataset Saha and Goebel (2007). We further introduced novel anchor-based resampling method and sample time and cycle time difference positional encoding to improve the performance of our model. Our results show that our model is able to predict the state of health of Liion batteries with high accuracy and robustness, capable to extract information from multi-variate time series data and to model recuperation effects. A. Limitations Even though our model outperforms the state-of-the-art on the NASA battery discharge dataset, we acknowledge that we evaluated our model only on single dataset; the NASA battery discharge dataset from Saha and Goebel (2007). This dataset only contains batteries of the same chemistry and we selected only constant discharge cycles for our experiments. Future work should evaluate our model on different datasets and different battery chemistries to further validate the generalization capabilities of our method. -11J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models TABLE XI: Ablation for various positional encoding methods. Encoding Type No Encoding Sample Time Sample Time + Cycle Diff (ours) MAE 3.097 1.160 1.072 RMSE MAPE 4.257 1.450 1.346 3.966 1.721 1.592 B. Future Work In future work, we plan to evaluate our model on different datasets and different battery chemistries to further validate the generalization capabilities of our model. We also plan to investigate the impact of different discharge profiles on the performance of our model. Furthermore, we plan to investigate the impact of different hyperparameters on the performance of our model and to further optimize our model for better performance. Finally, we plan to investigate different model architectures and different state space models to further improve the performance of our model. ACKNOWLEDGEMENTS is This publication reference project with by MICIU/AEI/10.13039/501100011033 and by European Union Next Generation EU/PRTR. TED2021-131535BI00 In4Labs funded part the of REFERENCES Ameen Ali, Itamar Zimerman, and Lior Wolf. The Hidden Attention of Mamba Models, 3 2024. URL http://arxiv. org/abs/2403.01590. arXiv:2403.01590 [cs]. Ali Behrouz, Michele Santacatterina, and Ramin Zabih. MambaMixer: Efficient Selective State Space Models with Dual Token and Channel Selection, 3 2024. URL http: //arxiv.org/abs/2403.19888. arXiv:2403.19888 [cs]. Guo Chen, Yifei Huang, Jilan Xu, Baoqi Pei, Zhe Chen, Zhiqi Li, Jiahao Wang, Kunchang Li, Tong Lu, and Limin Wang. Video Mamba Suite: State Space Model as Versatile Alternative for Video Understanding, 3 2024a. URL http://arxiv.org/abs/2403.09626. arXiv:2403.09626. Xin Chen, Yuwen Qin, Weidong Zhao, Qiming Yang, Ningbo Cai, and Kai Wu. self-attention knowledge domain adaptation network for commercial lithium-ion batteries state-of-health estimation under shallow cycles. Journal of Energy Storage, 86, 5 2024b. ISSN 2352152X. Giulia Crocioni, Danilo Pau, Jean Michel Delorme, and Giambattista Gruosso. Li-ion batteries parameter estimation with tiny neural networks embedded on intelligent iot IEEE Access, 8:122135122146, 2020. microcontrollers. ISSN 21693536. doi: 10.1109/ACCESS.2020.3007046. Tri Dao and Albert Gu. [Mamba-2] Transformers are SSMs: Generalized Models and Efficient Algorithms Through Structured State Space Duality, 5 2024. URL http://arxiv. org/abs/2405.21060. arXiv:2405.21060 [cs]. Mohamed Elmahallawy, Tarek Elfouly, Ali Alouani, and Ahmed M. Massoud. Comprehensive Review of Lithium-Ion Batteries Modeling, and State of Health IEEE Acand Remaining Useful Lifetime Prediction. cess, 10:119040119070, 2022. ISSN 2169-3536. doi: 10.1109/ACCESS.2022.3221137. URL https://ieeexplore. ieee.org/document/9944663/?arnumber=9944663. Conference Name: IEEE Access. Mehmet Hamza Erol, Arda Senocak, Jiu Feng, and Joon Son Chung. Audio Mamba: Bidirectional State Space Model for Audio Representation Learning, 6 2024. URL http: //arxiv.org/abs/2406.03344. arXiv:2406.03344 [cs, eess]. Yuyuan Feng, Guosheng Hu, and Zhihong Zhang. Gpt4battery: An llm-driven framework for adaptive state of health estimation of raw li-ion batteries. 1 2024. URL http://arxiv.org/abs/2402.00068. Ann Fernholm. The Royal URL popular-information/. The Nobel Prize in Chemistry 2019. of 2019. https://www.nobelprize.org/prizes/chemistry/2019/

Swedish Academy
===============

Sciences, Donal P. Finegan, Mario Scheel, James B. Robinson, Bernhard Tjaden, Ian Hunt, Thomas J. Mason, Jason Millichamp, Marco Di Michiel, Gregory J. Offer, Gareth Hinds, Dan J.L. Brett, and Paul R. Shearing. In-operando high-speed tomography of lithium-ion batteries during thermal runaway. Nature Communications, 6, 4 2015. ISSN 20411723. doi: 10.1038/ncomms7924. Daniel Y. Fu, Tri Dao, Khaled K. Saab, Armin W. Thomas, Atri Rudra, and Christopher Re. [H3] Hungry Hungry Hippos: Towards Language Modeling with State Space Models, 4 2023. URL http://arxiv.org/abs/2212.14052. arXiv:2212.14052 [cs]. Yang Gao, Jiuchun Jiang, Caiping Zhang, Weige Zhang, Zeyu Ma, and Yan Jiang. Lithium-ion battery aging mechanisms and life model under different charging stresses. Journal of Power Sources, 356:103114, 2017. ISSN 03787753. doi: 10.1016/j.jpowsour.2017.04.084. Komal Mohan Garse, Kedar Narayan Bairwa, and Anindita Roy. Hybrid random forest regression and artificial neural networks for modelling and monitoring the state of health of li-ion battery. J. Electrical Systems, 20:22312243, 7 2024. ISSN 11125209. William Gomez, Fu Kwun Wang, and Jia Hong Chou. Li-ion battery capacity prediction using improved temporal fusion transformer model. Energy, 296, 6 2024. ISSN 18736785. Albert Gu and Tri Dao. Mamba: Linear-Time Sequence Modeling with Selective State Spaces, 5 2024. URL http://arxiv.org/abs/2312.00752. arXiv:2312.00752 [cs]. Albert Gu, Tri Dao, Stefano Ermon, Atri Rudra, and Christopher Re. HiPPO: Recurrent Memory with Optimal Polynomial Projections, 10 2020. URL http://arxiv.org/abs/2008. 07669. arXiv:2008.07669 [cs, stat]. Albert Gu, Isys Johnson, Karan Goel, Khaled Saab, Tri Dao, Atri Rudra, and Christopher Re. [LSSL] Combining Recurrent, Convolutional, and Continuous-time Models with Linear State-Space Layers, 10 2021. URL http: //arxiv.org/abs/2110.13985. arXiv:2110.13985 [cs]. Albert Gu, Karan Goel, and Christopher Re. [S4] Efficiently Modeling Long Sequences with Structured State Spaces, 8 2022a. URL http://arxiv.org/abs/2111.00396. arXiv:2111.00396 [cs]. Albert Gu, Ankit Gupta, Karan Goel, and Christopher Re. -12J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models [S4D] On the Parameterization and Initialization of Diagonal State Space Models, 8 2022b. URL http://arxiv.org/ abs/2206.11893. arXiv:2206.11893 [cs]. Albert Gu, Isys Johnson, Aman Timalsina, Atri Rudra, and Christopher Re. How to Train Your HiPPO: State Space Models with Generalized Orthogonal Basis Projections, 8 2022c. URL http://arxiv.org/abs/2206.12037. arXiv:2206.12037 [cs]. Ankit Gupta, Albert Gu, and Jonathan Berant. [DSS] Diagonal State Spaces are as Effective as Structured State Spaces, 5 2022. URL http://arxiv.org/abs/2203.14343. arXiv:2203.14343 [cs]. Wei He, Nicholas Williard, Michael Osterman, and Michael Pecht. Prognostics of lithium-ion batteries based on DempsterShafer theory and the Bayesian Monte Carlo method. Journal of Power Sources, 196(23):1031410321, 12 2011a. doi: 10.1016/j.jpowsour. 2011.08.040. URL https://www.sciencedirect.com/science/ article/pii/S0378775311015400. ISSN 0378-7753. Yan Bing He, Feng Ning, Quan Hong Yang, Quan Sheng Song, Baohua Li, Fangyuan Su, Hongda Du, Zhi Yuan Tang, and Feiyu Kang. Structural and thermal stabilities of layered li(ni1/3co 1/3mn1/3)o2 materials in 18650 high power batteries. Journal of Power Sources, 196:10322 10327, 12 2011b. doi: 10.1016/j. jpowsour.2011.08.042. ISSN 03787753. Chengti Huang, Na Li, Jianqing Zhu, and Shengming Shi. Battery health state prediction based on singular spectrum analysis and transformer network. Electronics (Switzerland), 13, 7 2024. ISSN 20799292. Gao Huang, Zhuang Liu, Laurens van der Maaten, and Kilian Q. Weinberger. Densely connected convolutional networks, 2018. URL https://arxiv.org/abs/1608.06993. J. Jaguemont, L. Boulon, and Y. Dube. comprehensive review of lithium-ion batteries used in hybrid and electric vehicles at cold temperatures. Applied Energy, 164:99 114, 2 2016. ISSN 03062619. doi: 10.1016/j.apenergy. 2015.11.034. Peter M. Kekenes-Huskey, Caitlin E. Scott, and Selcuk Atalay. Quantifying the influence of the crowded cytoplasm on small molecule diffusion. Journal of Physical Chemistry B, 120:86968706, 8 2016. ISSN 15205207. doi: 10.1021/acs.jpcb.6b03887. Feyza Duman Keles, Pruthuvi Mahesakya Wijewardena, and Chinmay Hegde. On the computational complexity of selfattention, 2022. URL https://arxiv.org/abs/2209.04881. Gustav Larsson, Michael Maire, and Gregory Shakhnarovich. Fractalnet: Ultra-deep neural networks without residuals. CoRR, abs/1605.07648, 2016. URL http://arxiv.org/abs/ 1605.07648. Kunchang Li, Xinhao Li, Yi Wang, Yinan He, Yali Wang, Limin Wang, and Yu Qiao. VideoMamba: State Space Model for Efficient Video Understanding, 3 2024. URL http://arxiv.org/abs/2403.06977. arXiv:2403.06977 [cs]. Matthew Li, Jun Lu, Zhongwei Chen, and Khalil Amine. 30 Years of Lithium-Ion Batteries. Advanced Materials, ISSN 0935-9648, 1521-4095. 30(33):1800561, 8 2018. doi: 10.1002/adma.201800561. URL https://onlinelibrary. wiley.com/doi/10.1002/adma.201800561. Xiaoyu Li, Changgui Yuan, and Zhenpo Wang. State of health estimation for li-ion battery via partial incremental capacity analysis based on support vector regression. Energy, 203, 2020. ISSN 03605442. doi: 10.1016/j.energy. 2020.117852. Yi Li, Kailong Liu, Aoife M. Foley, A. Zulke, Maitane Berecibar, E. Nanini-Maury, J. Van Mierlo, and Harry E. Hoster. Data-driven health estimation and lifetime prediction of lithium-ion batteries: review. Renewable and Sustainable Energy Reviews, 113, 10 2019. ISSN 18790690. doi: 10.1016/j.rser.2019.109254. Opher Lieber, Barak Lenz, Hofit Bata, Gal Cohen, Jhonathan Osin, Itay Dalmedigos, Erez Safahi, Shaked Meirom, Yonatan Belinkov, Shai Shalev-Shwartz, Omri Abend, Raz Alon, Tomer Asida, Amir Bergman, Roman Glozman, Michael Gokhman, Avashalom Manevich, Nir Ratner, Noam Rozen, Erez Shwartz, Mor Zusman, and Yoav Shoham. Jamba: Hybrid Transformer-Mamba Language Model, 3 2024. URL http://arxiv.org/abs/2403.19887. arXiv:2403.19887 [cs] version: 1. Jiaju Lin and Haoxuan Hu. Audio Mamba: Pretrained Audio State Space Model For Audio Tagging, 5 2024. URL http: //arxiv.org/abs/2405.13636. arXiv:2405.13636 [cs, eess]. Guangming Liu, Languang Lu, Hong Fu, Jianfeng Hua, Jianqiu Li, Minggao Ouyang, Yanjing Wang, Shan Xue, and Ping Chen. comparative study of equivalent circuit models and enhanced equivalent circuit models of lithiumIn 2014 ion batteries with different model structures. IEEE Conference and Expo Transportation Electrification Asia-Pacific (ITEC Asia-Pacific), pages 16, 8 2014. doi: 10.1109/ITEC-AP.2014.6940946. URL https://ieeexplore. ieee.org/document/6940946/metrics#metrics. Yongtao Liu, Chuanpan Liu, Yongjie Liu, Feiran Sun, Jie Qiao, and Ting Xu. Review on degradation mechanism and health state estimation methods of lithium-ion batteries, 8 2023. ISSN 25890379. Yue Liu, Yunjie Tian, Yuzhong Zhao, Hongtian Yu, Lingxi Xie, Yaowei Wang, Qixiang Ye, and Yunfan Liu. VMamba: Visual State Space Model, 5 2024. URL http://arxiv.org/ abs/2401.10166. arXiv:2401.10166 [cs]. Ilya Loshchilov and Frank Hutter. Decoupled weight decay regularization. CoRR, abs/1711.05101, 2017. URL http: //arxiv.org/abs/1711.05101. Jiahuan Lu, Rui Xiong, Jinpeng Tian, Chenxu Wang, and Fengchun Sun. Deep learning to estimate lithium-ion battery state of health without additional degradation experiments. Nature Communications, 14(1):2760, 5 2023. ISSN 2041-1723. doi: 10.1038/s41467-023-38458-w. URL https://www.nature.com/articles/s41467-023-38458-w. Yahia Mazzi, Hicham Ben Sassi, and Fatima Errahimi. Lithium-ion battery state of health estimation using hybrid model based on convolutional neural network and bidirectional gated recurrent unit. Engineering Applications of Artificial Intelligence, 127:107199, 1 ISSN 0952-1976. doi: 10.1016/j.engappai.2023. 2024. -13J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models 107199. article/pii/S0952197623013830. URL https://www.sciencedirect.com/science/ Paulius et.al. Micikevicius. Mixed precision training, 2018. derman. [S5] Simplified State Space Layers for Sequence Modeling, 3 2023. URL http://arxiv.org/abs/2208.04933. arXiv:2208.04933 [cs]. URL https://arxiv.org/abs/1710.03740. Kosaku Nakano and Kenji Tanaka. Transformer-based online battery state of health estimation from elecdoi: 10.46855/ tric vehicle driving data. energy-proceedings-11038. 1 2024. Eric Nguyen, Karan Goel, Albert Gu, Gordon W. Downs, Preey Shah, Tri Dao, Stephen A. Baccus, and Christopher Re. S4ND: Modeling Images and Videos as Multidimensional Signals Using State Spaces, 10 2022. URL http: //arxiv.org/abs/2210.06583. arXiv:2210.06583 [cs, eess]. Minggao Ouyang, Dongsheng Ren, Languang Lu, Jianqiu Li, Xuning Feng, Xuebing Han, and Guangming Liu. Overcharge-induced capacity fading analysis for large format lithium-ion batteries with liyni1/3co1/3mn1/3o2 + liymn2o4 composite cathode. Journal of Power Sources, ISSN 03787753. doi: 10.1016/j. 279:626635, 4 2015. jpowsour.2015.01.051. Martin Popel and Ondˇrej Bojar. Training tips for the transformer model. The Prague Bulletin of Mathematical Linguistics, 110(1):4370, 4 2018. ISSN 1804-0462. doi: 10.2478/pralin-2018-0002. URL http://dx.doi.org/10.2478/ pralin-2018-0002. Lei Ren, Jiabao Dong, Xiaokang Wang, Zihao Meng, Li Zhao, and M. Jamal Deen. data-driven auto-cnnlstm prediction model for lithium-ion battery remaining useful life. IEEE Transactions on Industrial Informatics, 17:34783487, 5 2021. ISSN 19410050. doi: 10.1109/TII. 2020.3008223. Zhong Ren and Changqing Du. review of machine learning state-of-charge and state-of-health estimation algorithms for lithium-ion batteries. Energy Reports, 9:29933021, 12 2023. ISSN 23524847. doi: 10.1016/j.egyr.2023.01.108. B. Saha and K. Goebel. Battery data set. NASA Ames Prognostics Data Repository, NASA Ames Research Center, Moffett Field, CA, 2007. URL https://phm-datasets.s3. amazonaws.com/NASA/5.+Battery+Data+Set.zip. Kristen A. Severson, Peter M. Attia, Norman Jin, Nicholas Perkins, Benben Jiang, Zi Yang, Michael H. Chen, Muratahan Aykol, Patrick K. Herring, Dimitrios Fraggedakis, Martin Z. Bazant, Stephen J. Harris, William C. Chueh, and Richard D. Braatz. Data-driven prediction of battery cycle life before capacity degradation. Nature Energy, 4(5):383391, 5 2019. doi: 10. 1038/s41560-019-0356-8. URL https://doi.org/10.1038/ s41560-019-0356-8. ISSN 2058-7546. Jiangwei Shen, Wensai Ma, Xing Shu, Shiquan Shen, Zheng Chen, and Yonggang Liu. Accurate state of health estimation for lithium-ion batteries under random charging scenarios. Energy, 279, 9 2023. ISSN 03605442. doi: 10.1016/j.energy.2023.128092. Zhuangwei Shi. MambaStock: Selective state space model for stock prediction, 2 2024. URL http://arxiv.org/abs/2402. 18959. arXiv:2402.18959 [cs, q-fin]. Jimmy T. H. Smith, Andrew Warrington, and Scott W. LinYandan Tan, Yandan Tan, Guangcai Zhao, and Guangcai Zhao. Transfer learning with long short-term memory network for state-of-health prediction of lithium-ion batIEEE Transactions on Industrial Electronics, 67: teries. 87238731, 10 2020. ISSN 15579948. doi: 10.1109/TIE. 2019.2946551. Huixin Tian, Pengliang Qin, Kun Li, and Zhen Zhao. review of the state of health for lithium-ion batteries: Journal of Cleaner Research status and suggestions. Production, 261, 7 2020. ISSN 09596526. doi: 10.1016/j. jclepro.2020.120813. Zheming Tong, Jiazhi Miao, Shuiguang Tong, and Yingying Lu. Early prediction of remaining useful life for lithiumion batteries based on hybrid machine learning method. Journal of Cleaner Production, 317, 10 2021. ISSN 09596526. doi: 10.1016/j.jclepro.2021.128265. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz Kaiser, and Illia Polosukhin. Attention Is All You Need, 6 2017. arXiv:1706.03762 URL http://arxiv.org/abs/1706.03762. [cs] version: 1. J. Vetter, P. Novak, M. R. Wagner, C. Veit, K. C. Moller, J. O. Besenhard, M. Winter, M. Wohlfahrt-Mehrens, C. Vogler, and A. Hammouche. Ageing mechanisms in lithium-ion batteries. Journal of Power Sources, 147:269281, 9 2005. ISSN 03787753. doi: 10.1016/j.jpowsour.2005.01.006. Thomas Waldmann, Marcel Wilka, Michael Kasper, Meike Fleischhammer, and Margret Wohlfahrt-Mehrens. Temperature dependent ageing mechanisms in lithium-ion batteries - post-mortem study. Journal of Power Sources, 262:129135, 9 2014. ISSN 03787753. doi: 10.1016/j. jpowsour.2014.03.112. Zifu Wan, Yuhao Wang, Silong Yong, Pingping Zhang, Simon Stepputtis, Katia Sycara, and Yaqi Xie. Sigma: Siamese Mamba Network for Multi-Modal Semantic Segmentation, 4 2024. URL http://arxiv.org/abs/2404.04256. arXiv:2404.04256 [cs]. Lubing Wang, Yikai Jia, and Jun Xu. Mechanistic understanding of the electrochemo-dependent mechanical behaviors of battery anodes. Journal of Power Sources, 510, 10 2021. ISSN 03787753. doi: 10.1016/j.jpowsour.2021. 230428. Qingsong Wang, Ping Ping, Xuejuan Zhao, Guanquan Chu, Jinhua Sun, and Chunhua Chen. Thermal runaway caused fire and explosion of lithium ion battery. Journal of Power Sources, 208:210224, 6 2012. ISSN 03787753. doi: 10. 1016/j.jpowsour.2012.02.038. Ji Wu, Junxiong Chen, Xiong Feng, Haitao Xiang, and Qiao Zhu. State of health estimation of lithium-ion batteries Journal of using autoencoders and ensemble learning. Energy Storage, 55, 11 2022. doi: 10.1016/j.est.2022.105708. ISSN 2352152X. Mitsuru Yamada, Tatsuya Watanabe, Takao Gunji, Jianfei Wu, and Futoshi Matsumoto. Review of the design of -14J. I. Olalde and S.Kirch et. al. SambaMixer: State of Health Prediction of Li-ion Batteries using Mamba State Space Models current collectors for improving the battery performance in lithium-ion and post-lithium-ion batteries. Electrochem, 1:124159, 6 2020. doi: 10.3390/ electrochem1020011. ISSN 26733293. Naixing Yang, Xiongwen Zhang, Binbin Shang, and Guojun Li. Unbalanced discharging and aging due to temperature differences among the cells in lithium-ion battery pack Journal of Power Sources, with parallel combination. 306:733741, 2 2016. ISSN 03787753. doi: 10.1016/j. jpowsour.2015.12.079. Niankai Yang, Ziyou Song, Heath Hofmann, and Jing Sun. Robust state of health estimation of lithium-ion batteries using convolutional neural network and random forest. 10 2020. doi: 10.48550/arxiv.2010.10452. URL http://arxiv. org/abs/2010.10452. Xiao Guang Yang, Yongjun Leng, Guangsheng Zhang, Shanhai Ge, and Chao Yang Wang. Modeling of lithium plating induced aging of lithium-ion batteries: Transition from linear to nonlinear aging. Journal of Power Sources, 360: 2840, 2017. ISSN 03787753. doi: 10.1016/j.jpowsour. 2017.05.110. Quanzheng Yao, Xianhua Song, and Wei Xie. State lithium-ion battery based on of health estimation of cnnwnnwlstm. Complex and Intelligent Systems, 10: 29192936, 4 2024. doi: 10.1007/ s40747-023-01300-3. ISSN 21986053. Jing Zeng and Sifeng Liu. Research on aging mechanism and state of health prediction in lithium batteries, 11 2023. ISSN 2352152X. Zeyu Zhang, Akide Liu, Ian Reid, Richard Hartley, Bohan Zhuang, and Hao Tang. Motion Mamba: Efficient and Long Sequence Motion Generation, 8 2024. URL http: //arxiv.org/abs/2403.07487. arXiv:2403.07487 [cs]. Lianghui Zhu, Bencheng Liao, Qian Zhang, Xinlong Wang, Wenyu Liu, and Xinggang Wang. Vision Mamba: Efficient Visual Representation Learning with Bidirectional State Space Model, 2 2024a. URL http://arxiv.org/abs/2401. 09417. arXiv:2401.09417 [cs]. Xinshan Zhu, Chengqian Xu, Tianbao Song, Zhen Huang, and Yun Zhang. Sparse self-attentive transformer with multiscale feature fusion on long-term soh forecasting. IEEE Transactions on Power Electronics, 8 2024b. ISSN 19410107. Zhenyu Zhu, Qing Yang, Xin Liu, and Dexin Gao. Attentionbased cnn-bilstm for soh and rul estimation of lithiumion batteries. Journal of Algorithms and Computational Technology, 16, 2022. ISSN 17483026. doi: 10.1177/ 17483026221130598. Wang Zichen and Du Changqing. comprehensive review on thermal management systems for power lithium-ion batteries. Renewable and Sustainable Energy Reviews, 139, 4 2021. ISSN 18790690. doi: 10.1016/j.rser.2020.110685. student research Ignacio Olalde-Verano is Jose at UNED, Spain. doctoral His on machine focuses learning techniques applied to industry 4.0. Masters Degree in Research in Industrial Technologies at UNED, the studied Technical Engineering at University of Zaragoza and adapted to the degree at the University of Leon. Since 2009 works in the automotive industry. Sascha Kirch is doctoral student at UNED, Spain. His research focuses on self-supervised multi-modal generative deeplearning. He received his M.Sc. degree for Communication and Information from UNED, Spain. He received his B.Eng. degree in electrical engineering from the Cooperative State University Baden-Wuerttemberg (DHBW), Germany. Sascha is member of IEEEs honor society Eta Kappa Nu and president of the chapter Nu Alpha. in Electronic Systems several National Clara Perez-Molina received her M.Sc. degree in Physics from the Complutense University in Madrid and her PhD in Industrial Engineering from the Spanish for Distance Education University (UNED). She has worked as researcher in and European Projects and has published different International technical Journals and Conferences, as well as several teaching books. She is currently an Associate Professor with tenure of the Electrical and Computer Engineering Department at UNED. Her research activities are centered on Educational Competences and Technology Enhanced Learning applied to Higher Education in addition to Renewable Energy Management and Artificial Intelligence techniques. reports and research articles for Sergio Martın is Associate Professor at UNED (National University for Distance Education, Spain). He is PhD by the Electrical and Computer Engineering Department of the Industrial Engineering School of UNED. He is Computer Engineer in Distributed Applications and Systems by the Carlos III University of Madrid. He teaches subjects related to microelectronics and digital electronics since 2007 in the Industrial Engineering School of UNED. He has participated since 2002 in national and international research projects related to mobile devices, ambient intelligence, and location-based technologies as well as in projects related to e-learning, virtual and remote labs, and new technologies applied to distance education. He has published more than 200 papers both in international journals and conferences. -15-

